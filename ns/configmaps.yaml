apiVersion: v1
items:
- apiVersion: v1
  data:
    config.yaml: |-
      "resourceRules":
        "cpu":
          "containerLabel": "container"
          "containerQuery": |
            sum by (<<.GroupBy>>) (
              irate (
                  container_cpu_usage_seconds_total{<<.LabelMatchers>>,container!="",pod!=""}[120s]
              )
            )
          "nodeQuery": |
            sum by (<<.GroupBy>>) (
              1 - irate(
                node_cpu_seconds_total{mode="idle"}[60s]
              )
              * on(namespace, pod) group_left(node) (
                node_namespace_pod:kube_pod_info:{<<.LabelMatchers>>}
              )
            )
            or sum by (<<.GroupBy>>) (
              1 - irate(
                windows_cpu_time_total{mode="idle", job="windows-exporter",<<.LabelMatchers>>}[4m]
              )
            )
          "resources":
            "overrides":
              "namespace":
                "resource": "namespace"
              "node":
                "resource": "node"
              "pod":
                "resource": "pod"
        "memory":
          "containerLabel": "container"
          "containerQuery": |
            sum by (<<.GroupBy>>) (
              container_memory_working_set_bytes{<<.LabelMatchers>>,container!="",pod!=""}
            )
          "nodeQuery": |
            sum by (<<.GroupBy>>) (
              node_memory_MemTotal_bytes{job="node-exporter",<<.LabelMatchers>>}
              -
              node_memory_MemAvailable_bytes{job="node-exporter",<<.LabelMatchers>>}
            )
            or sum by (<<.GroupBy>>) (
              windows_cs_physical_memory_bytes{job="windows-exporter",<<.LabelMatchers>>}
              -
              windows_memory_available_bytes{job="windows-exporter",<<.LabelMatchers>>}
            )
          "resources":
            "overrides":
              "instance":
                "resource": "node"
              "namespace":
                "resource": "namespace"
              "pod":
                "resource": "pod"
        "window": "5m"
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: metrics-adapter
      app.kubernetes.io/name: prometheus-adapter
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 0.12.0
    name: adapter-config
    namespace: monitoring
- apiVersion: v1
  data:
    config.yml: |-
      "modules":
        "http_2xx":
          "http":
            "preferred_ip_protocol": "ip4"
          "prober": "http"
        "http_post_2xx":
          "http":
            "method": "POST"
            "preferred_ip_protocol": "ip4"
          "prober": "http"
        "irc_banner":
          "prober": "tcp"
          "tcp":
            "preferred_ip_protocol": "ip4"
            "query_response":
            - "send": "NICK prober"
            - "send": "USER prober prober prober :prober"
            - "expect": "PING :([^ ]+)"
              "send": "PONG ${1}"
            - "expect": "^:[^ ]+ 001"
        "pop3s_banner":
          "prober": "tcp"
          "tcp":
            "preferred_ip_protocol": "ip4"
            "query_response":
            - "expect": "^+OK"
            "tls": true
            "tls_config":
              "insecure_skip_verify": false
        "ssh_banner":
          "prober": "tcp"
          "tcp":
            "preferred_ip_protocol": "ip4"
            "query_response":
            - "expect": "^SSH-2.0-"
        "tcp_connect":
          "prober": "tcp"
          "tcp":
            "preferred_ip_protocol": "ip4"
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/name: blackbox-exporter
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 0.27.0
    name: blackbox-exporter-configuration
    namespace: monitoring
- apiVersion: v1
  data:
    alertmanager-overview.json: |-
      {
          "graphTooltip": 1,
          "panels": [
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "panels": [

                  ],
                  "title": "Alerts",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "description": "current set of alerts stored in the Alertmanager",
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 1
                  },
                  "id": 2,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "sum(alertmanager_alerts{namespace=~\"$namespace\",service=~\"$service\"}) by (namespace,service,instance)",
                          "intervalFactor": 2,
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Alerts",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "description": "rate of successful and invalid alerts received by the Alertmanager",
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 1
                  },
                  "id": 3,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "sum(rate(alertmanager_alerts_received_total{namespace=~\"$namespace\",service=~\"$service\"}[$__rate_interval])) by (namespace,service,instance)",
                          "intervalFactor": 2,
                          "legendFormat": "{{instance}} Received"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "sum(rate(alertmanager_alerts_invalid_total{namespace=~\"$namespace\",service=~\"$service\"}[$__rate_interval])) by (namespace,service,instance)",
                          "intervalFactor": 2,
                          "legendFormat": "{{instance}} Invalid"
                      }
                  ],
                  "title": "Alerts receive rate",
                  "type": "timeseries"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 8
                  },
                  "id": 4,
                  "panels": [

                  ],
                  "title": "Notifications",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "description": "rate of successful and invalid notifications sent by the Alertmanager",
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 9
                  },
                  "id": 5,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "repeat": "integration",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "sum(rate(alertmanager_notifications_total{namespace=~\"$namespace\",service=~\"$service\", integration=\"$integration\"}[$__rate_interval])) by (integration,namespace,service,instance)",
                          "intervalFactor": 2,
                          "legendFormat": "{{instance}} Total"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "sum(rate(alertmanager_notifications_failed_total{namespace=~\"$namespace\",service=~\"$service\", integration=\"$integration\"}[$__rate_interval])) by (integration,namespace,service,instance)",
                          "intervalFactor": 2,
                          "legendFormat": "{{instance}} Failed"
                      }
                  ],
                  "title": "$integration: Notifications Send Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "description": "latency of notifications sent by the Alertmanager",
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 9
                  },
                  "id": 6,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "repeat": "integration",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "histogram_quantile(0.99,\n  sum(rate(alertmanager_notification_latency_seconds_bucket{namespace=~\"$namespace\",service=~\"$service\", integration=\"$integration\"}[$__rate_interval])) by (le,namespace,service,instance)\n)\n",
                          "intervalFactor": 2,
                          "legendFormat": "{{instance}} 99th Percentile"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "histogram_quantile(0.50,\n  sum(rate(alertmanager_notification_latency_seconds_bucket{namespace=~\"$namespace\",service=~\"$service\", integration=\"$integration\"}[$__rate_interval])) by (le,namespace,service,instance)\n)\n",
                          "intervalFactor": 2,
                          "legendFormat": "{{instance}} Median"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "sum(rate(alertmanager_notification_latency_seconds_sum{namespace=~\"$namespace\",service=~\"$service\", integration=\"$integration\"}[$__rate_interval])) by (namespace,service,instance)\n/\nsum(rate(alertmanager_notification_latency_seconds_count{namespace=~\"$namespace\",service=~\"$service\", integration=\"$integration\"}[$__rate_interval])) by (namespace,service,instance)\n",
                          "intervalFactor": 2,
                          "legendFormat": "{{instance}} Average"
                      }
                  ],
                  "title": "$integration: Notification Duration",
                  "type": "timeseries"
              }
          ],
          "schemaVersion": 39,
          "tags": [
              "alertmanager-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": false,
                          "text": "Prometheus",
                          "value": "Prometheus"
                      },
                      "hide": 0,
                      "label": "Data Source",
                      "name": "datasource",
                      "query": "prometheus",
                      "type": "datasource"
                  },
                  {
                      "current": {
                          "selected": false,
                          "text": "",
                          "value": ""
                      },
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "includeAll": false,
                      "label": "namespace",
                      "name": "namespace",
                      "query": "label_values(alertmanager_alerts, namespace)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "current": {
                          "selected": false,
                          "text": "",
                          "value": ""
                      },
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "includeAll": false,
                      "label": "service",
                      "name": "service",
                      "query": "label_values(alertmanager_alerts, service)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "current": {
                          "selected": false,
                          "text": "$__all",
                          "value": "$__all"
                      },
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 2,
                      "includeAll": true,
                      "name": "integration",
                      "query": "label_values(alertmanager_notifications_total{integration=~\".*\"}, integration)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timepicker": {
              "refresh_intervals": [
                  "30s"
              ]
          },
          "timezone": "utc",
          "title": "Alertmanager / Overview",
          "uid": "alertmanager-overview"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-alertmanager-overview
    namespace: monitoring
- apiVersion: v1
  data:
    apiserver.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "description": "The SLO (service level objective) and other metrics displayed on this dashboard are for informational purposes only.",
                  "gridPos": {
                      "h": 2,
                      "w": 24,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "options": {
                      "content": "The SLO (service level objective) and other metrics displayed on this dashboard are for informational purposes only."
                  },
                  "pluginVersion": "v11.4.0",
                  "title": "Notice",
                  "type": "text"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "description": "How many percent of requests (both read and write) in 30 days have been answered successfully and fast enough?",
                  "fieldConfig": {
                      "defaults": {
                          "decimals": 3,
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 0,
                      "y": 2
                  },
                  "id": 2,
                  "interval": "1m",
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "apiserver_request:availability30d{verb=\"all\", cluster=\"$cluster\"}"
                      }
                  ],
                  "title": "Availability (30d) > 99.000%",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "description": "How much error budget is left looking at our 0.990% availability guarantees?",
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100
                          },
                          "decimals": 3,
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 16,
                      "x": 8,
                      "y": 2
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "100 * (apiserver_request:availability30d{verb=\"all\", cluster=\"$cluster\"} - 0.990000)",
                          "legendFormat": "errorbudget"
                      }
                  ],
                  "title": "ErrorBudget (30d) > 99.000%",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "description": "How many percent of read requests (LIST,GET) in 30 days have been answered successfully and fast enough?",
                  "fieldConfig": {
                      "defaults": {
                          "decimals": 3,
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 0,
                      "y": 9
                  },
                  "id": 4,
                  "interval": "1m",
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "apiserver_request:availability30d{verb=\"read\", cluster=\"$cluster\"}"
                      }
                  ],
                  "title": "Read Availability (30d)",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "description": "How many read requests (LIST,GET) per second do the apiservers get by code?",
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "reqps"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/2../i"
                              },
                              "properties": [
                                  {
                                      "id": "color",
                                      "value": "#56A64B"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/3../i"
                              },
                              "properties": [
                                  {
                                      "id": "color",
                                      "value": "#F2CC0C"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/4../i"
                              },
                              "properties": [
                                  {
                                      "id": "color",
                                      "value": "#3274D9"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/5../i"
                              },
                              "properties": [
                                  {
                                      "id": "color",
                                      "value": "#E02F44"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 6,
                      "y": 9
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (code) (code_resource:apiserver_request_total:rate5m{verb=\"read\", cluster=\"$cluster\"})",
                          "legendFormat": "{{ code }}"
                      }
                  ],
                  "title": "Read SLI - Requests",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "description": "How many percent of read requests (LIST,GET) per second are returned with errors (5xx)?",
                  "fieldConfig": {
                      "defaults": {
                          "min": 0,
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 12,
                      "y": 9
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\"read\",code=~\"5..\", cluster=\"$cluster\"}) / sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\"read\", cluster=\"$cluster\"})",
                          "legendFormat": "{{ resource }}"
                      }
                  ],
                  "title": "Read SLI - Errors",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "description": "How many seconds is the 99th percentile for reading (LIST|GET) a given resource?",
                  "fieldConfig": {
                      "defaults": {
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 18,
                      "y": 9
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "cluster_quantile:apiserver_request_sli_duration_seconds:histogram_quantile{verb=\"read\", cluster=\"$cluster\"}",
                          "legendFormat": "{{ resource }}"
                      }
                  ],
                  "title": "Read SLI - Duration",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "description": "How many percent of write requests (POST|PUT|PATCH|DELETE) in 30 days have been answered successfully and fast enough?",
                  "fieldConfig": {
                      "defaults": {
                          "decimals": 3,
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 0,
                      "y": 16
                  },
                  "id": 8,
                  "interval": "1m",
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "apiserver_request:availability30d{verb=\"write\", cluster=\"$cluster\"}"
                      }
                  ],
                  "title": "Write Availability (30d)",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "description": "How many write requests (POST|PUT|PATCH|DELETE) per second do the apiservers get by code?",
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "reqps"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/2../i"
                              },
                              "properties": [
                                  {
                                      "id": "color",
                                      "value": "#56A64B"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/3../i"
                              },
                              "properties": [
                                  {
                                      "id": "color",
                                      "value": "#F2CC0C"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/4../i"
                              },
                              "properties": [
                                  {
                                      "id": "color",
                                      "value": "#3274D9"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/5../i"
                              },
                              "properties": [
                                  {
                                      "id": "color",
                                      "value": "#E02F44"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 6,
                      "y": 16
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (code) (code_resource:apiserver_request_total:rate5m{verb=\"write\", cluster=\"$cluster\"})",
                          "legendFormat": "{{ code }}"
                      }
                  ],
                  "title": "Write SLI - Requests",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "description": "How many percent of write requests (POST|PUT|PATCH|DELETE) per second are returned with errors (5xx)?",
                  "fieldConfig": {
                      "defaults": {
                          "min": 0,
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 12,
                      "y": 16
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\"write\",code=~\"5..\", cluster=\"$cluster\"}) / sum by (resource) (code_resource:apiserver_request_total:rate5m{verb=\"write\", cluster=\"$cluster\"})",
                          "legendFormat": "{{ resource }}"
                      }
                  ],
                  "title": "Write SLI - Errors",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "description": "How many seconds is the 99th percentile for writing (POST|PUT|PATCH|DELETE) a given resource?",
                  "fieldConfig": {
                      "defaults": {
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 18,
                      "y": 16
                  },
                  "id": 11,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "cluster_quantile:apiserver_request_sli_duration_seconds:histogram_quantile{verb=\"write\", cluster=\"$cluster\"}",
                          "legendFormat": "{{ resource }}"
                      }
                  ],
                  "title": "Write SLI - Duration",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "min": 0,
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 23
                  },
                  "id": 12,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(workqueue_adds_total{job=\"apiserver\", instance=~\"$instance\", cluster=\"$cluster\"}[$__rate_interval])) by (instance, name)",
                          "legendFormat": "{{instance}} {{name}}"
                      }
                  ],
                  "title": "Work Queue Add Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "min": 0,
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 23
                  },
                  "id": 13,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(workqueue_depth{job=\"apiserver\", instance=~\"$instance\", cluster=\"$cluster\"}[$__rate_interval])) by (instance, name)",
                          "legendFormat": "{{instance}} {{name}}"
                      }
                  ],
                  "title": "Work Queue Depth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "min": 0,
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 30
                  },
                  "id": 14,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(workqueue_queue_duration_seconds_bucket{job=\"apiserver\", instance=~\"$instance\", cluster=\"$cluster\"}[$__rate_interval])) by (instance, name, le))",
                          "legendFormat": "{{instance}} {{name}}"
                      }
                  ],
                  "title": "Work Queue Latency",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 0,
                      "y": 37
                  },
                  "id": 15,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "process_resident_memory_bytes{job=\"apiserver\",instance=~\"$instance\", cluster=\"$cluster\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Memory",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "min": 0,
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 8,
                      "y": 37
                  },
                  "id": 16,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "rate(process_cpu_seconds_total{job=\"apiserver\",instance=~\"$instance\", cluster=\"$cluster\"}[$__rate_interval])",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "CPU usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 16,
                      "y": 37
                  },
                  "id": 17,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "go_goroutines{job=\"apiserver\",instance=~\"$instance\", cluster=\"$cluster\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Goroutines",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"apiserver\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "name": "instance",
                      "query": "label_values(up{job=\"apiserver\", cluster=\"$cluster\"}, instance)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / API server",
          "uid": "09ec8aa1e996d6ffcd6817bbaff4db1b"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-apiserver
    namespace: monitoring
- apiVersion: v1
  data:
    cluster-total.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Current Rate of Bytes Received",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Current Rate of Bytes Transmitted",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Bytes/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "binBps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Packets/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "pps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Namespace"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down",
                                              "url": "/d/8b7a8b326d7a6f1f04244066368c67af/kubernetes-networking-namespace-pods?${datasource:queryparam}&var-cluster=${cluster}&var-namespace=${__data.fields.Namespace}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 24,
                      "x": 0,
                      "y": 9
                  },
                  "id": 3,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "avg by (namespace) (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "avg by (namespace) (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Current Status",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "namespace",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true,
                                  "Time 7": true,
                                  "Time 8": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Time 7": 6,
                                  "Time 8": 7,
                                  "Value #A": 9,
                                  "Value #B": 10,
                                  "Value #C": 11,
                                  "Value #D": 12,
                                  "Value #E": 13,
                                  "Value #F": 14,
                                  "Value #G": 15,
                                  "Value #H": 16,
                                  "namespace": 8
                              },
                              "renameByName": {
                                  "Value #A": "Rx Bytes",
                                  "Value #B": "Tx Bytes",
                                  "Value #C": "Rx Bytes (Avg)",
                                  "Value #D": "Tx Bytes (Avg)",
                                  "Value #E": "Rx Packets",
                                  "Value #F": "Tx Packets",
                                  "Value #G": "Rx Packets Dropped",
                                  "Value #H": "Tx Packets Dropped",
                                  "namespace": "Namespace"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 18
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "avg by (namespace) (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Rate of Bytes Received",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 18
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "avg by (namespace) (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Rate of Bytes Transmitted",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 27
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Receive Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 27
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Transmit Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 36
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 36
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 45
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 45
                  },
                  "id": 11,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (namespace) (\n    rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 54
                  },
                  "id": 12,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (instance) (\n    rate(node_netstat_Tcp_RetransSegs{cluster=\"$cluster\"}[$__rate_interval]) / rate(node_netstat_Tcp_OutSegs{cluster=\"$cluster\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of TCP Retransmits out of all sent segments",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 54
                  },
                  "id": 13,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (instance) (\n    rate(node_netstat_TcpExt_TCPSynRetrans{cluster=\"$cluster\"}[$__rate_interval]) / rate(node_netstat_Tcp_RetransSegs{cluster=\"$cluster\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of TCP SYN Retransmits out of all retransmits",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Networking / Cluster",
          "uid": "ff635a025bcfea7bc3dd4f508990a3e9"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-cluster-total
    namespace: monitoring
- apiVersion: v1
  data:
    controller-manager.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 4,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(up{cluster=\"$cluster\", job=\"kube-controller-manager\"})",
                          "instant": true
                      }
                  ],
                  "title": "Up",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 20,
                      "x": 4,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(workqueue_adds_total{cluster=\"$cluster\", job=\"kube-controller-manager\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, name)",
                          "legendFormat": "{{cluster}} {{instance}} {{name}}"
                      }
                  ],
                  "title": "Work Queue Add Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 7
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(workqueue_depth{cluster=\"$cluster\", job=\"kube-controller-manager\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, name)",
                          "legendFormat": "{{cluster}} {{instance}} {{name}}"
                      }
                  ],
                  "title": "Work Queue Depth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 14
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(workqueue_queue_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-controller-manager\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, name, le))",
                          "legendFormat": "{{cluster}} {{instance}} {{name}}"
                      }
                  ],
                  "title": "Work Queue Latency",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 0,
                      "y": 21
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"2..\"}[$__rate_interval]))",
                          "legendFormat": "2xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"3..\"}[$__rate_interval]))",
                          "legendFormat": "3xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"4..\"}[$__rate_interval]))",
                          "legendFormat": "4xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{job=\"kube-controller-manager\", instance=~\"$instance\",code=~\"5..\"}[$__rate_interval]))",
                          "legendFormat": "5xx"
                      }
                  ],
                  "title": "Kube API Request Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 16,
                      "x": 8,
                      "y": 21
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-controller-manager\", instance=~\"$instance\", verb=\"POST\"}[$__rate_interval])) by (verb, le))",
                          "legendFormat": "{{verb}}"
                      }
                  ],
                  "title": "Post Request Latency 99th Quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 28
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-controller-manager\", instance=~\"$instance\", verb=\"GET\"}[$__rate_interval])) by (verb, le))",
                          "legendFormat": "{{verb}}"
                      }
                  ],
                  "title": "Get Request Latency 99th Quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 0,
                      "y": 35
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "process_resident_memory_bytes{cluster=\"$cluster\", job=\"kube-controller-manager\",instance=~\"$instance\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Memory",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 8,
                      "y": 35
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "rate(process_cpu_seconds_total{cluster=\"$cluster\", job=\"kube-controller-manager\",instance=~\"$instance\"}[$__rate_interval])",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "CPU usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 16,
                      "y": 35
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "go_goroutines{cluster=\"$cluster\", job=\"kube-controller-manager\",instance=~\"$instance\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Goroutines",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kube-controller-manager\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "instance",
                      "name": "instance",
                      "query": "label_values(up{cluster=\"$cluster\", job=\"kube-controller-manager\"}, instance)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Controller Manager",
          "uid": "72e0e05bef5099e5f049b05fdc429ed4"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-controller-manager
    namespace: monitoring
- apiVersion: v1
  data:
    grafana-overview.json: |-
      {
          "annotations": {
              "list": [
                  {
                      "builtIn": 1,
                      "datasource": "-- Grafana --",
                      "enable": true,
                      "hide": true,
                      "iconColor": "rgba(0, 211, 255, 1)",
                      "name": "Annotations & Alerts",
                      "target": {
                          "limit": 100,
                          "matchAny": false,
                          "tags": [

                          ],
                          "type": "dashboard"
                      },
                      "type": "dashboard"
                  }
              ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 0,
          "id": 3085,
          "iteration": 1631554945276,
          "links": [

          ],
          "panels": [
              {
                  "datasource": "$datasource",
                  "fieldConfig": {
                      "defaults": {
                          "mappings": [

                          ],
                          "noValue": "0",
                          "thresholds": {
                              "mode": "absolute",
                              "steps": [
                                  {
                                      "color": "green",
                                      "value": null
                                  },
                                  {
                                      "color": "red",
                                      "value": 80
                                  }
                              ]
                          }
                      },
                      "overrides": [

                      ]
                  },
                  "gridPos": {
                      "h": 5,
                      "w": 6,
                      "x": 0,
                      "y": 0
                  },
                  "id": 6,
                  "options": {
                      "colorMode": "value",
                      "graphMode": "area",
                      "justifyMode": "auto",
                      "orientation": "auto",
                      "reduceOptions": {
                          "calcs": [
                              "mean"
                          ],
                          "fields": "",
                          "values": false
                      },
                      "text": {

                      },
                      "textMode": "auto"
                  },
                  "pluginVersion": "8.1.3",
                  "targets": [
                      {
                          "expr": "grafana_alerting_result_total{job=~\"$job\", instance=~\"$instance\", state=\"alerting\"}",
                          "instant": true,
                          "interval": "",
                          "legendFormat": "",
                          "refId": "A"
                      }
                  ],
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Firing Alerts",
                  "type": "stat"
              },
              {
                  "datasource": "$datasource",
                  "fieldConfig": {
                      "defaults": {
                          "mappings": [

                          ],
                          "thresholds": {
                              "mode": "absolute",
                              "steps": [
                                  {
                                      "color": "green",
                                      "value": null
                                  },
                                  {
                                      "color": "red",
                                      "value": 80
                                  }
                              ]
                          }
                      },
                      "overrides": [

                      ]
                  },
                  "gridPos": {
                      "h": 5,
                      "w": 6,
                      "x": 6,
                      "y": 0
                  },
                  "id": 8,
                  "options": {
                      "colorMode": "value",
                      "graphMode": "area",
                      "justifyMode": "auto",
                      "orientation": "auto",
                      "reduceOptions": {
                          "calcs": [
                              "mean"
                          ],
                          "fields": "",
                          "values": false
                      },
                      "text": {

                      },
                      "textMode": "auto"
                  },
                  "pluginVersion": "8.1.3",
                  "targets": [
                      {
                          "expr": "sum(grafana_stat_totals_dashboard{job=~\"$job\", instance=~\"$instance\"})",
                          "interval": "",
                          "legendFormat": "",
                          "refId": "A"
                      }
                  ],
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Dashboards",
                  "type": "stat"
              },
              {
                  "datasource": "$datasource",
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "align": null,
                              "displayMode": "auto"
                          },
                          "mappings": [

                          ],
                          "thresholds": {
                              "mode": "absolute",
                              "steps": [
                                  {
                                      "color": "green",
                                      "value": null
                                  },
                                  {
                                      "color": "red",
                                      "value": 80
                                  }
                              ]
                          }
                      },
                      "overrides": [

                      ]
                  },
                  "gridPos": {
                      "h": 5,
                      "w": 12,
                      "x": 12,
                      "y": 0
                  },
                  "id": 10,
                  "options": {
                      "showHeader": true
                  },
                  "pluginVersion": "8.1.3",
                  "targets": [
                      {
                          "expr": "grafana_build_info{job=~\"$job\", instance=~\"$instance\"}",
                          "instant": true,
                          "interval": "",
                          "legendFormat": "",
                          "refId": "A"
                      }
                  ],
                  "timeFrom": null,
                  "timeShift": null,
                  "title": "Build Info",
                  "transformations": [
                      {
                          "id": "labelsToFields",
                          "options": {

                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Value": true,
                                  "branch": true,
                                  "container": true,
                                  "goversion": true,
                                  "namespace": true,
                                  "pod": true,
                                  "revision": true
                              },
                              "indexByName": {
                                  "Time": 7,
                                  "Value": 11,
                                  "branch": 4,
                                  "container": 8,
                                  "edition": 2,
                                  "goversion": 6,
                                  "instance": 1,
                                  "job": 0,
                                  "namespace": 9,
                                  "pod": 10,
                                  "revision": 5,
                                  "version": 3
                              },
                              "renameByName": {

                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "aliasColors": {

                  },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fieldConfig": {
                      "defaults": {
                          "links": [

                          ]
                      },
                      "overrides": [

                      ]
                  },
                  "fill": 1,
                  "fillGradient": 0,
                  "gridPos": {
                      "h": 8,
                      "w": 12,
                      "x": 0,
                      "y": 5
                  },
                  "hiddenSeries": false,
                  "id": 2,
                  "legend": {
                      "avg": false,
                      "current": false,
                      "max": false,
                      "min": false,
                      "show": true,
                      "total": false,
                      "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "nullPointMode": "null",
                  "options": {
                      "alertThreshold": true
                  },
                  "percentage": false,
                  "pluginVersion": "8.1.3",
                  "pointradius": 2,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [

                  ],
                  "spaceLength": 10,
                  "stack": true,
                  "steppedLine": false,
                  "targets": [
                      {
                          "expr": "sum by (status_code) (irate(grafana_http_request_duration_seconds_count{job=~\"$job\", instance=~\"$instance\"}[1m])) ",
                          "interval": "",
                          "legendFormat": "{{status_code}}",
                          "refId": "A"
                      }
                  ],
                  "thresholds": [

                  ],
                  "timeFrom": null,
                  "timeRegions": [

                  ],
                  "timeShift": null,
                  "title": "RPS",
                  "tooltip": {
                      "shared": true,
                      "sort": 0,
                      "value_type": "individual"
                  },
                  "type": "graph",
                  "xaxis": {
                      "buckets": null,
                      "mode": "time",
                      "name": null,
                      "show": true,
                      "values": [

                      ]
                  },
                  "yaxes": [
                      {
                          "$$hashKey": "object:157",
                          "format": "reqps",
                          "label": null,
                          "logBase": 1,
                          "max": null,
                          "min": null,
                          "show": true
                      },
                      {
                          "$$hashKey": "object:158",
                          "format": "short",
                          "label": null,
                          "logBase": 1,
                          "max": null,
                          "min": null,
                          "show": false
                      }
                  ],
                  "yaxis": {
                      "align": false,
                      "alignLevel": null
                  }
              },
              {
                  "aliasColors": {

                  },
                  "bars": false,
                  "dashLength": 10,
                  "dashes": false,
                  "datasource": "$datasource",
                  "fieldConfig": {
                      "defaults": {
                          "links": [

                          ]
                      },
                      "overrides": [

                      ]
                  },
                  "fill": 1,
                  "fillGradient": 0,
                  "gridPos": {
                      "h": 8,
                      "w": 12,
                      "x": 12,
                      "y": 5
                  },
                  "hiddenSeries": false,
                  "id": 4,
                  "legend": {
                      "avg": false,
                      "current": false,
                      "max": false,
                      "min": false,
                      "show": true,
                      "total": false,
                      "values": false
                  },
                  "lines": true,
                  "linewidth": 1,
                  "nullPointMode": "null",
                  "options": {
                      "alertThreshold": true
                  },
                  "percentage": false,
                  "pluginVersion": "8.1.3",
                  "pointradius": 2,
                  "points": false,
                  "renderer": "flot",
                  "seriesOverrides": [

                  ],
                  "spaceLength": 10,
                  "stack": false,
                  "steppedLine": false,
                  "targets": [
                      {
                          "exemplar": true,
                          "expr": "histogram_quantile(0.99, sum(irate(grafana_http_request_duration_seconds_bucket{instance=~\"$instance\", job=~\"$job\"}[$__rate_interval])) by (le)) * 1",
                          "interval": "",
                          "legendFormat": "99th Percentile",
                          "refId": "A"
                      },
                      {
                          "exemplar": true,
                          "expr": "histogram_quantile(0.50, sum(irate(grafana_http_request_duration_seconds_bucket{instance=~\"$instance\", job=~\"$job\"}[$__rate_interval])) by (le)) * 1",
                          "interval": "",
                          "legendFormat": "50th Percentile",
                          "refId": "B"
                      },
                      {
                          "exemplar": true,
                          "expr": "sum(irate(grafana_http_request_duration_seconds_sum{instance=~\"$instance\", job=~\"$job\"}[$__rate_interval])) * 1 / sum(irate(grafana_http_request_duration_seconds_count{instance=~\"$instance\", job=~\"$job\"}[$__rate_interval]))",
                          "interval": "",
                          "legendFormat": "Average",
                          "refId": "C"
                      }
                  ],
                  "thresholds": [

                  ],
                  "timeFrom": null,
                  "timeRegions": [

                  ],
                  "timeShift": null,
                  "title": "Request Latency",
                  "tooltip": {
                      "shared": true,
                      "sort": 0,
                      "value_type": "individual"
                  },
                  "type": "graph",
                  "xaxis": {
                      "buckets": null,
                      "mode": "time",
                      "name": null,
                      "show": true,
                      "values": [

                      ]
                  },
                  "yaxes": [
                      {
                          "$$hashKey": "object:210",
                          "format": "ms",
                          "label": null,
                          "logBase": 1,
                          "max": null,
                          "min": null,
                          "show": true
                      },
                      {
                          "$$hashKey": "object:211",
                          "format": "short",
                          "label": null,
                          "logBase": 1,
                          "max": null,
                          "min": null,
                          "show": true
                      }
                  ],
                  "yaxis": {
                      "align": false,
                      "alignLevel": null
                  }
              }
          ],
          "schemaVersion": 30,
          "tags": [

          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "dev-cortex",
                          "value": "dev-cortex"
                      },
                      "description": null,
                      "error": null,
                      "hide": 0,
                      "includeAll": false,
                      "label": null,
                      "multi": false,
                      "name": "datasource",
                      "options": [

                      ],
                      "query": "prometheus",
                      "queryValue": "",
                      "refresh": 1,
                      "regex": "",
                      "skipUrlSync": false,
                      "type": "datasource"
                  },
                  {
                      "allValue": ".*",
                      "current": {
                          "selected": false,
                          "text": [
                              "default/grafana"
                          ],
                          "value": [
                              "default/grafana"
                          ]
                      },
                      "datasource": "$datasource",
                      "definition": "label_values(grafana_build_info, job)",
                      "description": null,
                      "error": null,
                      "hide": 0,
                      "includeAll": true,
                      "label": null,
                      "multi": true,
                      "name": "job",
                      "options": [

                      ],
                      "query": {
                          "query": "label_values(grafana_build_info, job)",
                          "refId": "Billing Admin-job-Variable-Query"
                      },
                      "refresh": 1,
                      "regex": "",
                      "skipUrlSync": false,
                      "sort": 0,
                      "tagValuesQuery": "",
                      "tagsQuery": "",
                      "type": "query",
                      "useTags": false
                  },
                  {
                      "allValue": ".*",
                      "current": {
                          "selected": false,
                          "text": "All",
                          "value": "$__all"
                      },
                      "datasource": "$datasource",
                      "definition": "label_values(grafana_build_info, instance)",
                      "description": null,
                      "error": null,
                      "hide": 0,
                      "includeAll": true,
                      "label": null,
                      "multi": true,
                      "name": "instance",
                      "options": [

                      ],
                      "query": {
                          "query": "label_values(grafana_build_info, instance)",
                          "refId": "Billing Admin-instance-Variable-Query"
                      },
                      "refresh": 1,
                      "regex": "",
                      "skipUrlSync": false,
                      "sort": 0,
                      "tagValuesQuery": "",
                      "tagsQuery": "",
                      "type": "query",
                      "useTags": false
                  }
              ]
          },
          "time": {
              "from": "now-6h",
              "to": "now"
          },
          "timepicker": {
              "refresh_intervals": [
                  "10s",
                  "30s",
                  "1m",
                  "5m",
                  "15m",
                  "30m",
                  "1h",
                  "2h",
                  "1d"
              ]
          },
          "timezone": "",
          "title": "Grafana Overview",
          "uid": "6be0s85Mk",
          "version": 2
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-grafana-overview
    namespace: monitoring
- apiVersion: v1
  data:
    k8s-resources-cluster.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "cluster:node_cpu:ratio_rate5m{cluster=\"$cluster\"}",
                          "instant": true
                      }
                  ],
                  "title": "CPU Utilisation",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 4,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable{job=\"kube-state-metrics\",resource=\"cpu\",cluster=\"$cluster\"})",
                          "instant": true
                      }
                  ],
                  "title": "CPU Requests Commitment",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 8,
                      "y": 0
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable{job=\"kube-state-metrics\",resource=\"cpu\",cluster=\"$cluster\"})",
                          "instant": true
                      }
                  ],
                  "title": "CPU Limits Commitment",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 12,
                      "y": 0
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "1 - sum(:node_memory_MemAvailable_bytes:sum{cluster=\"$cluster\"}) / sum(node_memory_MemTotal_bytes{job=\"node-exporter\",cluster=\"$cluster\"})",
                          "instant": true
                      }
                  ],
                  "title": "Memory Utilisation",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 16,
                      "y": 0
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable{job=\"kube-state-metrics\",resource=\"memory\",cluster=\"$cluster\"})",
                          "instant": true
                      }
                  ],
                  "title": "Memory Requests Commitment",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 20,
                      "y": 0
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) / sum(kube_node_status_allocatable{job=\"kube-state-metrics\",resource=\"memory\",cluster=\"$cluster\"})",
                          "instant": true
                      }
                  ],
                  "title": "Memory Limits Commitment",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          }
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 6
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\"}) by (namespace)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "CPU Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Namespace"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?${datasource:queryparam}&var-cluster=$cluster&var-namespace=${__data.fields.Namespace}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 12
                  },
                  "id": 8,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_owner{job=\"kube-state-metrics\", cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "count(avg(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\"}) by (workload, namespace)) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\"}) by (namespace) / sum(namespace_cpu:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\"}) by (namespace) / sum(namespace_cpu:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "CPU Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "namespace",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true,
                                  "Time 7": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Time 7": 6,
                                  "Value #A": 8,
                                  "Value #B": 9,
                                  "Value #C": 10,
                                  "Value #D": 11,
                                  "Value #E": 12,
                                  "Value #F": 13,
                                  "Value #G": 14,
                                  "namespace": 7
                              },
                              "renameByName": {
                                  "Value #A": "Pods",
                                  "Value #B": "Workloads",
                                  "Value #C": "CPU Usage",
                                  "Value #D": "CPU Requests",
                                  "Value #E": "CPU Requests %",
                                  "Value #F": "CPU Limits",
                                  "Value #G": "CPU Limits %",
                                  "namespace": "Namespace"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 18
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", container!=\"\"}) by (namespace)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Memory",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Memory Usage"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "bytes"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Memory Requests"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "bytes"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Memory Limits"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "bytes"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Namespace"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?${datasource:queryparam}&var-cluster=$cluster&var-namespace=${__data.fields.Namespace}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 24
                  },
                  "id": 10,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_owner{job=\"kube-state-metrics\", cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "count(avg(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\"}) by (workload, namespace)) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", container!=\"\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", container!=\"\"}) by (namespace) / sum(namespace_memory:kube_pod_container_resource_requests:sum{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", container!=\"\"}) by (namespace) / sum(namespace_memory:kube_pod_container_resource_limits:sum{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Memory Requests by Namespace",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "namespace",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true,
                                  "Time 7": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Time 7": 6,
                                  "Value #A": 8,
                                  "Value #B": 9,
                                  "Value #C": 10,
                                  "Value #D": 11,
                                  "Value #E": 12,
                                  "Value #F": 13,
                                  "Value #G": 14,
                                  "namespace": 7
                              },
                              "renameByName": {
                                  "Value #A": "Pods",
                                  "Value #B": "Workloads",
                                  "Value #C": "Memory Usage",
                                  "Value #D": "Memory Requests",
                                  "Value #E": "Memory Requests %",
                                  "Value #F": "Memory Limits",
                                  "Value #G": "Memory Limits %",
                                  "namespace": "Namespace"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Bandwidth/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "Bps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Packets/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "pps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Namespace"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?${datasource:queryparam}&var-cluster=$cluster&var-namespace=${__data.fields.Namespace}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 30
                  },
                  "id": 11,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Current Network Usage",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "namespace",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Value #A": 7,
                                  "Value #B": 8,
                                  "Value #C": 9,
                                  "Value #D": 10,
                                  "Value #E": 11,
                                  "Value #F": 12,
                                  "namespace": 6
                              },
                              "renameByName": {
                                  "Value #A": "Current Receive Bandwidth",
                                  "Value #B": "Current Transmit Bandwidth",
                                  "Value #C": "Rate of Received Packets",
                                  "Value #D": "Rate of Transmitted Packets",
                                  "Value #E": "Rate of Received Packets Dropped",
                                  "Value #F": "Rate of Transmitted Packets Dropped",
                                  "namespace": "Namespace"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 36
                  },
                  "id": 12,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Receive Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 42
                  },
                  "id": 13,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Transmit Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 48
                  },
                  "id": 14,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "avg(irate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Container Bandwidth by Namespace: Received",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 54
                  },
                  "id": 15,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "avg(irate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Container Bandwidth by Namespace: Transmitted",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 60
                  },
                  "id": 16,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(irate(container_network_receive_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 66
                  },
                  "id": 17,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(irate(container_network_transmit_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 72
                  },
                  "id": 18,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(irate(container_network_receive_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 78
                  },
                  "id": 19,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(irate(container_network_transmit_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=~\".+\"}[$__rate_interval])) by (namespace)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "iops"
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 84
                  },
                  "id": 20,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "ceil(sum by(namespace) (rate(container_fs_reads_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval])))",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "IOPS(Reads+Writes)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 90
                  },
                  "id": 21,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(namespace) (rate(container_fs_reads_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "ThroughPut(Read+Write)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/IOPS/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "iops"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Throughput/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "Bps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Namespace"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/85a562078cdf77779eaa1add43ccec1e/k8s-resources-namespace?${datasource:queryparam}&var-cluster=$cluster&var-namespace=${__data.fields.Namespace}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 96
                  },
                  "id": 22,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(namespace) (rate(container_fs_reads_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(namespace) (rate(container_fs_writes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(namespace) (rate(container_fs_reads_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(namespace) (rate(container_fs_reads_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(namespace) (rate(container_fs_writes_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(namespace) (rate(container_fs_reads_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace!=\"\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Current Storage IO",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "namespace",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Value #A": 7,
                                  "Value #B": 8,
                                  "Value #C": 9,
                                  "Value #D": 10,
                                  "Value #E": 11,
                                  "Value #F": 12,
                                  "namespace": 6
                              },
                              "renameByName": {
                                  "Value #A": "IOPS(Reads)",
                                  "Value #B": "IOPS(Writes)",
                                  "Value #C": "IOPS(Reads + Writes)",
                                  "Value #D": "Throughput(Read)",
                                  "Value #E": "Throughput(Write)",
                                  "Value #F": "Throughput(Read + Write)",
                                  "namespace": "Namespace"
                              }
                          }
                      }
                  ],
                  "type": "table"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Compute Resources / Cluster",
          "uid": "efa86fd1d0c121a26444b636a3f509a8"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-k8s-resources-cluster
    namespace: monitoring
- apiVersion: v1
  data:
    k8s-resources-multicluster.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:node_cpu:ratio_rate5m) / count(cluster:node_cpu:ratio_rate5m)",
                          "instant": true
                      }
                  ],
                  "title": "CPU Utilisation",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 4,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_container_resource_requests{job=\"kube-state-metrics\", resource=\"cpu\"}) / sum(kube_node_status_allocatable{job=\"kube-state-metrics\", resource=\"cpu\"})",
                          "instant": true
                      }
                  ],
                  "title": "CPU Requests Commitment",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 8,
                      "y": 0
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_container_resource_limits{job=\"kube-state-metrics\", resource=\"cpu\"}) / sum(kube_node_status_allocatable{job=\"kube-state-metrics\", resource=\"cpu\"})",
                          "instant": true
                      }
                  ],
                  "title": "CPU Limits Commitment",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 12,
                      "y": 0
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "1 - sum(:node_memory_MemAvailable_bytes:sum) / sum(node_memory_MemTotal_bytes{job=\"node-exporter\"})",
                          "instant": true
                      }
                  ],
                  "title": "Memory Utilisation",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 16,
                      "y": 0
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_container_resource_requests{job=\"kube-state-metrics\", resource=\"memory\"}) / sum(kube_node_status_allocatable{job=\"kube-state-metrics\", resource=\"memory\"})",
                          "instant": true
                      }
                  ],
                  "title": "Memory Requests Commitment",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 20,
                      "y": 0
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_container_resource_limits{job=\"kube-state-metrics\", resource=\"memory\"}) / sum(kube_node_status_allocatable{job=\"kube-state-metrics\", resource=\"memory\"})",
                          "instant": true
                      }
                  ],
                  "title": "Memory Limits Commitment",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          }
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 1
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m) by (cluster)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "CPU Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Cluster"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down",
                                              "url": "/d/efa86fd1d0c121a26444b636a3f509a8/kubernetes-compute-resources-cluster?${datasource:queryparam}&var-cluster=${__data.fields.Cluster}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 2
                  },
                  "id": 8,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m) by (cluster)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_container_resource_requests{job=\"kube-state-metrics\", resource=\"cpu\"}) by (cluster)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m) by (cluster) / sum(kube_pod_container_resource_requests{job=\"kube-state-metrics\", resource=\"cpu\"}) by (cluster)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_container_resource_limits{job=\"kube-state-metrics\", resource=\"cpu\"}) by (cluster)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m) by (cluster) / sum(kube_pod_container_resource_limits{job=\"kube-state-metrics\", resource=\"cpu\"}) by (cluster)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "CPU Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "cluster",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Value #A": 6,
                                  "Value #B": 7,
                                  "Value #C": 8,
                                  "Value #D": 9,
                                  "Value #E": 10,
                                  "cluster": 5
                              },
                              "renameByName": {
                                  "Value #A": "CPU Usage",
                                  "Value #B": "CPU Requests",
                                  "Value #C": "CPU Requests %",
                                  "Value #D": "CPU Limits",
                                  "Value #E": "CPU Limits %",
                                  "cluster": "Cluster"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 3
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\"}) by (cluster)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Memory Usage (w/o cache)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Cluster"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down",
                                              "url": "/d/efa86fd1d0c121a26444b636a3f509a8/kubernetes-compute-resources-cluster?${datasource:queryparam}&var-cluster=${__data.fields.Cluster}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 4
                  },
                  "id": 10,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\"}) by (cluster)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_container_resource_requests{job=\"kube-state-metrics\", resource=\"memory\"}) by (cluster)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\"}) by (cluster) / sum(kube_pod_container_resource_requests{job=\"kube-state-metrics\", resource=\"memory\"}) by (cluster)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_container_resource_limits{job=\"kube-state-metrics\", resource=\"memory\"}) by (cluster)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\"}) by (cluster) / sum(kube_pod_container_resource_limits{job=\"kube-state-metrics\", resource=\"memory\"}) by (cluster)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Memory Requests by Cluster",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "cluster",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Value #A": 6,
                                  "Value #B": 7,
                                  "Value #C": 8,
                                  "Value #D": 9,
                                  "Value #E": 10,
                                  "cluster": 5
                              },
                              "renameByName": {
                                  "Value #A": "Memory Usage",
                                  "Value #B": "Memory Requests",
                                  "Value #C": "Memory Requests %",
                                  "Value #D": "Memory Limits",
                                  "Value #E": "Memory Limits %",
                                  "cluster": "Cluster"
                              }
                          }
                      }
                  ],
                  "type": "table"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Compute Resources /  Multi-Cluster",
          "uid": "b59e6c9f2fcbe2e16d77fc492374cc4f"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-k8s-resources-multicluster
    namespace: monitoring
- apiVersion: v1
  data:
    k8s-resources-namespace.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 6,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}) / sum(kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"})",
                          "instant": true
                      }
                  ],
                  "title": "CPU Utilisation (from requests)",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 6,
                      "x": 6,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}) / sum(kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"})",
                          "instant": true
                      }
                  ],
                  "title": "CPU Utilisation (from limits)",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 6,
                      "x": 12,
                      "y": 0
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) / sum(kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"})",
                          "instant": true
                      }
                  ],
                  "title": "Memory Utilisation (from requests)",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 6,
                      "x": 18,
                      "y": 0
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) / sum(kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"})",
                          "instant": true
                      }
                  ],
                  "title": "Memory Utilisation (from limits)",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          }
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "B"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "red",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "C"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "orange",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 7
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "legendFormat": "__auto"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"requests.cpu\"}))",
                          "legendFormat": "quota - requests"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"limits.cpu\"}))",
                          "legendFormat": "quota - limits"
                      }
                  ],
                  "title": "CPU Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Pod"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 14
                  },
                  "id": 6,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "CPU Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "pod",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Value #A": 6,
                                  "Value #B": 7,
                                  "Value #C": 8,
                                  "Value #D": 9,
                                  "Value #E": 10,
                                  "pod": 5
                              },
                              "renameByName": {
                                  "Value #A": "CPU Usage",
                                  "Value #B": "CPU Requests",
                                  "Value #C": "CPU Requests %",
                                  "Value #D": "CPU Limits",
                                  "Value #E": "CPU Limits %",
                                  "pod": "Pod"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "B"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "red",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "C"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "orange",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 21
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}) by (pod)",
                          "legendFormat": "__auto"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"requests.memory\"}))",
                          "legendFormat": "quota - requests"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=\"limits.memory\"}))",
                          "legendFormat": "quota - limits"
                      }
                  ],
                  "title": "Memory Usage (w/o cache)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Pod"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 28
                  },
                  "id": 8,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\", image!=\"\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_cache{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_swap{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\",container!=\"\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Memory Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "pod",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true,
                                  "Time 7": true,
                                  "Time 8": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Time 7": 6,
                                  "Time 8": 7,
                                  "Value #A": 9,
                                  "Value #B": 10,
                                  "Value #C": 11,
                                  "Value #D": 12,
                                  "Value #E": 13,
                                  "Value #F": 14,
                                  "Value #G": 15,
                                  "Value #H": 16,
                                  "pod": 8
                              },
                              "renameByName": {
                                  "Value #A": "Memory Usage",
                                  "Value #B": "Memory Requests",
                                  "Value #C": "Memory Requests %",
                                  "Value #D": "Memory Limits",
                                  "Value #E": "Memory Limits %",
                                  "Value #F": "Memory Usage (RSS)",
                                  "Value #G": "Memory Usage (Cache)",
                                  "Value #H": "Memory Usage (Swap)",
                                  "pod": "Pod"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Bandwidth/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "Bps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Packets/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "pps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Pod"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 35
                  },
                  "id": 9,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Current Network Usage",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "pod",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Value #A": 7,
                                  "Value #B": 8,
                                  "Value #C": 9,
                                  "Value #D": 10,
                                  "Value #E": 11,
                                  "Value #F": 12,
                                  "pod": 6
                              },
                              "renameByName": {
                                  "Value #A": "Current Receive Bandwidth",
                                  "Value #B": "Current Transmit Bandwidth",
                                  "Value #C": "Rate of Received Packets",
                                  "Value #D": "Rate of Transmitted Packets",
                                  "Value #E": "Rate of Received Packets Dropped",
                                  "Value #F": "Rate of Transmitted Packets Dropped",
                                  "pod": "Pod"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 42
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Receive Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 42
                  },
                  "id": 11,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Transmit Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 49
                  },
                  "id": 12,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(irate(container_network_receive_packets_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 49
                  },
                  "id": 13,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(irate(container_network_transmit_packets_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 56
                  },
                  "id": 14,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(irate(container_network_receive_packets_dropped_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 56
                  },
                  "id": 15,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(irate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "iops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 63
                  },
                  "id": 16,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "ceil(sum by(pod) (rate(container_fs_reads_total{container!=\"\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]) + rate(container_fs_writes_total{container!=\"\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])))",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "IOPS(Reads+Writes)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 63
                  },
                  "id": 17,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(pod) (rate(container_fs_reads_bytes_total{container!=\"\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{container!=\"\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "ThroughPut(Read+Write)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/IOPS/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "iops"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Throughput/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "Bps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Pod"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 70
                  },
                  "id": 18,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(pod) (rate(container_fs_reads_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(pod) (rate(container_fs_writes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(pod) (rate(container_fs_reads_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(pod) (rate(container_fs_reads_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(pod) (rate(container_fs_writes_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(pod) (rate(container_fs_reads_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Current Storage IO",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "pod",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Value #A": 7,
                                  "Value #B": 8,
                                  "Value #C": 9,
                                  "Value #D": 10,
                                  "Value #E": 11,
                                  "Value #F": 12,
                                  "pod": 6
                              },
                              "renameByName": {
                                  "Value #A": "IOPS(Reads)",
                                  "Value #B": "IOPS(Writes)",
                                  "Value #C": "IOPS(Reads + Writes)",
                                  "Value #D": "Throughput(Read)",
                                  "Value #E": "Throughput(Write)",
                                  "Value #F": "Throughput(Read + Write)",
                                  "pod": "Pod"
                              }
                          }
                      }
                  ],
                  "type": "table"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kube-state-metrics\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "namespace",
                      "name": "namespace",
                      "query": "label_values(kube_namespace_status_phase{job=\"kube-state-metrics\", cluster=\"$cluster\"}, namespace)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Compute Resources / Namespace (Pods)",
          "uid": "85a562078cdf77779eaa1add43ccec1e"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-k8s-resources-namespace
    namespace: monitoring
- apiVersion: v1
  data:
    k8s-resources-node.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true,
                              "stacking": {
                                  "mode": "normal"
                              }
                          }
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "max capacity"
                              },
                              "properties": [
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "red",
                                          "mode": "fixed"
                                      }
                                  },
                                  {
                                      "id": "custom.stacking",
                                      "value": {
                                          "mode": "none"
                                      }
                                  },
                                  {
                                      "id": "custom.hideFrom",
                                      "value": {
                                          "legend": false,
                                          "tooltip": true,
                                          "viz": false
                                      }
                                  },
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "dash": [
                                              10,
                                              10
                                          ],
                                          "fill": "dash"
                                      }
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_node_status_capacity{cluster=\"$cluster\", job=\"kube-state-metrics\", node=~\"$node\", resource=\"cpu\"})",
                          "legendFormat": "max capacity"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                          "legendFormat": "{{pod}}"
                      }
                  ],
                  "title": "CPU Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Pod"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 6
                  },
                  "id": 2,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", node=~\"$node\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", node=~\"$node\"}) by (pod) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "CPU Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "pod",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true
                              },
                              "renameByName": {
                                  "Value #A": "CPU Usage",
                                  "Value #B": "CPU Requests",
                                  "Value #C": "CPU Requests %",
                                  "Value #D": "CPU Limits",
                                  "Value #E": "CPU Limits %",
                                  "pod": "Pod"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true,
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "max capacity"
                              },
                              "properties": [
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "red",
                                          "mode": "fixed"
                                      }
                                  },
                                  {
                                      "id": "custom.stacking",
                                      "value": {
                                          "mode": "none"
                                      }
                                  },
                                  {
                                      "id": "custom.hideFrom",
                                      "value": {
                                          "legend": false,
                                          "tooltip": true,
                                          "viz": false
                                      }
                                  },
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "dash": [
                                              10,
                                              10
                                          ],
                                          "fill": "dash"
                                      }
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 12
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_node_status_capacity{cluster=\"$cluster\", job=\"kube-state-metrics\", node=~\"$node\", resource=\"memory\"})",
                          "legendFormat": "max capacity"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=~\"$node\", container!=\"\"}) by (pod)",
                          "legendFormat": "{{pod}}"
                      }
                  ],
                  "title": "Memory Usage (w/cache)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true,
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "max capacity"
                              },
                              "properties": [
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "red",
                                          "mode": "fixed"
                                      }
                                  },
                                  {
                                      "id": "custom.stacking",
                                      "value": {
                                          "mode": "none"
                                      }
                                  },
                                  {
                                      "id": "custom.hideFrom",
                                      "value": {
                                          "legend": false,
                                          "tooltip": true,
                                          "viz": false
                                      }
                                  },
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "dash": [
                                              10,
                                              10
                                          ],
                                          "fill": "dash"
                                      }
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 18
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_node_status_capacity{cluster=\"$cluster\", job=\"kube-state-metrics\", node=~\"$node\", resource=\"memory\"})",
                          "legendFormat": "max capacity"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_memory_rss{cluster=\"$cluster\", node=~\"$node\", container!=\"\"}) by (pod)",
                          "legendFormat": "{{pod}}"
                      }
                  ],
                  "title": "Memory Usage (w/o cache)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Pod"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 6,
                      "w": 24,
                      "x": 0,
                      "y": 24
                  },
                  "id": 5,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_memory_working_set_bytes{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", node=~\"$node\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_memory_rss{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_memory_cache{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_memory_swap{cluster=\"$cluster\", node=~\"$node\",container!=\"\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Memory Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "pod",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true,
                                  "Time 7": true,
                                  "Time 8": true
                              },
                              "renameByName": {
                                  "Value #A": "Memory Usage",
                                  "Value #B": "Memory Requests",
                                  "Value #C": "Memory Requests %",
                                  "Value #D": "Memory Limits",
                                  "Value #E": "Memory Limits %",
                                  "Value #F": "Memory Usage (RSS)",
                                  "Value #G": "Memory Usage (Cache)",
                                  "Value #H": "Memory Usage (Swap)",
                                  "pod": "Pod"
                              }
                          }
                      }
                  ],
                  "type": "table"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kube-state-metrics\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "node",
                      "multi": true,
                      "name": "node",
                      "query": "label_values(kube_node_info{cluster=\"$cluster\"}, node)",
                      "refresh": 2,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Compute Resources / Node (Pods)",
          "uid": "200ac8fdbfbb74b39aff88118e4d1c2c"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-k8s-resources-node
    namespace: monitoring
- apiVersion: v1
  data:
    k8s-resources-pod.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          }
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "B"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "red",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "C"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "orange",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{namespace=\"$namespace\", pod=\"$pod\", cluster=\"$cluster\", container!=\"\"}) by (container)",
                          "legendFormat": "__auto"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"cpu\"}\n)\n",
                          "legendFormat": "requests"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"cpu\"}\n)\n",
                          "legendFormat": "limits"
                      }
                  ],
                  "title": "CPU Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "axisColorMode": "thresholds",
                              "axisSoftMax": 1,
                              "axisSoftMin": 0,
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true,
                              "thresholdsStyle": {
                                  "mode": "dashed+area"
                              }
                          },
                          "unit": "percentunit"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "A"
                              },
                              "properties": [
                                  {
                                      "id": "thresholds",
                                      "value": {
                                          "mode": "absolute",
                                          "steps": [
                                              {
                                                  "color": "green",
                                                  "value": null
                                              },
                                              {
                                                  "color": "red",
                                                  "value": 0.25
                                              }
                                          ]
                                      }
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "mode": "thresholds",
                                          "seriesBy": "lastNotNull"
                                      }
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 7
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(increase(container_cpu_cfs_throttled_periods_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", cluster=\"$cluster\"}[$__rate_interval])) by (container) /sum(increase(container_cpu_cfs_periods_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", cluster=\"$cluster\"}[$__rate_interval])) by (container)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "CPU Throttling",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 14
                  },
                  "id": 3,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container) / sum(cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\"}) by (container)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "CPU Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "container",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Value #A": 6,
                                  "Value #B": 7,
                                  "Value #C": 8,
                                  "Value #D": 9,
                                  "Value #E": 10,
                                  "container": 5
                              },
                              "renameByName": {
                                  "Value #A": "CPU Usage",
                                  "Value #B": "CPU Requests",
                                  "Value #C": "CPU Requests %",
                                  "Value #D": "CPU Limits",
                                  "Value #E": "CPU Limits %",
                                  "container": "Container"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "B"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "red",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "C"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "orange",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 21
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", image!=\"\"}) by (container)",
                          "legendFormat": "__auto"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"memory\"}\n)\n",
                          "legendFormat": "requests"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", resource=\"memory\"}\n)\n",
                          "legendFormat": "limits"
                      }
                  ],
                  "title": "Memory Usage (WSS)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 28
                  },
                  "id": 5,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", image!=\"\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", image!=\"\"}) by (container) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container!=\"\", image!=\"\"}) by (container) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_limits{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_rss{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container != \"\", container != \"POD\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_cache{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container != \"\", container != \"POD\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(container_memory_swap{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\", container != \"\", container != \"POD\"}) by (container)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Memory Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "container",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true,
                                  "Time 7": true,
                                  "Time 8": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Time 7": 6,
                                  "Time 8": 7,
                                  "Value #A": 9,
                                  "Value #B": 10,
                                  "Value #C": 11,
                                  "Value #D": 12,
                                  "Value #E": 13,
                                  "Value #F": 14,
                                  "Value #G": 15,
                                  "Value #H": 16,
                                  "container": 8
                              },
                              "renameByName": {
                                  "Value #A": "Memory Usage",
                                  "Value #B": "Memory Requests",
                                  "Value #C": "Memory Requests %",
                                  "Value #D": "Memory Limits",
                                  "Value #E": "Memory Limits %",
                                  "Value #F": "Memory Usage (RSS)",
                                  "Value #G": "Memory Usage (Cache)",
                                  "Value #H": "Memory Usage (Swap)",
                                  "container": "Container"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 35
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(irate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Receive Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 35
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Transmit Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 42
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 42
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 49
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 49
                  },
                  "id": 11,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "iops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 56
                  },
                  "id": 12,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "ceil(sum by(pod) (rate(container_fs_reads_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])))",
                          "legendFormat": "Reads"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "ceil(sum by(pod) (rate(container_fs_writes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\",namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval])))",
                          "legendFormat": "Writes"
                      }
                  ],
                  "title": "IOPS (Pod)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 56
                  },
                  "id": 13,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(pod) (rate(container_fs_reads_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval]))",
                          "legendFormat": "Reads"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(pod) (rate(container_fs_writes_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\"}[$__rate_interval]))",
                          "legendFormat": "Writes"
                      }
                  ],
                  "title": "ThroughPut (Pod)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "iops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 63
                  },
                  "id": 14,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "ceil(sum by(container) (rate(container_fs_reads_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval])))",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "IOPS (Containers)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 63
                  },
                  "id": 15,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(container) (rate(container_fs_reads_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "ThroughPut (Containers)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/IOPS/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "iops"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Throughput/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "Bps"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 70
                  },
                  "id": 16,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(container) (rate(container_fs_reads_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(container) (rate(container_fs_writes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\",device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(container) (rate(container_fs_reads_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]) + rate(container_fs_writes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(container) (rate(container_fs_reads_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(container) (rate(container_fs_writes_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by(container) (rate(container_fs_reads_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]) + rate(container_fs_writes_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\", container!=\"\", cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval]))",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Current Storage IO",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "container",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Value #A": 7,
                                  "Value #B": 8,
                                  "Value #C": 9,
                                  "Value #D": 10,
                                  "Value #E": 11,
                                  "Value #F": 12,
                                  "container": 6
                              },
                              "renameByName": {
                                  "Value #A": "IOPS(Reads)",
                                  "Value #B": "IOPS(Writes)",
                                  "Value #C": "IOPS(Reads + Writes)",
                                  "Value #D": "Throughput(Read)",
                                  "Value #E": "Throughput(Write)",
                                  "Value #F": "Throughput(Read + Write)",
                                  "container": "Container"
                              }
                          }
                      }
                  ],
                  "type": "table"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kube-state-metrics\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "namespace",
                      "name": "namespace",
                      "query": "label_values(kube_namespace_status_phase{job=\"kube-state-metrics\", cluster=\"$cluster\"}, namespace)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "pod",
                      "name": "pod",
                      "query": "label_values(kube_pod_info{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\"}, pod)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Compute Resources / Pod",
          "uid": "6581e46e4e5c7ba40a07646395ef7b23"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-k8s-resources-pod
    namespace: monitoring
- apiVersion: v1
  data:
    k8s-resources-windows-cluster.json: |-
      {
          "editable": false,
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "1 - avg(rate(windows_cpu_time_total{cluster=\"$cluster\", job=\"kubernetes-windows-exporter\", mode=\"idle\"}[$__rate_interval]))",
                          "instant": true
                      }
                  ],
                  "title": "CPU Utilisation",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 4,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_windows_container_resource_cpu_cores_request{cluster=\"$cluster\"}) / sum(node:windows_node_num_cpu:sum{cluster=\"$cluster\"})",
                          "instant": true
                      }
                  ],
                  "title": "CPU Requests Commitment",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 8,
                      "y": 0
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_windows_container_resource_cpu_cores_limit{cluster=\"$cluster\"}) / sum(node:windows_node_num_cpu:sum{cluster=\"$cluster\"})",
                          "instant": true
                      }
                  ],
                  "title": "CPU Limits Commitment",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 12,
                      "y": 0
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "1 - sum(:windows_node_memory_MemFreeCached_bytes:sum{cluster=\"$cluster\"}) / sum(:windows_node_memory_MemTotal_bytes:sum{cluster=\"$cluster\"})",
                          "instant": true
                      }
                  ],
                  "title": "Memory Utilisation",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 16,
                      "y": 0
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_windows_container_resource_memory_request{cluster=\"$cluster\"}) / sum(:windows_node_memory_MemTotal_bytes:sum{cluster=\"$cluster\"})",
                          "instant": true
                      }
                  ],
                  "title": "Memory Requests Commitment",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 3,
                      "w": 4,
                      "x": 20,
                      "y": 0
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_windows_container_resource_memory_limit{cluster=\"$cluster\"}) / sum(:windows_node_memory_MemTotal_bytes:sum{cluster=\"$cluster\"})",
                          "instant": true
                      }
                  ],
                  "title": "Memory Limits Commitment",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          }
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 7
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_pod_container:windows_container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\"}) by (namespace)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "CPU Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Namespace"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/490b402361724ab1d4c45666c1fa9b6f/k8s-resources-windows-namespace?${datasource:queryparam}&var-cluster=$cluster&var-namespace=${__data.fields.Namespace}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 14
                  },
                  "id": 8,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_pod_container:windows_container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_windows_container_resource_cpu_cores_request{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_pod_container:windows_container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\"}) by (namespace) / sum(kube_pod_windows_container_resource_cpu_cores_request{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_windows_container_resource_cpu_cores_limit{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_pod_container:windows_container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\"}) by (namespace) / sum(kube_pod_windows_container_resource_cpu_cores_limit{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "CPU Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "namespace",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Value #A": 6,
                                  "Value #B": 7,
                                  "Value #C": 8,
                                  "Value #D": 9,
                                  "Value #E": 10,
                                  "namespace": 5
                              },
                              "renameByName": {
                                  "Value #A": "CPU Usage",
                                  "Value #B": "CPU Requests",
                                  "Value #C": "CPU Requests %",
                                  "Value #D": "CPU Limits",
                                  "Value #E": "CPU Limits %",
                                  "namespace": "Namespace"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "decbytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 21
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(windows_container_private_working_set_usage{cluster=\"$cluster\"}) by (namespace)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Memory Usage (Private Working Set)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Memory Usage"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "decbytes"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Memory Requests"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "decbytes"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Memory Limits"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "decbytes"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Namespace"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/490b402361724ab1d4c45666c1fa9b6f/k8s-resources-windows-namespace?${datasource:queryparam}&var-cluster=$cluster&var-namespace=${__data.fields.Namespace}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 28
                  },
                  "id": 10,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(windows_container_private_working_set_usage{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_windows_container_resource_memory_request{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(windows_container_private_working_set_usage{cluster=\"$cluster\"}) by (namespace) / sum(kube_pod_windows_container_resource_memory_request{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_windows_container_resource_memory_limit{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(windows_container_private_working_set_usage{cluster=\"$cluster\"}) by (namespace) / sum(kube_pod_windows_container_resource_memory_limit{cluster=\"$cluster\"}) by (namespace)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Memory Requests by Namespace",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "namespace",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Value #A": 6,
                                  "Value #B": 7,
                                  "Value #C": 8,
                                  "Value #D": 9,
                                  "Value #E": 10,
                                  "namespace": 5
                              },
                              "renameByName": {
                                  "Value #A": "Memory Usage",
                                  "Value #B": "Memory Requests",
                                  "Value #C": "Memory Requests %",
                                  "Value #D": "Memory Limits",
                                  "Value #E": "Memory Limits %",
                                  "namespace": "Namespace"
                              }
                          }
                      }
                  ],
                  "type": "table"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kubernetes-windows-exporter\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "utc",
          "title": "Kubernetes / Compute Resources / Cluster(Windows)",
          "uid": "4d08557fd9391b100730f2494bccac68"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-k8s-resources-windows-cluster
    namespace: monitoring
- apiVersion: v1
  data:
    k8s-resources-windows-namespace.json: |-
      {
          "editable": false,
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          }
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_pod_container:windows_container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "CPU Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Pod"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/40597a704a610e936dc6ed374a7ce023/k8s-resources-windows-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 7
                  },
                  "id": 2,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_pod_container:windows_container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_windows_container_resource_cpu_cores_request{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_pod_container:windows_container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod) / sum(kube_pod_windows_container_resource_cpu_cores_request{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_windows_container_resource_cpu_cores_limit{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_pod_container:windows_container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod) / sum(kube_pod_windows_container_resource_cpu_cores_limit{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "CPU Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "pod",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Value #A": 6,
                                  "Value #B": 7,
                                  "Value #C": 8,
                                  "Value #D": 9,
                                  "Value #E": 10,
                                  "pod": 5
                              },
                              "renameByName": {
                                  "Value #A": "CPU Usage",
                                  "Value #B": "CPU Requests",
                                  "Value #C": "CPU Requests %",
                                  "Value #D": "CPU Limits",
                                  "Value #E": "CPU Limits %",
                                  "pod": "Pod"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "decbytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 14
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(windows_container_private_working_set_usage{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Memory Usage (Private Working Set)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Pod"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/40597a704a610e936dc6ed374a7ce023/k8s-resources-windows-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 21
                  },
                  "id": 4,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(windows_container_private_working_set_usage{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_windows_container_resource_memory_request{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(windows_container_private_working_set_usage{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod) / sum(kube_pod_windows_container_resource_memory_request{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_windows_container_resource_memory_limit{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(windows_container_private_working_set_usage{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod) / sum(kube_pod_windows_container_resource_memory_limit{cluster=\"$cluster\", namespace=\"$namespace\"}) by (pod)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Memory Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "pod",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Value #A": 6,
                                  "Value #B": 7,
                                  "Value #C": 8,
                                  "Value #D": 9,
                                  "Value #E": 10,
                                  "pod": 5
                              },
                              "renameByName": {
                                  "Value #A": "Memory Usage",
                                  "Value #B": "Memory Requests",
                                  "Value #C": "Memory Requests %",
                                  "Value #D": "Memory Limits",
                                  "Value #E": "Memory Limits %",
                                  "pod": "Pod"
                              }
                          }
                      }
                  ],
                  "type": "table"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kubernetes-windows-exporter\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "namespace",
                      "name": "namespace",
                      "query": "label_values(windows_pod_container_available{cluster=\"$cluster\"}, namespace)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "utc",
          "title": "Kubernetes / Compute Resources / Namespace(Windows)",
          "uid": "490b402361724ab1d4c45666c1fa9b6f"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-k8s-resources-windows-namespace
    namespace: monitoring
- apiVersion: v1
  data:
    k8s-resources-windows-pod.json: |-
      {
          "editable": false,
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          }
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_pod_container:windows_container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "CPU Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Namespace"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/490b402361724ab1d4c45666c1fa9b6f/k8s-resources-windows-namespace?${datasource:queryparam}&var-cluster=$cluster&var-namespace=${__data.fields.Namespace}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 7
                  },
                  "id": 2,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_pod_container:windows_container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_windows_container_resource_cpu_cores_request{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_pod_container:windows_container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container) / sum(kube_pod_windows_container_resource_cpu_cores_request{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_windows_container_resource_cpu_cores_limit{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(namespace_pod_container:windows_container_cpu_usage_seconds_total:sum_rate{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container) / sum(kube_pod_windows_container_resource_cpu_cores_limit{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "CPU Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "container",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Value #A": 6,
                                  "Value #B": 7,
                                  "Value #C": 8,
                                  "Value #D": 9,
                                  "Value #E": 10,
                                  "container": 5
                              },
                              "renameByName": {
                                  "Value #A": "CPU Usage",
                                  "Value #B": "CPU Requests",
                                  "Value #C": "CPU Requests %",
                                  "Value #D": "CPU Limits",
                                  "Value #E": "CPU Limits %",
                                  "container": "Container"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "decbytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 14
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(windows_container_private_working_set_usage{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Memory Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 21
                  },
                  "id": 4,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(windows_container_private_working_set_usage{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_windows_container_resource_memory_request{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(windows_container_private_working_set_usage{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container) / sum(kube_pod_windows_container_resource_memory_request{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kube_pod_windows_container_resource_memory_limit{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(windows_container_private_working_set_usage{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container) / sum(kube_pod_windows_container_resource_memory_limit{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}) by (container)",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Memory Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "container",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Value #A": 6,
                                  "Value #B": 7,
                                  "Value #C": 8,
                                  "Value #D": 9,
                                  "Value #E": 10,
                                  "container": 5
                              },
                              "renameByName": {
                                  "Value #A": "Memory Usage",
                                  "Value #B": "Memory Requests",
                                  "Value #C": "Memory Requests %",
                                  "Value #D": "Memory Limits",
                                  "Value #E": "Memory Limits %",
                                  "container": "Container"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 28
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum by (container) (rate(windows_container_network_received_bytes_total{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval])))",
                          "legendFormat": "Received : {{ container }}"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum by (container) (rate(windows_container_network_transmitted_bytes_total{cluster=\"$cluster\", namespace=\"$namespace\", pod=\"$pod\"}[$__rate_interval])))",
                          "legendFormat": "Transmitted : {{ container }}"
                      }
                  ],
                  "title": "Network I/O",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kubernetes-windows-exporter\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "namespace",
                      "name": "namespace",
                      "query": "label_values(windows_pod_container_available{cluster=\"$cluster\"}, namespace)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "pod",
                      "name": "pod",
                      "query": "label_values(windows_pod_container_available{cluster=\"$cluster\",namespace=\"$namespace\"}, pod)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "utc",
          "title": "Kubernetes / Compute Resources / Pod(Windows)",
          "uid": "40597a704a610e936dc6ed374a7ce023"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-k8s-resources-windows-pod
    namespace: monitoring
- apiVersion: v1
  data:
    k8s-resources-workload.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          }
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "CPU Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Pod"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 7
                  },
                  "id": 2,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "CPU Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "pod",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Value #A": 6,
                                  "Value #B": 7,
                                  "Value #C": 8,
                                  "Value #D": 9,
                                  "Value #E": 10,
                                  "pod": 5
                              },
                              "renameByName": {
                                  "Value #A": "CPU Usage",
                                  "Value #B": "CPU Requests",
                                  "Value #C": "CPU Requests %",
                                  "Value #D": "CPU Limits",
                                  "Value #E": "CPU Limits %",
                                  "pod": "Pod"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 14
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Memory Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Pod"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 21
                  },
                  "id": 4,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n/sum(\n    kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=\"$workload\", workload_type=~\"$type\"}\n) by (pod)\n",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Memory Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "pod",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Value #A": 9,
                                  "Value #B": 10,
                                  "Value #C": 11,
                                  "Value #D": 12,
                                  "Value #E": 13,
                                  "pod": 8
                              },
                              "renameByName": {
                                  "Value #A": "Memory Usage",
                                  "Value #B": "Memory Requests",
                                  "Value #C": "Memory Requests %",
                                  "Value #D": "Memory Limits",
                                  "Value #E": "Memory Limits %",
                                  "pod": "Pod"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Bandwidth/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "Bps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Packets/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "pps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Pod"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to pods",
                                              "url": "/d/6581e46e4e5c7ba40a07646395ef7b23/k8s-resources-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 28
                  },
                  "id": 5,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Current Network Usage",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "pod",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Value #A": 7,
                                  "Value #B": 8,
                                  "Value #C": 9,
                                  "Value #D": 10,
                                  "Value #E": 11,
                                  "Value #F": 12,
                                  "pod": 6
                              },
                              "renameByName": {
                                  "Value #A": "Current Receive Bandwidth",
                                  "Value #B": "Current Transmit Bandwidth",
                                  "Value #C": "Rate of Received Packets",
                                  "Value #D": "Rate of Transmitted Packets",
                                  "Value #E": "Rate of Received Packets Dropped",
                                  "Value #F": "Rate of Transmitted Packets Dropped",
                                  "pod": "Pod"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 35
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Receive Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 35
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Transmit Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 42
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(avg(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Container Bandwidth by Pod: Received",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 42
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(avg(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Container Bandwidth by Pod: Transmitted",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 49
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 49
                  },
                  "id": 11,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 56
                  },
                  "id": 12,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 56
                  },
                  "id": 13,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets Dropped",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kube-state-metrics\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "namespace",
                      "name": "namespace",
                      "query": "label_values(kube_namespace_status_phase{job=\"kube-state-metrics\", cluster=\"$cluster\"}, namespace)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "workload_type",
                      "name": "type",
                      "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\"}, workload_type)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "workload",
                      "name": "workload",
                      "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}, workload)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Compute Resources / Workload",
          "uid": "a164a7f0339f99e89cea5cb47e9be617"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-k8s-resources-workload
    namespace: monitoring
- apiVersion: v1
  data:
    k8s-resources-workloads-namespace.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          }
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "B"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "red",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "C"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "orange",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "legendFormat": "{{workload}} - {{workload_type}}"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=~\"requests.cpu|cpu\"}))",
                          "legendFormat": "quota - requests"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=~\"limits.cpu\"}))",
                          "legendFormat": "quota - limits"
                      }
                  ],
                  "title": "CPU Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Workload"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to workloads",
                                              "url": "/d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-type=${__data.fields.Type}&var-workload=${__data.fields.Workload}"
                                          }
                                      ]
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Running Pods"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "none"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 7
                  },
                  "id": 2,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "count(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload, workload_type)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n  kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n  kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n  node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m{cluster=\"$cluster\", namespace=\"$namespace\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"cpu\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "CPU Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "workload",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true,
                                  "workload_type 2": true,
                                  "workload_type 3": true,
                                  "workload_type 4": true,
                                  "workload_type 5": true,
                                  "workload_type 6": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Value #A": 8,
                                  "Value #B": 9,
                                  "Value #C": 10,
                                  "Value #D": 11,
                                  "Value #E": 12,
                                  "Value #F": 13,
                                  "workload": 6,
                                  "workload_type 1": 7,
                                  "workload_type 2": 14,
                                  "workload_type 3": 15,
                                  "workload_type 4": 16,
                                  "workload_type 5": 17,
                                  "workload_type 6": 18
                              },
                              "renameByName": {
                                  "Value #A": "Running Pods",
                                  "Value #B": "CPU Usage",
                                  "Value #C": "CPU Requests",
                                  "Value #D": "CPU Requests %",
                                  "Value #E": "CPU Limits",
                                  "Value #F": "CPU Limits %",
                                  "workload": "Workload",
                                  "workload_type 1": "Type"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "B"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "red",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byFrameRefID",
                                  "options": "C"
                              },
                              "properties": [
                                  {
                                      "id": "custom.lineStyle",
                                      "value": {
                                          "fill": "dash"
                                      }
                                  },
                                  {
                                      "id": "custom.lineWidth",
                                      "value": 2
                                  },
                                  {
                                      "id": "color",
                                      "value": {
                                          "fixedColor": "orange",
                                          "mode": "fixed"
                                      }
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 14
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "legendFormat": "{{workload}} - {{workload_type}}"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=~\"requests.memory|memory\"}))",
                          "legendFormat": "quota - requests"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "scalar(max(kube_resourcequota{cluster=\"$cluster\", namespace=\"$namespace\", type=\"hard\",resource=~\"limits.memory\"}))",
                          "legendFormat": "quota - limits"
                      }
                  ],
                  "title": "Memory Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/%/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Workload"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to workloads",
                                              "url": "/d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-type=${__data.fields.Type}&var-workload=${__data.fields.Workload}"
                                          }
                                      ]
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Running Pods"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "none"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 21
                  },
                  "id": 4,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "count(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload, workload_type)",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n  kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n  kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(\n    container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\", container!=\"\", image!=\"\"}\n  * on(namespace,pod)\n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n/sum(\n  kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"$cluster\", namespace=\"$namespace\", resource=\"memory\"}\n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}\n) by (workload, workload_type)\n",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Memory Quota",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "workload",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true,
                                  "workload_type 2": true,
                                  "workload_type 3": true,
                                  "workload_type 4": true,
                                  "workload_type 5": true,
                                  "workload_type 6": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Value #A": 8,
                                  "Value #B": 9,
                                  "Value #C": 10,
                                  "Value #D": 11,
                                  "Value #E": 12,
                                  "Value #F": 13,
                                  "workload": 6,
                                  "workload_type 1": 7,
                                  "workload_type 2": 14,
                                  "workload_type 3": 15,
                                  "workload_type 4": 16,
                                  "workload_type 5": 17,
                                  "workload_type 6": 18
                              },
                              "renameByName": {
                                  "Value #A": "Running Pods",
                                  "Value #B": "Memory Usage",
                                  "Value #C": "Memory Requests",
                                  "Value #D": "Memory Requests %",
                                  "Value #E": "Memory Limits",
                                  "Value #F": "Memory Limits %",
                                  "workload": "Workload",
                                  "workload_type 1": "Type"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Bandwidth/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "Bps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Packets/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "pps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Workload"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down to workloads",
                                              "url": "/d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-type=${__data.fields.Type}&var-workload=${__data.fields.Workload}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 28
                  },
                  "id": 5,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload_type=~\"$type\"}) by (workload))\n",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Current Network Usage",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "workload",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Value #A": 7,
                                  "Value #B": 8,
                                  "Value #C": 9,
                                  "Value #D": 10,
                                  "Value #E": 11,
                                  "Value #F": 12,
                                  "workload": 6
                              },
                              "renameByName": {
                                  "Value #A": "Current Receive Bandwidth",
                                  "Value #B": "Current Transmit Bandwidth",
                                  "Value #C": "Rate of Received Packets",
                                  "Value #D": "Rate of Transmitted Packets",
                                  "Value #E": "Rate of Received Packets Dropped",
                                  "Value #F": "Rate of Transmitted Packets Dropped",
                                  "workload": "Workload"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 35
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Receive Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 35
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Transmit Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 42
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(avg(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Container Bandwidth by Workload: Received",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 42
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(avg(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Container Bandwidth by Workload: Transmitted",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 49
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 49
                  },
                  "id": 11,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 56
                  },
                  "id": 12,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_receive_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 56
                  },
                  "id": 13,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(sum(rate(container_network_transmit_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\", namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets Dropped",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kube-state-metrics\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "namespace",
                      "name": "namespace",
                      "query": "label_values(kube_namespace_status_phase{job=\"kube-state-metrics\", cluster=\"$cluster\"}, namespace)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "workload_type",
                      "name": "type",
                      "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\"}, workload_type)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Compute Resources / Namespace (Workloads)",
          "uid": "a87fb0d919ec0ea5f6543124e16c42a5"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-k8s-resources-workloads-namespace
    namespace: monitoring
- apiVersion: v1
  data:
    k8s-windows-cluster-rsrc-use.json: |-
      {
          "editable": false,
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "node:windows_node_cpu_utilisation:avg1m{cluster=\"$cluster\"} * node:windows_node_num_cpu:sum{cluster=\"$cluster\"} / scalar(sum(node:windows_node_num_cpu:sum{cluster=\"$cluster\"}))",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "CPU Utilisation",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 7
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "node:windows_node_memory_utilisation:ratio{cluster=\"$cluster\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Memory Utilisation",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 7
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "node:windows_node_memory_swap_io_pages:irate{cluster=\"$cluster\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Memory Saturation (Swap I/O Pages)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 14
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "node:windows_node_disk_utilisation:avg_irate{cluster=\"$cluster\"} / scalar(node:windows_node:sum{cluster=\"$cluster\"})",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Disk IO Utilisation",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 21
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "node:windows_node_net_utilisation:sum_irate{cluster=\"$cluster\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Net Utilisation (Transmitted)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 21
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "node:windows_node_net_saturation:sum_irate{cluster=\"$cluster\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Net Utilisation (Dropped)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 28
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (instance)(node:windows_node_filesystem_usage:{cluster=\"$cluster\"})",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Disk Capacity",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kubernetes-windows-exporter\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "utc",
          "title": "Kubernetes / USE Method / Cluster(Windows)",
          "uid": "53a43377ec9aaf2ff64dfc7a1f539334"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-k8s-windows-cluster-rsrc-use
    namespace: monitoring
- apiVersion: v1
  data:
    k8s-windows-node-rsrc-use.json: |-
      {
          "editable": false,
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "node:windows_node_cpu_utilisation:avg1m{cluster=\"$cluster\", instance=\"$instance\"}",
                          "legendFormat": "Utilisation"
                      }
                  ],
                  "title": "CPU Utilisation",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (core) (irate(windows_cpu_time_total{cluster=\"$cluster\", job=\"kubernetes-windows-exporter\", mode!=\"idle\", instance=\"$instance\"}[$__rate_interval]))",
                          "legendFormat": "{{core}}"
                      }
                  ],
                  "title": "CPU Usage Per Core",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 0,
                      "y": 7
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "node:windows_node_memory_utilisation:{cluster=\"$cluster\", instance=\"$instance\"}",
                          "legendFormat": "Memory"
                      }
                  ],
                  "title": "Memory Utilisation %",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 8,
                      "y": 7
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "max(\n  windows_os_visible_memory_bytes{cluster=\"$cluster\", job=\"kubernetes-windows-exporter\", instance=\"$instance\"}\n  - windows_memory_available_bytes{cluster=\"$cluster\", job=\"kubernetes-windows-exporter\", instance=\"$instance\"}\n)\n",
                          "legendFormat": "memory used"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "max(node:windows_node_memory_totalCached_bytes:sum{cluster=\"$cluster\", instance=\"$instance\"})",
                          "legendFormat": "memory cached"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "max(windows_memory_available_bytes{cluster=\"$cluster\", job=\"kubernetes-windows-exporter\", instance=\"$instance\"})",
                          "legendFormat": "memory free"
                      }
                  ],
                  "title": "Memory Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 16,
                      "y": 7
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "node:windows_node_memory_swap_io_pages:irate{cluster=\"$cluster\", instance=\"$instance\"}",
                          "legendFormat": "Swap IO"
                      }
                  ],
                  "title": "Memory Saturation (Swap I/O) Pages",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 14
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "node:windows_node_disk_utilisation:avg_irate{cluster=\"$cluster\", instance=\"$instance\"}",
                          "legendFormat": "Utilisation"
                      }
                  ],
                  "title": "Disk IO Utilisation",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/io time/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "ms"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 14
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "max(rate(windows_logical_disk_read_bytes_total{cluster=\"$cluster\", job=\"kubernetes-windows-exporter\", instance=\"$instance\"}[$__rate_interval]))",
                          "legendFormat": "read"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "max(rate(windows_logical_disk_write_bytes_total{cluster=\"$cluster\", job=\"kubernetes-windows-exporter\", instance=\"$instance\"}[$__rate_interval]))",
                          "legendFormat": "written"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "max(rate(windows_logical_disk_read_seconds_total{cluster=\"$cluster\", job=\"kubernetes-windows-exporter\",  instance=\"$instance\"}[$__rate_interval]) + rate(windows_logical_disk_write_seconds_total{cluster=\"$cluster\", job=\"kubernetes-windows-exporter\", instance=\"$instance\"}[$__rate_interval]))",
                          "legendFormat": "io time"
                      }
                  ],
                  "title": "Disk IO",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 21
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "node:windows_node_filesystem_usage:{cluster=\"$cluster\", instance=\"$instance\"}",
                          "legendFormat": "{{volume}}"
                      }
                  ],
                  "title": "Disk Utilisation",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 28
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "node:windows_node_net_utilisation:sum_irate{cluster=\"$cluster\", instance=\"$instance\"}",
                          "legendFormat": "Utilisation"
                      }
                  ],
                  "title": "Net Utilisation (Transmitted)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 28
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "node:windows_node_net_saturation:sum_irate{cluster=\"$cluster\", instance=\"$instance\"}",
                          "legendFormat": "Saturation"
                      }
                  ],
                  "title": "Net Saturation (Dropped)",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kubernetes-windows-exporter\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "instance",
                      "name": "instance",
                      "query": "label_values(windows_system_boot_time_timestamp_seconds{cluster=\"$cluster\"}, instance)",
                      "refresh": 2,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "utc",
          "title": "Kubernetes / USE Method / Node(Windows)",
          "uid": "96e7484b0bb53b74fbc2bcb7723cd40b"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-k8s-windows-node-rsrc-use
    namespace: monitoring
- apiVersion: v1
  data:
    kubelet.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 4,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kubelet_node_name{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\"})",
                          "instant": true
                      }
                  ],
                  "title": "Running Kubelets",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 4,
                      "x": 4,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kubelet_running_pods{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"})",
                          "instant": true
                      }
                  ],
                  "title": "Running Pods",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 4,
                      "x": 8,
                      "y": 0
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(kubelet_running_containers{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"})",
                          "instant": true
                      }
                  ],
                  "title": "Running Containers",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 4,
                      "x": 12,
                      "y": 0
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(volume_manager_total_volumes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\", state=\"actual_state_of_world\"})",
                          "instant": true
                      }
                  ],
                  "title": "Actual Volume Count",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 4,
                      "x": 16,
                      "y": 0
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(volume_manager_total_volumes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\",state=\"desired_state_of_world\"})",
                          "instant": true
                      }
                  ],
                  "title": "Desired Volume Count",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 4,
                      "x": 20,
                      "y": 0
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(kubelet_node_config_error{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"}[$__rate_interval]))",
                          "instant": true
                      }
                  ],
                  "title": "Config Error Count",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 7
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(kubelet_runtime_operations_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])) by (operation_type, instance)",
                          "legendFormat": "{{instance}} {{operation_type}}"
                      }
                  ],
                  "title": "Operation Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 7
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(kubelet_runtime_operations_errors_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_type)",
                          "legendFormat": "{{instance}} {{operation_type}}"
                      }
                  ],
                  "title": "Operation Error Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 14
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(kubelet_runtime_operations_duration_seconds_bucket{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_type, le))",
                          "legendFormat": "{{instance}} {{operation_type}}"
                      }
                  ],
                  "title": "Operation Duration 99th quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 21
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(kubelet_pod_start_duration_seconds_count{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])) by (instance)",
                          "legendFormat": "{{instance}} pod"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(kubelet_pod_worker_duration_seconds_count{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])) by (instance)",
                          "legendFormat": "{{instance}} worker"
                      }
                  ],
                  "title": "Pod Start Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 21
                  },
                  "id": 11,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(kubelet_pod_start_duration_seconds_bucket{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])) by (instance, le))",
                          "legendFormat": "{{instance}} pod"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(kubelet_pod_worker_duration_seconds_bucket{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])) by (instance, le))",
                          "legendFormat": "{{instance}} worker"
                      }
                  ],
                  "title": "Pod Start Duration",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 28
                  },
                  "id": 12,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(storage_operation_duration_seconds_count{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_name, volume_plugin)",
                          "legendFormat": "{{instance}} {{operation_name}} {{volume_plugin}}"
                      }
                  ],
                  "title": "Storage Operation Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 28
                  },
                  "id": 13,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(storage_operation_errors_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_name, volume_plugin)",
                          "legendFormat": "{{instance}} {{operation_name}} {{volume_plugin}}"
                      }
                  ],
                  "title": "Storage Operation Error Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 35
                  },
                  "id": 14,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(storage_operation_duration_seconds_bucket{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_name, volume_plugin, le))",
                          "legendFormat": "{{instance}} {{operation_name}} {{volume_plugin}}"
                      }
                  ],
                  "title": "Storage Operation Duration 99th quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 42
                  },
                  "id": 15,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(kubelet_cgroup_manager_duration_seconds_count{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_type)",
                          "legendFormat": "{{operation_type}}"
                      }
                  ],
                  "title": "Cgroup manager operation rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 42
                  },
                  "id": 16,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(kubelet_cgroup_manager_duration_seconds_bucket{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"}[$__rate_interval])) by (instance, operation_type, le))",
                          "legendFormat": "{{instance}} {{operation_type}}"
                      }
                  ],
                  "title": "Cgroup manager 99th quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 49
                  },
                  "id": 17,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(kubelet_pleg_relist_duration_seconds_count{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"}[$__rate_interval])) by (instance)",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "PLEG relist rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 49
                  },
                  "id": 18,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_interval_seconds_bucket{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])) by (instance, le))",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "PLEG relist interval",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 56
                  },
                  "id": 19,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])) by (instance, le))",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "PLEG relist duration",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 63
                  },
                  "id": 20,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\",code=~\"2..\"}[$__rate_interval]))",
                          "legendFormat": "2xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\",code=~\"3..\"}[$__rate_interval]))",
                          "legendFormat": "3xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\",code=~\"4..\"}[$__rate_interval]))",
                          "legendFormat": "4xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\",code=~\"5..\"}[$__rate_interval]))",
                          "legendFormat": "5xx"
                      }
                  ],
                  "title": "RPC rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 70
                  },
                  "id": 21,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\", instance=~\"$instance\"}[$__rate_interval])) by (instance, verb, le))",
                          "legendFormat": "{{instance}} {{verb}}"
                      }
                  ],
                  "title": "Request duration 99th quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 0,
                      "y": 77
                  },
                  "id": 22,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "process_resident_memory_bytes{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Memory",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 8,
                      "y": 77
                  },
                  "id": 23,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "rate(process_cpu_seconds_total{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}[$__rate_interval])",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "CPU usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 16,
                      "y": 77
                  },
                  "id": 24,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "go_goroutines{cluster=\"$cluster\",job=\"kubelet\", metrics_path=\"/metrics\",instance=~\"$instance\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Goroutines",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kubelet\", metrics_path=\"/metrics\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "instance",
                      "name": "instance",
                      "query": "label_values(up{job=\"kubelet\", metrics_path=\"/metrics\",cluster=\"$cluster\"}, instance)",
                      "refresh": 2,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Kubelet",
          "uid": "3138fa155d5915769fbded898ac09fd9"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-kubelet
    namespace: monitoring
- apiVersion: v1
  data:
    namespace-by-pod.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "displayName": "$namespace",
                          "max": 10000000000,
                          "min": 0,
                          "thresholds": {
                              "steps": [
                                  {
                                      "color": "dark-green",
                                      "index": 0,
                                      "value": null
                                  },
                                  {
                                      "color": "dark-yellow",
                                      "index": 1,
                                      "value": 5000000000
                                  },
                                  {
                                      "color": "dark-red",
                                      "index": 2,
                                      "value": 7000000000
                                  }
                              ]
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Current Rate of Bytes Received",
                  "type": "gauge"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "displayName": "$namespace",
                          "max": 10000000000,
                          "min": 0,
                          "thresholds": {
                              "steps": [
                                  {
                                      "color": "dark-green",
                                      "index": 0,
                                      "value": null
                                  },
                                  {
                                      "color": "dark-yellow",
                                      "index": 1,
                                      "value": 5000000000
                                  },
                                  {
                                      "color": "dark-red",
                                      "index": 2,
                                      "value": 7000000000
                                  }
                              ]
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Current Rate of Bytes Transmitted",
                  "type": "gauge"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Bandwidth/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "Bps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Packets/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "pps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Pod"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down",
                                              "url": "/d/7a18067ce943a40ae25454675c19ff5c/kubernetes-networking-pod?${datasource:queryparam}&var-cluster=${cluster}&var-namespace=${namespace}&var-pod=${__data.fields.Pod}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 24,
                      "x": 0,
                      "y": 9
                  },
                  "id": 3,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Current Network Usage",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "pod",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Value #A": 7,
                                  "Value #B": 8,
                                  "Value #C": 9,
                                  "Value #D": 10,
                                  "Value #E": 11,
                                  "Value #F": 12,
                                  "pod": 6
                              },
                              "renameByName": {
                                  "Value #A": "Current Receive Bandwidth",
                                  "Value #B": "Current Transmit Bandwidth",
                                  "Value #C": "Rate of Received Packets",
                                  "Value #D": "Rate of Transmitted Packets",
                                  "Value #E": "Rate of Received Packets Dropped",
                                  "Value #F": "Rate of Transmitted Packets Dropped",
                                  "pod": "Pod"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 18
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Receive Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 18
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Transmit Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 27
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 27
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 36
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace!=\"\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 36
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum by (pod) (\n    rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n  * on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n)\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets Dropped",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "allValue": ".+",
                      "current": {
                          "selected": false,
                          "text": "kube-system",
                          "value": "kube-system"
                      },
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "namespace",
                      "name": "namespace",
                      "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Networking / Namespace (Pods)",
          "uid": "8b7a8b326d7a6f1f04244066368c67af"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-namespace-by-pod
    namespace: monitoring
- apiVersion: v1
  data:
    namespace-by-workload.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "color": {
                              "fixedColor": "green",
                              "mode": "fixed"
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "displayMode": "basic",
                      "showUnfilled": false
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Current Rate of Bytes Received",
                  "type": "bargauge"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "color": {
                              "fixedColor": "green",
                              "mode": "fixed"
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "displayMode": "basic",
                      "showUnfilled": false
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Current Rate of Bytes Transmitted",
                  "type": "bargauge"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Bytes/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "binBps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Packets/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "pps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Workload"
                              },
                              "properties": [
                                  {
                                      "id": "links",
                                      "value": [
                                          {
                                              "title": "Drill down",
                                              "url": "/d/728bf77cc1166d2f3133bf25846876cc/kubernetes-networking-workload?${datasource:queryparam}&var-cluster=${cluster}&var-namespace=${namespace}&var-type=${__data.fields.Type}&var-workload=${__data.fields.Workload}"
                                          }
                                      ]
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 24,
                      "x": 0,
                      "y": 9
                  },
                  "id": 3,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(avg(rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(avg(rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                          "format": "table",
                          "instant": true
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (namespace,pod) kube_pod_info{cluster=\"$cluster\",namespace=\"$namespace\",host_network=\"false\"}\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload, workload_type))\n",
                          "format": "table",
                          "instant": true
                      }
                  ],
                  "title": "Current Status",
                  "transformations": [
                      {
                          "id": "joinByField",
                          "options": {
                              "byField": "workload",
                              "mode": "outer"
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {
                                  "Time": true,
                                  "Time 1": true,
                                  "Time 2": true,
                                  "Time 3": true,
                                  "Time 4": true,
                                  "Time 5": true,
                                  "Time 6": true,
                                  "Time 7": true,
                                  "Time 8": true,
                                  "workload_type 2": true,
                                  "workload_type 3": true,
                                  "workload_type 4": true,
                                  "workload_type 5": true,
                                  "workload_type 6": true,
                                  "workload_type 7": true,
                                  "workload_type 8": true
                              },
                              "indexByName": {
                                  "Time 1": 0,
                                  "Time 2": 1,
                                  "Time 3": 2,
                                  "Time 4": 3,
                                  "Time 5": 4,
                                  "Time 6": 5,
                                  "Time 7": 6,
                                  "Time 8": 7,
                                  "Value #A": 10,
                                  "Value #B": 11,
                                  "Value #C": 12,
                                  "Value #D": 13,
                                  "Value #E": 14,
                                  "Value #F": 15,
                                  "Value #G": 16,
                                  "Value #H": 17,
                                  "workload": 8,
                                  "workload_type 1": 9,
                                  "workload_type 2": 18,
                                  "workload_type 3": 19,
                                  "workload_type 4": 20,
                                  "workload_type 5": 21,
                                  "workload_type 6": 22,
                                  "workload_type 7": 23,
                                  "workload_type 8": 24
                              },
                              "renameByName": {
                                  "Value #A": "Rx Bytes",
                                  "Value #B": "Tx Bytes",
                                  "Value #C": "Rx Bytes (Avg)",
                                  "Value #D": "Tx Bytes (Avg)",
                                  "Value #E": "Rx Packets",
                                  "Value #F": "Tx Packets",
                                  "Value #G": "Rx Packets Dropped",
                                  "Value #H": "Tx Packets Dropped",
                                  "workload": "Workload",
                                  "workload_type 1": "Type"
                              }
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 18
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Receive Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 18
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Transmit Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 27
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(avg(rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Container Bandwidth by Workload: Received",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 27
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(avg(rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Container Bandwidth by Workload: Transmitted",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 36
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 36
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 45
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 45
                  },
                  "id": 11,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=\"$namespace\"}[$__rate_interval])\n* on (cluster,namespace,pod) group_left ()\n    topk by (cluster,namespace,pod) (\n      1,\n      max by (cluster,namespace,pod) (kube_pod_info{host_network=\"false\"})\n    )\n* on (cluster,namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=\"$namespace\", workload=~\".+\", workload_type=~\"$type\"}) by (workload))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets Dropped",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "current": {
                          "selected": false,
                          "text": "kube-system",
                          "value": "kube-system"
                      },
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "namespace",
                      "name": "namespace",
                      "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "workload_type",
                      "name": "type",
                      "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=\"$namespace\", workload=~\".+\"}, workload_type)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Networking / Namespace (Workload)",
          "uid": "bbb2a765a623ae38130206c7d94a160f"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-namespace-by-workload
    namespace: monitoring
- apiVersion: v1
  data:
    node-cluster-rsrc-use.json: |-
      {
          "graphTooltip": 1,
          "panels": [
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "panels": [

                  ],
                  "title": "CPU",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 1
                  },
                  "id": 2,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "((\n  instance:node_cpu_utilisation:rate5m{job=\"node-exporter\", cluster=\"$cluster\"}\n  *\n  instance:node_num_cpu:sum{job=\"node-exporter\", cluster=\"$cluster\"}\n) != 0 )\n/ scalar(sum(instance:node_num_cpu:sum{job=\"node-exporter\", cluster=\"$cluster\"}))\n",
                          "legendFormat": "{{ instance }}"
                      }
                  ],
                  "title": "CPU Utilisation",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 1
                  },
                  "id": 3,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "(\n  instance:node_load1_per_cpu:ratio{job=\"node-exporter\", cluster=\"$cluster\"}\n  / scalar(count(instance:node_load1_per_cpu:ratio{job=\"node-exporter\", cluster=\"$cluster\"}))\n)  != 0\n",
                          "legendFormat": "{{ instance }}"
                      }
                  ],
                  "title": "CPU Saturation (Load1 per CPU)",
                  "type": "timeseries"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 8
                  },
                  "id": 4,
                  "panels": [

                  ],
                  "title": "Memory",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 9
                  },
                  "id": 5,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "(\n  instance:node_memory_utilisation:ratio{job=\"node-exporter\", cluster=\"$cluster\"}\n  / scalar(count(instance:node_memory_utilisation:ratio{job=\"node-exporter\", cluster=\"$cluster\"}))\n) != 0\n",
                          "legendFormat": "{{ instance }}"
                      }
                  ],
                  "title": "Memory Utilisation",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "rds"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 9
                  },
                  "id": 6,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "instance:node_vmstat_pgmajfault:rate5m{job=\"node-exporter\", cluster=\"$cluster\"}",
                          "legendFormat": "{{ instance }}"
                      }
                  ],
                  "title": "Memory Saturation (Major Page Faults)",
                  "type": "timeseries"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 16
                  },
                  "id": 7,
                  "panels": [

                  ],
                  "title": "Network",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "Bps"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Transmit/"
                              },
                              "properties": [
                                  {
                                      "id": "custom.transform",
                                      "value": "negative-Y"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 17
                  },
                  "id": 8,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "instance:node_network_receive_bytes_excluding_lo:rate5m{job=\"node-exporter\", cluster=\"$cluster\"} != 0",
                          "legendFormat": "{{ instance }} Receive"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "instance:node_network_transmit_bytes_excluding_lo:rate5m{job=\"node-exporter\", cluster=\"$cluster\"} != 0",
                          "legendFormat": "{{ instance }} Transmit"
                      }
                  ],
                  "title": "Network Utilisation (Bytes Receive/Transmit)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "Bps"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Transmit/"
                              },
                              "properties": [
                                  {
                                      "id": "custom.transform",
                                      "value": "negative-Y"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 17
                  },
                  "id": 9,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "instance:node_network_receive_drop_excluding_lo:rate5m{job=\"node-exporter\", cluster=\"$cluster\"} != 0",
                          "legendFormat": "{{ instance }} Receive"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "instance:node_network_transmit_drop_excluding_lo:rate5m{job=\"node-exporter\", cluster=\"$cluster\"} != 0",
                          "legendFormat": "{{ instance }} Transmit"
                      }
                  ],
                  "title": "Network Saturation (Drops Receive/Transmit)",
                  "type": "timeseries"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 24
                  },
                  "id": 10,
                  "panels": [

                  ],
                  "title": "Disk IO",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 25
                  },
                  "id": 11,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "instance_device:node_disk_io_time_seconds:rate5m{job=\"node-exporter\", cluster=\"$cluster\"}\n/ scalar(count(instance_device:node_disk_io_time_seconds:rate5m{job=\"node-exporter\", cluster=\"$cluster\"}))\n",
                          "legendFormat": "{{ instance }} {{device}}"
                      }
                  ],
                  "title": "Disk IO Utilisation",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 25
                  },
                  "id": 12,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "instance_device:node_disk_io_time_weighted_seconds:rate5m{job=\"node-exporter\", cluster=\"$cluster\"}\n/ scalar(count(instance_device:node_disk_io_time_weighted_seconds:rate5m{job=\"node-exporter\", cluster=\"$cluster\"}))\n",
                          "legendFormat": "{{ instance }} {{device}}"
                      }
                  ],
                  "title": "Disk IO Saturation",
                  "type": "timeseries"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 34
                  },
                  "id": 13,
                  "panels": [

                  ],
                  "title": "Disk Space",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 35
                  },
                  "id": 14,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "sum without (device) (\n  max without (fstype, mountpoint) ((\n    node_filesystem_size_bytes{job=\"node-exporter\", fstype!=\"\", mountpoint!=\"\", cluster=\"$cluster\"}\n    -\n    node_filesystem_avail_bytes{job=\"node-exporter\", fstype!=\"\", mountpoint!=\"\", cluster=\"$cluster\"}\n  ) != 0)\n)\n/ scalar(sum(max without (fstype, mountpoint) (node_filesystem_size_bytes{job=\"node-exporter\", fstype!=\"\", mountpoint!=\"\", cluster=\"$cluster\"})))\n",
                          "legendFormat": "{{ instance }}"
                      }
                  ],
                  "title": "Disk Space Utilisation",
                  "type": "timeseries"
              }
          ],
          "refresh": "30s",
          "schemaVersion": 39,
          "tags": [
              "node-exporter-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "name": "datasource",
                      "query": "prometheus",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 2,
                      "includeAll": false,
                      "name": "cluster",
                      "query": "label_values(node_time_seconds, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "utc",
          "title": "Node Exporter / USE Method / Cluster",
          "uid": "3e97d1d02672cdd0861f4c97c64f89b2"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-node-cluster-rsrc-use
    namespace: monitoring
- apiVersion: v1
  data:
    node-rsrc-use.json: |-
      {
          "graphTooltip": 1,
          "panels": [
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "panels": [

                  ],
                  "title": "CPU",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 1
                  },
                  "id": 2,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "instance:node_cpu_utilisation:rate5m{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} != 0",
                          "legendFormat": "Utilisation"
                      }
                  ],
                  "title": "CPU Utilisation",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 1
                  },
                  "id": 3,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "instance:node_load1_per_cpu:ratio{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} != 0",
                          "legendFormat": "Saturation"
                      }
                  ],
                  "title": "CPU Saturation (Load1 per CPU)",
                  "type": "timeseries"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 8
                  },
                  "id": 4,
                  "panels": [

                  ],
                  "title": "Memory",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 9
                  },
                  "id": 5,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "instance:node_memory_utilisation:ratio{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} != 0",
                          "legendFormat": "Utilisation"
                      }
                  ],
                  "title": "Memory Utilisation",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "rds"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 9
                  },
                  "id": 6,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "instance:node_vmstat_pgmajfault:rate5m{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} != 0",
                          "legendFormat": "Major page Faults"
                      }
                  ],
                  "title": "Memory Saturation (Major Page Faults)",
                  "type": "timeseries"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 16
                  },
                  "id": 7,
                  "panels": [

                  ],
                  "title": "Network",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "Bps"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Transmit/"
                              },
                              "properties": [
                                  {
                                      "id": "custom.transform",
                                      "value": "negative-Y"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 17
                  },
                  "id": 8,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "instance:node_network_receive_bytes_excluding_lo:rate5m{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} != 0",
                          "legendFormat": "Receive"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "instance:node_network_transmit_bytes_excluding_lo:rate5m{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} != 0",
                          "legendFormat": "Transmit"
                      }
                  ],
                  "title": "Network Utilisation (Bytes Receive/Transmit)",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "Bps"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Transmit/"
                              },
                              "properties": [
                                  {
                                      "id": "custom.transform",
                                      "value": "negative-Y"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 17
                  },
                  "id": 9,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "instance:node_network_receive_drop_excluding_lo:rate5m{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} != 0",
                          "legendFormat": "Receive"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "instance:node_network_transmit_drop_excluding_lo:rate5m{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} != 0",
                          "legendFormat": "Transmit"
                      }
                  ],
                  "title": "Network Saturation (Drops Receive/Transmit)",
                  "type": "timeseries"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 24
                  },
                  "id": 10,
                  "panels": [

                  ],
                  "title": "Disk IO",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 25
                  },
                  "id": 11,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "instance_device:node_disk_io_time_seconds:rate5m{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} != 0",
                          "legendFormat": "{{device}}"
                      }
                  ],
                  "title": "Disk IO Utilisation",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 25
                  },
                  "id": 12,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "instance_device:node_disk_io_time_weighted_seconds:rate5m{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} != 0",
                          "legendFormat": "{{device}}"
                      }
                  ],
                  "title": "Disk IO Saturation",
                  "type": "timeseries"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 34
                  },
                  "id": 13,
                  "panels": [

                  ],
                  "title": "Disk Space",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 35
                  },
                  "id": 14,
                  "options": {
                      "legend": {
                          "showLegend": false
                      },
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "sort_desc(1 -\n  (\n    max without (mountpoint, fstype) (node_filesystem_avail_bytes{job=\"node-exporter\", fstype!=\"\", instance=\"$instance\", cluster=\"$cluster\"})\n    /\n    max without (mountpoint, fstype) (node_filesystem_size_bytes{job=\"node-exporter\", fstype!=\"\", instance=\"$instance\", cluster=\"$cluster\"})\n  ) != 0\n)\n",
                          "legendFormat": "{{device}}"
                      }
                  ],
                  "title": "Disk Space Utilisation",
                  "type": "timeseries"
              }
          ],
          "refresh": "30s",
          "schemaVersion": 39,
          "tags": [
              "node-exporter-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "name": "datasource",
                      "query": "prometheus",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 2,
                      "includeAll": false,
                      "name": "cluster",
                      "query": "label_values(node_time_seconds, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "name": "instance",
                      "query": "label_values(node_exporter_build_info{job=\"node-exporter\", cluster=\"$cluster\"}, instance)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "utc",
          "title": "Node Exporter / USE Method / Node",
          "uid": "fac67cfbe174d3ef53eb473d73d9212f"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-node-rsrc-use
    namespace: monitoring
- apiVersion: v1
  data:
    nodes.json: |-
      {
          "graphTooltip": 1,
          "panels": [
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "panels": [

                  ],
                  "title": "CPU",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "max": 1,
                          "min": 0,
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 1
                  },
                  "id": 2,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "(\n  (1 - sum without (mode) (rate(node_cpu_seconds_total{job=\"node-exporter\", mode=~\"idle|iowait|steal\", instance=\"$instance\", cluster=\"$cluster\"}[$__rate_interval])))\n/ ignoring(cpu) group_left\n  count without (cpu, mode) (node_cpu_seconds_total{job=\"node-exporter\", mode=\"idle\", instance=\"$instance\", cluster=\"$cluster\"})\n)\n",
                          "intervalFactor": 5,
                          "legendFormat": "{{cpu}}"
                      }
                  ],
                  "title": "CPU Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 0,
                              "showPoints": "never"
                          },
                          "min": 0,
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 1
                  },
                  "id": 3,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "node_load1{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                          "legendFormat": "1m load average"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "node_load5{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                          "legendFormat": "5m load average"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "node_load15{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                          "legendFormat": "15m load average"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "count(node_cpu_seconds_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", mode=\"idle\"})",
                          "legendFormat": "logical cores"
                      }
                  ],
                  "title": "Load Average",
                  "type": "timeseries"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 8
                  },
                  "id": 4,
                  "title": "Memory",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "min": 0,
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 18,
                      "x": 0,
                      "y": 9
                  },
                  "id": 5,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "(\n  node_memory_MemTotal_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}\n-\n  node_memory_MemFree_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}\n-\n  node_memory_Buffers_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}\n-\n  node_memory_Cached_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}\n)\n",
                          "legendFormat": "memory used"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "node_memory_Buffers_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                          "legendFormat": "memory buffers"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "node_memory_Cached_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                          "legendFormat": "memory cached"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "node_memory_MemFree_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                          "legendFormat": "memory free"
                      }
                  ],
                  "title": "Memory Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "max": 100,
                          "min": 0,
                          "thresholds": {
                              "steps": [
                                  {
                                      "color": "rgba(50, 172, 45, 0.97)"
                                  },
                                  {
                                      "color": "rgba(237, 129, 40, 0.89)",
                                      "value": 80
                                  },
                                  {
                                      "color": "rgba(245, 54, 54, 0.9)",
                                      "value": 90
                                  }
                              ]
                          },
                          "unit": "percent"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 18,
                      "y": 9
                  },
                  "id": 6,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "100 -\n(\n  avg(node_memory_MemAvailable_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}) /\n  avg(node_memory_MemTotal_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"})\n* 100\n)\n"
                      }
                  ],
                  "title": "Memory Usage",
                  "type": "gauge"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 18
                  },
                  "id": 7,
                  "panels": [

                  ],
                  "title": "Disk",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 0,
                              "showPoints": "never"
                          },
                          "min": 0
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/ read| written/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "Bps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/ io time/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 19
                  },
                  "id": 8,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(node_disk_read_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\"}[$__rate_interval])",
                          "intervalFactor": 1,
                          "legendFormat": "{{device}} read"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(node_disk_written_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\"}[$__rate_interval])",
                          "intervalFactor": 1,
                          "legendFormat": "{{device}} written"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(node_disk_io_time_seconds_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\"}[$__rate_interval])",
                          "intervalFactor": 1,
                          "legendFormat": "{{device}} io time"
                      }
                  ],
                  "title": "Disk I/O",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "thresholds": {
                              "steps": [
                                  {
                                      "color": "green"
                                  },
                                  {
                                      "color": "yellow",
                                      "value": 0.8
                                  },
                                  {
                                      "color": "red",
                                      "value": 0.9
                                  }
                              ]
                          },
                          "unit": "decbytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Mounted on"
                              },
                              "properties": [
                                  {
                                      "id": "custom.width",
                                      "value": 260
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Size"
                              },
                              "properties": [
                                  {
                                      "id": "custom.width",
                                      "value": 93
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Used"
                              },
                              "properties": [
                                  {
                                      "id": "custom.width",
                                      "value": 72
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Available"
                              },
                              "properties": [
                                  {
                                      "id": "custom.width",
                                      "value": 88
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Used, %"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  },
                                  {
                                      "id": "custom.cellOptions",
                                      "value": {
                                          "type": "gauge"
                                      }
                                  },
                                  {
                                      "id": "max",
                                      "value": 1
                                  },
                                  {
                                      "id": "min",
                                      "value": 0
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 19
                  },
                  "id": 9,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "max by (mountpoint) (node_filesystem_size_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", fstype!=\"\", mountpoint!=\"\"})\n",
                          "format": "table",
                          "instant": true,
                          "legendFormat": ""
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "max by (mountpoint) (node_filesystem_avail_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", fstype!=\"\", mountpoint!=\"\"})\n",
                          "format": "table",
                          "instant": true,
                          "legendFormat": ""
                      }
                  ],
                  "title": "Disk Space Usage",
                  "transformations": [
                      {
                          "id": "groupBy",
                          "options": {
                              "fields": {
                                  "Value #A": {
                                      "aggregations": [
                                          "lastNotNull"
                                      ],
                                      "operation": "aggregate"
                                  },
                                  "Value #B": {
                                      "aggregations": [
                                          "lastNotNull"
                                      ],
                                      "operation": "aggregate"
                                  },
                                  "mountpoint": {
                                      "aggregations": [

                                      ],
                                      "operation": "groupby"
                                  }
                              }
                          }
                      },
                      {
                          "id": "merge"
                      },
                      {
                          "id": "calculateField",
                          "options": {
                              "alias": "Used",
                              "binary": {
                                  "left": "Value #A (lastNotNull)",
                                  "operator": "-",
                                  "reducer": "sum",
                                  "right": "Value #B (lastNotNull)"
                              },
                              "mode": "binary",
                              "reduce": {
                                  "reducer": "sum"
                              }
                          }
                      },
                      {
                          "id": "calculateField",
                          "options": {
                              "alias": "Used, %",
                              "binary": {
                                  "left": "Used",
                                  "operator": "/",
                                  "reducer": "sum",
                                  "right": "Value #A (lastNotNull)"
                              },
                              "mode": "binary",
                              "reduce": {
                                  "reducer": "sum"
                              }
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {

                              },
                              "indexByName": {

                              },
                              "renameByName": {
                                  "Value #A (lastNotNull)": "Size",
                                  "Value #B (lastNotNull)": "Available",
                                  "mountpoint": "Mounted on"
                              }
                          }
                      },
                      {
                          "id": "sortBy",
                          "options": {
                              "fields": {

                              },
                              "sort": [
                                  {
                                      "field": "Mounted on"
                                  }
                              ]
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 26
                  },
                  "id": 10,
                  "panels": [

                  ],
                  "title": "Network",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "description": "Network received (bits/s)",
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 0,
                              "showPoints": "never"
                          },
                          "min": 0,
                          "unit": "bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 27
                  },
                  "id": 11,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(node_network_receive_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device!=\"lo\"}[$__rate_interval]) * 8",
                          "intervalFactor": 1,
                          "legendFormat": "{{device}}"
                      }
                  ],
                  "title": "Network Received",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "description": "Network transmitted (bits/s)",
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 0
                          },
                          "min": 0,
                          "unit": "bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 27
                  },
                  "id": 12,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(node_network_transmit_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device!=\"lo\"}[$__rate_interval]) * 8",
                          "intervalFactor": 1,
                          "legendFormat": "{{device}}"
                      }
                  ],
                  "title": "Network Transmitted",
                  "type": "timeseries"
              }
          ],
          "refresh": "30s",
          "schemaVersion": 39,
          "tags": [
              "node-exporter-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "name": "datasource",
                      "query": "prometheus",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 2,
                      "label": "Cluster",
                      "name": "cluster",
                      "query": "label_values(node_uname_info{job=\"node-exporter\", sysname!=\"Darwin\"}, cluster)",
                      "refresh": 2,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "label": "Instance",
                      "name": "instance",
                      "query": "label_values(node_uname_info{job=\"node-exporter\", cluster=\"$cluster\", sysname!=\"Darwin\"}, instance)",
                      "refresh": 2,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "utc",
          "title": "Node Exporter / Nodes",
          "uid": "7d57716318ee0dddbac5a7f451fb7753"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-nodes
    namespace: monitoring
- apiVersion: v1
  data:
    nodes-aix.json: |-
      {
          "graphTooltip": 1,
          "panels": [
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "panels": [

                  ],
                  "title": "CPU",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "max": 1,
                          "min": 0,
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 1
                  },
                  "id": 2,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "(\n  (1 - sum without (mode) (rate(node_cpu_seconds_total{job=\"node-exporter\", mode=~\"idle|iowait|steal\", instance=\"$instance\", cluster=\"$cluster\"}[$__rate_interval])))\n/ ignoring(cpu) group_left\n  count without (cpu, mode) (node_cpu_seconds_total{job=\"node-exporter\", mode=\"idle\", instance=\"$instance\", cluster=\"$cluster\"})\n)\n",
                          "intervalFactor": 5,
                          "legendFormat": "{{cpu}}"
                      }
                  ],
                  "title": "CPU Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 0,
                              "showPoints": "never"
                          },
                          "min": 0,
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 1
                  },
                  "id": 3,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "node_load1{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                          "legendFormat": "1m load average"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "node_load5{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                          "legendFormat": "5m load average"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "node_load15{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                          "legendFormat": "15m load average"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "count(node_cpu_seconds_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", mode=\"idle\"})",
                          "legendFormat": "logical cores"
                      }
                  ],
                  "title": "Load Average",
                  "type": "timeseries"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 8
                  },
                  "id": 4,
                  "title": "Memory",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "none"
                              }
                          },
                          "min": 0,
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 18,
                      "x": 0,
                      "y": 9
                  },
                  "id": 5,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "node_memory_total_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                          "legendFormat": "Physical Memory"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "(\n    node_memory_total_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} -\n    node_memory_available_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}\n)\n",
                          "legendFormat": "Memory Used"
                      }
                  ],
                  "title": "Memory Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "max": 100,
                          "min": 0,
                          "thresholds": {
                              "steps": [
                                  {
                                      "color": "rgba(50, 172, 45, 0.97)"
                                  },
                                  {
                                      "color": "rgba(237, 129, 40, 0.89)",
                                      "value": 80
                                  },
                                  {
                                      "color": "rgba(245, 54, 54, 0.9)",
                                      "value": 90
                                  }
                              ]
                          },
                          "unit": "percent"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 18,
                      "y": 9
                  },
                  "id": 6,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "100 -\n(\n  avg(node_memory_available_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}) /\n  avg(node_memory_total_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"})\n  * 100\n)\n"
                      }
                  ],
                  "title": "Memory Usage",
                  "type": "gauge"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 18
                  },
                  "id": 7,
                  "panels": [

                  ],
                  "title": "Disk",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 0,
                              "showPoints": "never"
                          },
                          "min": 0
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/ read| written/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "Bps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/ io time/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 19
                  },
                  "id": 8,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(node_disk_read_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\"}[$__rate_interval])",
                          "intervalFactor": 1,
                          "legendFormat": "{{device}} read"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(node_disk_written_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\"}[$__rate_interval])",
                          "intervalFactor": 1,
                          "legendFormat": "{{device}} written"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(node_disk_io_time_seconds_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\"}[$__rate_interval])",
                          "intervalFactor": 1,
                          "legendFormat": "{{device}} io time"
                      }
                  ],
                  "title": "Disk I/O",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "thresholds": {
                              "steps": [
                                  {
                                      "color": "green"
                                  },
                                  {
                                      "color": "yellow",
                                      "value": 0.8
                                  },
                                  {
                                      "color": "red",
                                      "value": 0.9
                                  }
                              ]
                          },
                          "unit": "decbytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Mounted on"
                              },
                              "properties": [
                                  {
                                      "id": "custom.width",
                                      "value": 260
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Size"
                              },
                              "properties": [
                                  {
                                      "id": "custom.width",
                                      "value": 93
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Used"
                              },
                              "properties": [
                                  {
                                      "id": "custom.width",
                                      "value": 72
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Available"
                              },
                              "properties": [
                                  {
                                      "id": "custom.width",
                                      "value": 88
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Used, %"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  },
                                  {
                                      "id": "custom.cellOptions",
                                      "value": {
                                          "type": "gauge"
                                      }
                                  },
                                  {
                                      "id": "max",
                                      "value": 1
                                  },
                                  {
                                      "id": "min",
                                      "value": 0
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 19
                  },
                  "id": 9,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "max by (mountpoint) (node_filesystem_size_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", fstype!=\"\", mountpoint!=\"\"})\n",
                          "format": "table",
                          "instant": true,
                          "legendFormat": ""
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "max by (mountpoint) (node_filesystem_avail_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", fstype!=\"\", mountpoint!=\"\"})\n",
                          "format": "table",
                          "instant": true,
                          "legendFormat": ""
                      }
                  ],
                  "title": "Disk Space Usage",
                  "transformations": [
                      {
                          "id": "groupBy",
                          "options": {
                              "fields": {
                                  "Value #A": {
                                      "aggregations": [
                                          "lastNotNull"
                                      ],
                                      "operation": "aggregate"
                                  },
                                  "Value #B": {
                                      "aggregations": [
                                          "lastNotNull"
                                      ],
                                      "operation": "aggregate"
                                  },
                                  "mountpoint": {
                                      "aggregations": [

                                      ],
                                      "operation": "groupby"
                                  }
                              }
                          }
                      },
                      {
                          "id": "merge"
                      },
                      {
                          "id": "calculateField",
                          "options": {
                              "alias": "Used",
                              "binary": {
                                  "left": "Value #A (lastNotNull)",
                                  "operator": "-",
                                  "reducer": "sum",
                                  "right": "Value #B (lastNotNull)"
                              },
                              "mode": "binary",
                              "reduce": {
                                  "reducer": "sum"
                              }
                          }
                      },
                      {
                          "id": "calculateField",
                          "options": {
                              "alias": "Used, %",
                              "binary": {
                                  "left": "Used",
                                  "operator": "/",
                                  "reducer": "sum",
                                  "right": "Value #A (lastNotNull)"
                              },
                              "mode": "binary",
                              "reduce": {
                                  "reducer": "sum"
                              }
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {

                              },
                              "indexByName": {

                              },
                              "renameByName": {
                                  "Value #A (lastNotNull)": "Size",
                                  "Value #B (lastNotNull)": "Available",
                                  "mountpoint": "Mounted on"
                              }
                          }
                      },
                      {
                          "id": "sortBy",
                          "options": {
                              "fields": {

                              },
                              "sort": [
                                  {
                                      "field": "Mounted on"
                                  }
                              ]
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 26
                  },
                  "id": 10,
                  "panels": [

                  ],
                  "title": "Network",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "description": "Network received (bits/s)",
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 0,
                              "showPoints": "never"
                          },
                          "min": 0,
                          "unit": "bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 27
                  },
                  "id": 11,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(node_network_receive_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device!=\"lo\"}[$__rate_interval]) * 8",
                          "intervalFactor": 1,
                          "legendFormat": "{{device}}"
                      }
                  ],
                  "title": "Network Received",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "description": "Network transmitted (bits/s)",
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 0
                          },
                          "min": 0,
                          "unit": "bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 27
                  },
                  "id": 12,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(node_network_transmit_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device!=\"lo\"}[$__rate_interval]) * 8",
                          "intervalFactor": 1,
                          "legendFormat": "{{device}}"
                      }
                  ],
                  "title": "Network Transmitted",
                  "type": "timeseries"
              }
          ],
          "refresh": "30s",
          "schemaVersion": 39,
          "tags": [
              "node-exporter-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "name": "datasource",
                      "query": "prometheus",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 2,
                      "label": "Cluster",
                      "name": "cluster",
                      "query": "label_values(node_uname_info{job=\"node-exporter\", sysname!=\"Darwin\"}, cluster)",
                      "refresh": 2,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "label": "Instance",
                      "name": "instance",
                      "query": "label_values(node_uname_info{job=\"node-exporter\", cluster=\"$cluster\", sysname!=\"Darwin\"}, instance)",
                      "refresh": 2,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "utc",
          "title": "Node Exporter / AIX",
          "uid": "7e0a61e486f727d763fb1d86fdd629c2"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-nodes-aix
    namespace: monitoring
- apiVersion: v1
  data:
    nodes-darwin.json: |-
      {
          "graphTooltip": 1,
          "panels": [
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "panels": [

                  ],
                  "title": "CPU",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "max": 1,
                          "min": 0,
                          "unit": "percentunit"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 1
                  },
                  "id": 2,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "(\n  (1 - sum without (mode) (rate(node_cpu_seconds_total{job=\"node-exporter\", mode=~\"idle|iowait|steal\", instance=\"$instance\", cluster=\"$cluster\"}[$__rate_interval])))\n/ ignoring(cpu) group_left\n  count without (cpu, mode) (node_cpu_seconds_total{job=\"node-exporter\", mode=\"idle\", instance=\"$instance\", cluster=\"$cluster\"})\n)\n",
                          "intervalFactor": 5,
                          "legendFormat": "{{cpu}}"
                      }
                  ],
                  "title": "CPU Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 0,
                              "showPoints": "never"
                          },
                          "min": 0,
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 1
                  },
                  "id": 3,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "node_load1{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                          "legendFormat": "1m load average"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "node_load5{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                          "legendFormat": "5m load average"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "node_load15{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                          "legendFormat": "15m load average"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "count(node_cpu_seconds_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", mode=\"idle\"})",
                          "legendFormat": "logical cores"
                      }
                  ],
                  "title": "Load Average",
                  "type": "timeseries"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 8
                  },
                  "id": 4,
                  "title": "Memory",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "none"
                              }
                          },
                          "min": 0,
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 18,
                      "x": 0,
                      "y": 9
                  },
                  "id": 5,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "node_memory_total_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                          "legendFormat": "Physical Memory"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "(\n    node_memory_internal_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} -\n    node_memory_purgeable_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} +\n    node_memory_wired_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} +\n    node_memory_compressed_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}\n)\n",
                          "legendFormat": "Memory Used"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "(\n    node_memory_internal_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"} -\n    node_memory_purgeable_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}\n)\n",
                          "legendFormat": "App Memory"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "node_memory_wired_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                          "legendFormat": "Wired Memory"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "node_memory_compressed_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}",
                          "legendFormat": "Compressed"
                      }
                  ],
                  "title": "Memory Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "max": 100,
                          "min": 0,
                          "thresholds": {
                              "steps": [
                                  {
                                      "color": "rgba(50, 172, 45, 0.97)"
                                  },
                                  {
                                      "color": "rgba(237, 129, 40, 0.89)",
                                      "value": 80
                                  },
                                  {
                                      "color": "rgba(245, 54, 54, 0.9)",
                                      "value": 90
                                  }
                              ]
                          },
                          "unit": "percent"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 18,
                      "y": 9
                  },
                  "id": 6,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "(\n    (\n      avg(node_memory_internal_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}) -\n      avg(node_memory_purgeable_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}) +\n      avg(node_memory_wired_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"}) +\n      avg(node_memory_compressed_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"})\n    ) /\n    avg(node_memory_total_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\"})\n)\n*\n100\n"
                      }
                  ],
                  "title": "Memory Usage",
                  "type": "gauge"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 18
                  },
                  "id": 7,
                  "panels": [

                  ],
                  "title": "Disk",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 0,
                              "showPoints": "never"
                          },
                          "min": 0
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/ read| written/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "Bps"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byRegexp",
                                  "options": "/ io time/"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 19
                  },
                  "id": 8,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(node_disk_read_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\"}[$__rate_interval])",
                          "intervalFactor": 1,
                          "legendFormat": "{{device}} read"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(node_disk_written_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\"}[$__rate_interval])",
                          "intervalFactor": 1,
                          "legendFormat": "{{device}} written"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(node_disk_io_time_seconds_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)\"}[$__rate_interval])",
                          "intervalFactor": 1,
                          "legendFormat": "{{device}} io time"
                      }
                  ],
                  "title": "Disk I/O",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "thresholds": {
                              "steps": [
                                  {
                                      "color": "green"
                                  },
                                  {
                                      "color": "yellow",
                                      "value": 0.8
                                  },
                                  {
                                      "color": "red",
                                      "value": 0.9
                                  }
                              ]
                          },
                          "unit": "decbytes"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Mounted on"
                              },
                              "properties": [
                                  {
                                      "id": "custom.width",
                                      "value": 260
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Size"
                              },
                              "properties": [
                                  {
                                      "id": "custom.width",
                                      "value": 93
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Used"
                              },
                              "properties": [
                                  {
                                      "id": "custom.width",
                                      "value": 72
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Available"
                              },
                              "properties": [
                                  {
                                      "id": "custom.width",
                                      "value": 88
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Used, %"
                              },
                              "properties": [
                                  {
                                      "id": "unit",
                                      "value": "percentunit"
                                  },
                                  {
                                      "id": "custom.cellOptions",
                                      "value": {
                                          "type": "gauge"
                                      }
                                  },
                                  {
                                      "id": "max",
                                      "value": 1
                                  },
                                  {
                                      "id": "min",
                                      "value": 0
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 19
                  },
                  "id": 9,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "max by (mountpoint) (node_filesystem_size_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", fstype!=\"\", mountpoint!=\"\"})\n",
                          "format": "table",
                          "instant": true,
                          "legendFormat": ""
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "max by (mountpoint) (node_filesystem_avail_bytes{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", fstype!=\"\", mountpoint!=\"\"})\n",
                          "format": "table",
                          "instant": true,
                          "legendFormat": ""
                      }
                  ],
                  "title": "Disk Space Usage",
                  "transformations": [
                      {
                          "id": "groupBy",
                          "options": {
                              "fields": {
                                  "Value #A": {
                                      "aggregations": [
                                          "lastNotNull"
                                      ],
                                      "operation": "aggregate"
                                  },
                                  "Value #B": {
                                      "aggregations": [
                                          "lastNotNull"
                                      ],
                                      "operation": "aggregate"
                                  },
                                  "mountpoint": {
                                      "aggregations": [

                                      ],
                                      "operation": "groupby"
                                  }
                              }
                          }
                      },
                      {
                          "id": "merge"
                      },
                      {
                          "id": "calculateField",
                          "options": {
                              "alias": "Used",
                              "binary": {
                                  "left": "Value #A (lastNotNull)",
                                  "operator": "-",
                                  "reducer": "sum",
                                  "right": "Value #B (lastNotNull)"
                              },
                              "mode": "binary",
                              "reduce": {
                                  "reducer": "sum"
                              }
                          }
                      },
                      {
                          "id": "calculateField",
                          "options": {
                              "alias": "Used, %",
                              "binary": {
                                  "left": "Used",
                                  "operator": "/",
                                  "reducer": "sum",
                                  "right": "Value #A (lastNotNull)"
                              },
                              "mode": "binary",
                              "reduce": {
                                  "reducer": "sum"
                              }
                          }
                      },
                      {
                          "id": "organize",
                          "options": {
                              "excludeByName": {

                              },
                              "indexByName": {

                              },
                              "renameByName": {
                                  "Value #A (lastNotNull)": "Size",
                                  "Value #B (lastNotNull)": "Available",
                                  "mountpoint": "Mounted on"
                              }
                          }
                      },
                      {
                          "id": "sortBy",
                          "options": {
                              "fields": {

                              },
                              "sort": [
                                  {
                                      "field": "Mounted on"
                                  }
                              ]
                          }
                      }
                  ],
                  "type": "table"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 26
                  },
                  "id": 10,
                  "panels": [

                  ],
                  "title": "Network",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "description": "Network received (bits/s)",
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 0,
                              "showPoints": "never"
                          },
                          "min": 0,
                          "unit": "bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 27
                  },
                  "id": 11,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(node_network_receive_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device!=\"lo\"}[$__rate_interval]) * 8",
                          "intervalFactor": 1,
                          "legendFormat": "{{device}}"
                      }
                  ],
                  "title": "Network Received",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "${datasource}"
                  },
                  "description": "Network transmitted (bits/s)",
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 0
                          },
                          "min": 0,
                          "unit": "bps"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 27
                  },
                  "id": 12,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(node_network_transmit_bytes_total{job=\"node-exporter\", instance=\"$instance\", cluster=\"$cluster\", device!=\"lo\"}[$__rate_interval]) * 8",
                          "intervalFactor": 1,
                          "legendFormat": "{{device}}"
                      }
                  ],
                  "title": "Network Transmitted",
                  "type": "timeseries"
              }
          ],
          "refresh": "30s",
          "schemaVersion": 39,
          "tags": [
              "node-exporter-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "name": "datasource",
                      "query": "prometheus",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 2,
                      "label": "Cluster",
                      "name": "cluster",
                      "query": "label_values(node_uname_info{job=\"node-exporter\", sysname=\"Darwin\"},  cluster)",
                      "refresh": 2,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "label": "Instance",
                      "name": "instance",
                      "query": "label_values(node_uname_info{job=\"node-exporter\", cluster=\"$cluster\", sysname=\"Darwin\"}, instance)",
                      "refresh": 2,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "utc",
          "title": "Node Exporter / MacOS",
          "uid": "629701ea43bf69291922ea45f4a87d37"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-nodes-darwin
    namespace: monitoring
- apiVersion: v1
  data:
    persistentvolumesusage.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 18,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))\n  -\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_available_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))\n)\n",
                          "legendFormat": "Used Space"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum without(instance, node) (topk(1, (kubelet_volume_stats_available_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))\n",
                          "legendFormat": "Free Space"
                      }
                  ],
                  "title": "Volume Space Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "color": {
                              "mode": "thresholds"
                          },
                          "max": 100,
                          "min": 0,
                          "thresholds": {
                              "mode": "absolute",
                              "steps": [
                                  {
                                      "color": "green",
                                      "value": 0
                                  },
                                  {
                                      "color": "orange",
                                      "value": 80
                                  },
                                  {
                                      "color": "red",
                                      "value": 90
                                  }
                              ]
                          },
                          "unit": "percent"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 18,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "max without(instance,node) (\n(\n  topk(1, kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n  -\n  topk(1, kubelet_volume_stats_available_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n)\n/\ntopk(1, kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n* 100)\n",
                          "instant": true
                      }
                  ],
                  "title": "Volume Space Usage",
                  "type": "gauge"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 18,
                      "y": 7
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum without(instance, node) (topk(1, (kubelet_volume_stats_inodes_used{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))",
                          "legendFormat": "Used inodes"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "(\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_inodes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))\n  -\n  sum without(instance, node) (topk(1, (kubelet_volume_stats_inodes_used{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})))\n)\n",
                          "legendFormat": "Free inodes"
                      }
                  ],
                  "title": "Volume inodes Usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "color": {
                              "mode": "thresholds"
                          },
                          "max": 100,
                          "min": 0,
                          "thresholds": {
                              "mode": "absolute",
                              "steps": [
                                  {
                                      "color": "green",
                                      "value": 0
                                  },
                                  {
                                      "color": "orange",
                                      "value": 80
                                  },
                                  {
                                      "color": "red",
                                      "value": 90
                                  }
                              ]
                          },
                          "unit": "percent"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 18,
                      "y": 7
                  },
                  "id": 4,
                  "interval": "1m",
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "max without(instance,node) (\ntopk(1, kubelet_volume_stats_inodes_used{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n/\ntopk(1, kubelet_volume_stats_inodes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\", persistentvolumeclaim=\"$volume\"})\n* 100)\n",
                          "instant": true
                      }
                  ],
                  "title": "Volume inodes Usage",
                  "type": "gauge"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(kubelet_volume_stats_capacity_bytes{job=\"kubelet\", metrics_path=\"/metrics\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "Namespace",
                      "name": "namespace",
                      "query": "label_values(kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\"}, namespace)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "PersistentVolumeClaim",
                      "name": "volume",
                      "query": "label_values(kubelet_volume_stats_capacity_bytes{cluster=\"$cluster\", job=\"kubelet\", metrics_path=\"/metrics\", namespace=\"$namespace\"}, persistentvolumeclaim)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Persistent Volumes",
          "uid": "919b92a8e8041bd567af9edab12c840c"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-persistentvolumesusage
    namespace: monitoring
- apiVersion: v1
  data:
    pod-total.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "displayName": "$pod",
                          "max": 10000000000,
                          "min": 0,
                          "thresholds": {
                              "steps": [
                                  {
                                      "color": "dark-green",
                                      "index": 0,
                                      "value": null
                                  },
                                  {
                                      "color": "dark-yellow",
                                      "index": 1,
                                      "value": 5000000000
                                  },
                                  {
                                      "color": "dark-red",
                                      "index": 2,
                                      "value": 7000000000
                                  }
                              ]
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval]))",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Current Rate of Bytes Received",
                  "type": "gauge"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "displayName": "$pod",
                          "max": 10000000000,
                          "min": 0,
                          "thresholds": {
                              "steps": [
                                  {
                                      "color": "dark-green",
                                      "index": 0,
                                      "value": null
                                  },
                                  {
                                      "color": "dark-yellow",
                                      "index": 1,
                                      "value": 5000000000
                                  },
                                  {
                                      "color": "dark-red",
                                      "index": 2,
                                      "value": 7000000000
                                  }
                              ]
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval]))",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Current Rate of Bytes Transmitted",
                  "type": "gauge"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 9
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Receive Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 9
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_bytes_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Transmit Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 18
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 18
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 27
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_receive_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "showPoints": "never"
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 27
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(container_network_transmit_packets_dropped_total{cluster=\"$cluster\",namespace=~\"$namespace\", pod=~\"$pod\"}[$__rate_interval])) by (pod)",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets Dropped",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "allValue": ".+",
                      "current": {
                          "selected": false,
                          "text": "kube-system",
                          "value": "kube-system"
                      },
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "namespace",
                      "name": "namespace",
                      "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "current": {
                          "selected": false,
                          "text": "kube-system",
                          "value": "kube-system"
                      },
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "pod",
                      "name": "pod",
                      "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\",namespace=~\"$namespace\"}, pod)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Networking / Pod",
          "uid": "7a18067ce943a40ae25454675c19ff5c"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-pod-total
    namespace: monitoring
- apiVersion: v1
  data:
    prometheus.json: |-
      {
          "panels": [
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "panels": [

                  ],
                  "title": "Prometheus Stats",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "decimals": 2,
                          "displayName": "",
                          "unit": "short"
                      },
                      "overrides": [
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Time"
                              },
                              "properties": [
                                  {
                                      "id": "displayName",
                                      "value": "Time"
                                  },
                                  {
                                      "id": "custom.align",
                                      "value": null
                                  },
                                  {
                                      "id": "custom.hidden",
                                      "value": "true"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "cluster"
                              },
                              "properties": [
                                  {
                                      "id": "custom.align",
                                      "value": null
                                  },
                                  {
                                      "id": "unit",
                                      "value": "short"
                                  },
                                  {
                                      "id": "decimals",
                                      "value": 2
                                  },
                                  {
                                      "id": "displayName",
                                      "value": "Cluster"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "job"
                              },
                              "properties": [
                                  {
                                      "id": "custom.align",
                                      "value": null
                                  },
                                  {
                                      "id": "unit",
                                      "value": "short"
                                  },
                                  {
                                      "id": "decimals",
                                      "value": 2
                                  },
                                  {
                                      "id": "displayName",
                                      "value": "Job"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "instance"
                              },
                              "properties": [
                                  {
                                      "id": "displayName",
                                      "value": "Instance"
                                  },
                                  {
                                      "id": "custom.align",
                                      "value": null
                                  },
                                  {
                                      "id": "unit",
                                      "value": "short"
                                  },
                                  {
                                      "id": "decimals",
                                      "value": 2
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "version"
                              },
                              "properties": [
                                  {
                                      "id": "displayName",
                                      "value": "Version"
                                  },
                                  {
                                      "id": "custom.align",
                                      "value": null
                                  },
                                  {
                                      "id": "unit",
                                      "value": "short"
                                  },
                                  {
                                      "id": "decimals",
                                      "value": 2
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Value #A"
                              },
                              "properties": [
                                  {
                                      "id": "displayName",
                                      "value": "Count"
                                  },
                                  {
                                      "id": "custom.align",
                                      "value": null
                                  },
                                  {
                                      "id": "unit",
                                      "value": "short"
                                  },
                                  {
                                      "id": "decimals",
                                      "value": 2
                                  },
                                  {
                                      "id": "custom.hidden",
                                      "value": "true"
                                  }
                              ]
                          },
                          {
                              "matcher": {
                                  "id": "byName",
                                  "options": "Value #B"
                              },
                              "properties": [
                                  {
                                      "id": "displayName",
                                      "value": "Uptime"
                                  },
                                  {
                                      "id": "custom.align",
                                      "value": null
                                  },
                                  {
                                      "id": "unit",
                                      "value": "s"
                                  }
                              ]
                          }
                      ]
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 1
                  },
                  "id": 2,
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "count by (cluster, job, instance, version) (prometheus_build_info{cluster=~\"$cluster\", job=~\"$job\", instance=~\"$instance\"})",
                          "format": "table",
                          "instant": true,
                          "legendFormat": ""
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "max by (cluster, job, instance) (time() - process_start_time_seconds{cluster=~\"$cluster\", job=~\"$job\", instance=~\"$instance\"})",
                          "format": "table",
                          "instant": true,
                          "legendFormat": ""
                      }
                  ],
                  "title": "Prometheus Stats",
                  "type": "table"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 8
                  },
                  "id": 3,
                  "panels": [

                  ],
                  "title": "Discovery",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never"
                          },
                          "min": 0,
                          "unit": "ms"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 9
                  },
                  "id": 4,
                  "options": {
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "sum(rate(prometheus_target_sync_length_seconds_sum{cluster=~\"$cluster\",job=~\"$job\",instance=~\"$instance\"}[5m])) by (cluster, job, scrape_job, instance) * 1e3",
                          "format": "time_series",
                          "legendFormat": "{{cluster}}:{{job}}:{{instance}}:{{scrape_job}}"
                      }
                  ],
                  "title": "Target Sync",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "lineWidth": 0,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "min": 0,
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 9
                  },
                  "id": 5,
                  "options": {
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "sum by (cluster, job, instance) (prometheus_sd_discovered_targets{cluster=~\"$cluster\", job=~\"$job\",instance=~\"$instance\"})",
                          "format": "time_series",
                          "legendFormat": "{{cluster}}:{{job}}:{{instance}}"
                      }
                  ],
                  "title": "Targets",
                  "type": "timeseries"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 16
                  },
                  "id": 6,
                  "panels": [

                  ],
                  "title": "Retrieval",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never"
                          },
                          "min": 0,
                          "unit": "ms"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 0,
                      "y": 17
                  },
                  "id": 7,
                  "options": {
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(prometheus_target_interval_length_seconds_sum{cluster=~\"$cluster\", job=~\"$job\",instance=~\"$instance\"}[5m]) / rate(prometheus_target_interval_length_seconds_count{cluster=~\"$cluster\", job=~\"$job\",instance=~\"$instance\"}[5m]) * 1e3",
                          "format": "time_series",
                          "legendFormat": "{{cluster}}:{{job}}:{{instance}} {{interval}} configured"
                      }
                  ],
                  "title": "Average Scrape Interval Duration",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "lineWidth": 0,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "min": 0,
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 8,
                      "y": 17
                  },
                  "id": 8,
                  "options": {
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "sum by (cluster, job, instance) (rate(prometheus_target_scrapes_exceeded_body_size_limit_total{cluster=~\"$cluster\",job=~\"$job\",instance=~\"$instance\"}[1m]))",
                          "format": "time_series",
                          "legendFormat": "exceeded body size limit: {{cluster}} {{job}} {{instance}}"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "sum by (cluster, job, instance) (rate(prometheus_target_scrapes_exceeded_sample_limit_total{cluster=~\"$cluster\",job=~\"$job\",instance=~\"$instance\"}[1m]))",
                          "format": "time_series",
                          "legendFormat": "exceeded sample limit: {{cluster}} {{job}} {{instance}}"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "sum by (cluster, job, instance) (rate(prometheus_target_scrapes_sample_duplicate_timestamp_total{cluster=~\"$cluster\",job=~\"$job\",instance=~\"$instance\"}[1m]))",
                          "format": "time_series",
                          "legendFormat": "duplicate timestamp: {{cluster}} {{job}} {{instance}}"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "sum by (cluster, job, instance) (rate(prometheus_target_scrapes_sample_out_of_bounds_total{cluster=~\"$cluster\",job=~\"$job\",instance=~\"$instance\"}[1m]))",
                          "format": "time_series",
                          "legendFormat": "out of bounds: {{cluster}} {{job}} {{instance}}"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "sum by (cluster, job, instance) (rate(prometheus_target_scrapes_sample_out_of_order_total{cluster=~\"$cluster\",job=~\"$job\",instance=~\"$instance\"}[1m]))",
                          "format": "time_series",
                          "legendFormat": "out of order: {{cluster}} {{job}} {{instance}}"
                      }
                  ],
                  "title": "Scrape failures",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "lineWidth": 0,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "min": 0,
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 16,
                      "y": 17
                  },
                  "id": 9,
                  "options": {
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(prometheus_tsdb_head_samples_appended_total{cluster=~\"$cluster\", job=~\"$job\",instance=~\"$instance\"}[5m])",
                          "format": "time_series",
                          "legendFormat": "{{cluster}} {{job}} {{instance}}"
                      }
                  ],
                  "title": "Appended Samples",
                  "type": "timeseries"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 24
                  },
                  "id": 10,
                  "panels": [

                  ],
                  "title": "Storage",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "lineWidth": 0,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "min": 0,
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 25
                  },
                  "id": 11,
                  "options": {
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "prometheus_tsdb_head_series{cluster=~\"$cluster\",job=~\"$job\",instance=~\"$instance\"}",
                          "format": "time_series",
                          "legendFormat": "{{cluster}} {{job}} {{instance}} head series"
                      }
                  ],
                  "title": "Head Series",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "lineWidth": 0,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "min": 0,
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 25
                  },
                  "id": 12,
                  "options": {
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "prometheus_tsdb_head_chunks{cluster=~\"$cluster\",job=~\"$job\",instance=~\"$instance\"}",
                          "format": "time_series",
                          "legendFormat": "{{cluster}} {{job}} {{instance}} head chunks"
                      }
                  ],
                  "title": "Head Chunks",
                  "type": "timeseries"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 32
                  },
                  "id": 13,
                  "panels": [

                  ],
                  "title": "Query",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "lineWidth": 0,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "min": 0,
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 33
                  },
                  "id": 14,
                  "options": {
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(prometheus_engine_query_duration_seconds_count{cluster=~\"$cluster\",job=~\"$job\",instance=~\"$instance\",slice=\"inner_eval\"}[5m])",
                          "format": "time_series",
                          "legendFormat": "{{cluster}} {{job}} {{instance}}"
                      }
                  ],
                  "title": "Query Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 100,
                              "lineWidth": 0,
                              "showPoints": "never",
                              "stacking": {
                                  "mode": "normal"
                              }
                          },
                          "min": 0,
                          "unit": "ms"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 33
                  },
                  "id": 15,
                  "options": {
                      "tooltip": {
                          "mode": "multi",
                          "sort": "desc"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "max by (slice) (prometheus_engine_query_duration_seconds{quantile=\"0.9\",cluster=~\"$cluster\", job=~\"$job\",instance=~\"$instance\"}) * 1e3",
                          "format": "time_series",
                          "legendFormat": "{{slice}}"
                      }
                  ],
                  "title": "Stage Duration",
                  "type": "timeseries"
              }
          ],
          "schemaVersion": 39,
          "tags": [
              "prometheus-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": false,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "type": "datasource"
                  },
                  {
                      "allValue": ".+",
                      "current": {
                          "selected": false,
                          "text": [
                              "$__all"
                          ],
                          "value": [
                              "$__all"
                          ]
                      },
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "cluster",
                      "multi": true,
                      "name": "cluster",
                      "query": "label_values(prometheus_build_info{job=\"prometheus-k8s\",namespace=\"monitoring\"}, cluster)",
                      "refresh": 2,
                      "sort": 2,
                      "type": "query"
                  },
                  {
                      "allValue": ".+",
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "includeAll": true,
                      "label": "job",
                      "multi": true,
                      "name": "job",
                      "query": "label_values(prometheus_build_info{cluster=~\"$cluster\"}, job)",
                      "refresh": 2,
                      "sort": 2,
                      "type": "query"
                  },
                  {
                      "allValue": ".+",
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "includeAll": true,
                      "label": "instance",
                      "multi": true,
                      "name": "instance",
                      "query": "label_values(prometheus_build_info{cluster=~\"$cluster\", job=~\"$job\"}, instance)",
                      "refresh": 2,
                      "sort": 2,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timepicker": {
              "refresh_intervals": [
                  "60s"
              ]
          },
          "timezone": "utc",
          "title": "Prometheus / Overview",
          "uid": "9fa0d141-d019-4ad7-8bc5-42196ee308bd"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-prometheus
    namespace: monitoring
- apiVersion: v1
  data:
    prometheus-remote-write.json: |-
      {
          "panels": [
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "panels": [

                  ],
                  "title": "Timestamps",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never"
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 1
                  },
                  "id": 2,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "(\n  prometheus_remote_storage_queue_highest_timestamp_seconds{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}\n-\n  prometheus_remote_storage_queue_highest_sent_timestamp_seconds{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}\n)\n",
                          "format": "time_series",
                          "intervalFactor": 2,
                          "legendFormat": "{{cluster}}::{{instance}} {{remote_name}}:{{url}}"
                      }
                  ],
                  "title": "Highest Enqueued Timestamp vs. Highest Timestamp Sent",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never"
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 1
                  },
                  "id": 3,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "clamp_min(\n  rate(prometheus_remote_storage_queue_highest_timestamp_seconds{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m])\n-\n  rate(prometheus_remote_storage_queue_highest_sent_timestamp_seconds{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m])\n, 0)\n",
                          "format": "time_series",
                          "intervalFactor": 2,
                          "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}"
                      }
                  ],
                  "title": "Rate[5m]",
                  "type": "timeseries"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 8
                  },
                  "id": 4,
                  "panels": [

                  ],
                  "title": "Samples",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never"
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 9
                  },
                  "id": 5,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(\n  prometheus_remote_storage_samples_in_total{cluster=~\"$cluster\", instance=~\"$instance\"}[5m])\n-\n  ignoring(remote_name, url) group_right(instance) (rate(prometheus_remote_storage_succeeded_samples_total{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m]) or rate(prometheus_remote_storage_samples_total{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m]))\n-\n  (rate(prometheus_remote_storage_dropped_samples_total{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m]) or rate(prometheus_remote_storage_samples_dropped_total{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m]))\n",
                          "format": "time_series",
                          "intervalFactor": 2,
                          "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}"
                      }
                  ],
                  "title": "Rate, in vs. succeeded or dropped [5m]",
                  "type": "timeseries"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 16
                  },
                  "id": 6,
                  "panels": [

                  ],
                  "title": "Shards",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never"
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 16
                  },
                  "id": 7,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "prometheus_remote_storage_shards{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}",
                          "format": "time_series",
                          "intervalFactor": 2,
                          "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}"
                      }
                  ],
                  "title": "Current Shards",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never"
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 0,
                      "y": 23
                  },
                  "id": 8,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "prometheus_remote_storage_shards_max{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}",
                          "format": "time_series",
                          "intervalFactor": 2,
                          "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}"
                      }
                  ],
                  "title": "Max Shards",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never"
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 8,
                      "y": 23
                  },
                  "id": 9,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "prometheus_remote_storage_shards_min{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}",
                          "format": "time_series",
                          "intervalFactor": 2,
                          "legendFormat": "{{cluster}}{{instance}} {{remote_name}}:{{url}}"
                      }
                  ],
                  "title": "Min Shards",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never"
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 16,
                      "y": 23
                  },
                  "id": 10,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "prometheus_remote_storage_shards_desired{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}",
                          "format": "time_series",
                          "intervalFactor": 2,
                          "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}"
                      }
                  ],
                  "title": "Desired Shards",
                  "type": "timeseries"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 24
                  },
                  "id": 11,
                  "panels": [

                  ],
                  "title": "Shard Details",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never"
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 25
                  },
                  "id": 12,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "prometheus_remote_storage_shard_capacity{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}",
                          "format": "time_series",
                          "intervalFactor": 2,
                          "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}"
                      }
                  ],
                  "title": "Shard Capacity",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never"
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 25
                  },
                  "id": 13,
                  "options": {
                      "tooltip": {
                          "mode": "multi"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "prometheus_remote_storage_pending_samples{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"} or prometheus_remote_storage_samples_pending{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}",
                          "format": "time_series",
                          "intervalFactor": 2,
                          "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}"
                      }
                  ],
                  "title": "Pending Samples",
                  "type": "timeseries"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 32
                  },
                  "id": 14,
                  "panels": [

                  ],
                  "title": "Segments",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 0,
                              "showPoints": "never"
                          },
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 33
                  },
                  "id": 15,
                  "options": {
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "prometheus_tsdb_wal_segment_current{cluster=~\"$cluster\", instance=~\"$instance\"}",
                          "format": "time_series",
                          "intervalFactor": 2,
                          "legendFormat": "{{cluster}}:{{instance}}"
                      }
                  ],
                  "title": "TSDB Current Segment",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 0,
                              "showPoints": "never"
                          },
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 33
                  },
                  "id": 16,
                  "options": {
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "prometheus_wal_watcher_current_segment{cluster=~\"$cluster\", instance=~\"$instance\"}",
                          "format": "time_series",
                          "intervalFactor": 2,
                          "legendFormat": "{{cluster}}:{{instance}} {{consumer}}"
                      }
                  ],
                  "title": "Remote Write Current Segment",
                  "type": "timeseries"
              },
              {
                  "collapsed": false,
                  "gridPos": {
                      "h": 1,
                      "w": 24,
                      "x": 0,
                      "y": 40
                  },
                  "id": 17,
                  "panels": [

                  ],
                  "title": "Misc. Rates",
                  "type": "row"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 0,
                              "showPoints": "never"
                          }
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 0,
                      "y": 41
                  },
                  "id": 18,
                  "options": {
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(prometheus_remote_storage_dropped_samples_total{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m]) or rate(prometheus_remote_storage_samples_dropped_total{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m])",
                          "format": "time_series",
                          "intervalFactor": 2,
                          "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}"
                      }
                  ],
                  "title": "Dropped Samples",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 0,
                              "showPoints": "never"
                          }
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 6,
                      "y": 41
                  },
                  "id": 19,
                  "options": {
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(prometheus_remote_storage_failed_samples_total{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m]) or rate(prometheus_remote_storage_samples_failed_total{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m])",
                          "format": "time_series",
                          "intervalFactor": 2,
                          "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}"
                      }
                  ],
                  "title": "Failed Samples",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 0,
                              "showPoints": "never"
                          }
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 12,
                      "y": 41
                  },
                  "id": 20,
                  "options": {
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(prometheus_remote_storage_retried_samples_total{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m]) or rate(prometheus_remote_storage_samples_retried_total{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m])",
                          "format": "time_series",
                          "intervalFactor": 2,
                          "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}"
                      }
                  ],
                  "title": "Retried Samples",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "prometheus",
                      "uid": "$datasource"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 0,
                              "showPoints": "never"
                          }
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 6,
                      "x": 18,
                      "y": 41
                  },
                  "id": 21,
                  "options": {
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "$datasource"
                          },
                          "expr": "rate(prometheus_remote_storage_enqueue_retries_total{cluster=~\"$cluster\", instance=~\"$instance\", url=~\"$url\"}[5m])",
                          "format": "time_series",
                          "intervalFactor": 2,
                          "legendFormat": "{{cluster}}:{{instance}} {{remote_name}}:{{url}}"
                      }
                  ],
                  "title": "Enqueue Retries",
                  "type": "timeseries"
              }
          ],
          "schemaVersion": 39,
          "tags": [
              "prometheus-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": false,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "name": "datasource",
                      "query": "prometheus",
                      "type": "datasource"
                  },
                  {
                      "current": {
                          "selected": false,
                          "text": "$__all",
                          "value": "$__all"
                      },
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "name": "cluster",
                      "query": "label_values(prometheus_build_info, cluster)",
                      "refresh": 2,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "includeAll": true,
                      "name": "instance",
                      "query": "label_values(prometheus_build_info{cluster=~\"$cluster\"}, instance)",
                      "refresh": 2,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "includeAll": true,
                      "name": "url",
                      "query": "label_values(prometheus_remote_storage_shards{cluster=~\"$cluster\", instance=~\"$instance\"}, url)",
                      "refresh": 2,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timepicker": {
              "refresh_intervals": [
                  "60s"
              ]
          },
          "timezone": "utc",
          "title": "Prometheus / Remote Write"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-prometheus-remote-write
    namespace: monitoring
- apiVersion: v1
  data:
    proxy.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 4,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(up{cluster=\"$cluster\", job=\"kube-proxy\"})",
                          "instant": true
                      }
                  ],
                  "title": "Up",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 10,
                      "x": 4,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(kubeproxy_sync_proxy_rules_duration_seconds_count{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\"}[$__rate_interval]))",
                          "legendFormat": "rate"
                      }
                  ],
                  "title": "Rules Sync Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 10,
                      "x": 14,
                      "y": 0
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99,rate(kubeproxy_sync_proxy_rules_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\"}[$__rate_interval]))",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Rules Sync Latency 99th Quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 0,
                      "y": 7
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(kubeproxy_network_programming_duration_seconds_count{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\"}[$__rate_interval]))",
                          "legendFormat": "rate"
                      }
                  ],
                  "title": "Network Programming Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 12,
                      "x": 12,
                      "y": 7
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(kubeproxy_network_programming_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\"}[$__rate_interval])) by (instance, le))",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Network Programming Latency 99th Quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 0,
                      "y": 14
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kube-proxy\", instance=~\"$instance\",code=~\"2..\"}[$__rate_interval]))",
                          "legendFormat": "2xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kube-proxy\", instance=~\"$instance\",code=~\"3..\"}[$__rate_interval]))",
                          "legendFormat": "3xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kube-proxy\", instance=~\"$instance\",code=~\"4..\"}[$__rate_interval]))",
                          "legendFormat": "4xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\",job=\"kube-proxy\", instance=~\"$instance\",code=~\"5..\"}[$__rate_interval]))",
                          "legendFormat": "5xx"
                      }
                  ],
                  "title": "Kube API Request Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 16,
                      "x": 8,
                      "y": 14
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-proxy\",instance=~\"$instance\",verb=\"POST\"}[$__rate_interval])) by (verb, le))",
                          "legendFormat": "{{verb}}"
                      }
                  ],
                  "title": "Post Request Latency 99th Quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 21
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-proxy\", instance=~\"$instance\", verb=\"GET\"}[$__rate_interval])) by (verb, le))",
                          "legendFormat": "{{verb}}"
                      }
                  ],
                  "title": "Get Request Latency 99th Quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 0,
                      "y": 28
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "process_resident_memory_bytes{cluster=\"$cluster\", job=\"kube-proxy\",instance=~\"$instance\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Memory",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 8,
                      "y": 28
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "rate(process_cpu_seconds_total{cluster=\"$cluster\", job=\"kube-proxy\",instance=~\"$instance\"}[$__rate_interval])",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "CPU usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 16,
                      "y": 28
                  },
                  "id": 11,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "go_goroutines{cluster=\"$cluster\", job=\"kube-proxy\",instance=~\"$instance\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Goroutines",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kube-proxy\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "allValue": ".+",
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "instance",
                      "name": "instance",
                      "query": "label_values(up{job=\"kube-proxy\", cluster=\"$cluster\", job=\"kube-proxy\"}, instance)",
                      "refresh": 2,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Proxy",
          "uid": "632e265de029684c40b21cb76bca4f94"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-proxy
    namespace: monitoring
- apiVersion: v1
  data:
    scheduler.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "unit": "none"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 4,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "colorMode": "none"
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(up{cluster=\"$cluster\", job=\"kube-scheduler\"})",
                          "instant": true
                      }
                  ],
                  "title": "Up",
                  "type": "stat"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 10,
                      "x": 4,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(scheduler_e2e_scheduling_duration_seconds_count{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance)",
                          "legendFormat": "{{cluster}} {{instance}} e2e"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(scheduler_binding_duration_seconds_count{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance)",
                          "legendFormat": "{{cluster}} {{instance}} binding"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(scheduler_scheduling_algorithm_duration_seconds_count{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance)",
                          "legendFormat": "{{cluster}} {{instance}} scheduling algorithm"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(scheduler_volume_scheduling_duration_seconds_count{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance)",
                          "legendFormat": "{{cluster}} {{instance}} volume"
                      }
                  ],
                  "title": "Scheduling Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 10,
                      "x": 14,
                      "y": 0
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\",instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, le))",
                          "legendFormat": "{{cluster}} {{instance}} e2e"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(scheduler_binding_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\",instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, le))",
                          "legendFormat": "{{cluster}} {{instance}} binding"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\",instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, le))",
                          "legendFormat": "{{cluster}} {{instance}} scheduling algorithm"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(scheduler_volume_scheduling_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\",instance=~\"$instance\"}[$__rate_interval])) by (cluster, instance, le))",
                          "legendFormat": "{{cluster}} {{instance}} volume"
                      }
                  ],
                  "title": "Scheduling latency 99th Quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 0,
                      "y": 7
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\",code=~\"2..\"}[$__rate_interval]))",
                          "legendFormat": "2xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\",code=~\"3..\"}[$__rate_interval]))",
                          "legendFormat": "3xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\",code=~\"4..\"}[$__rate_interval]))",
                          "legendFormat": "4xx"
                      },
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sum(rate(rest_client_requests_total{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\",code=~\"5..\"}[$__rate_interval]))",
                          "legendFormat": "5xx"
                      }
                  ],
                  "title": "Kube API Request Rate",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "ops"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 16,
                      "x": 8,
                      "y": 7
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\", verb=\"POST\"}[$__rate_interval])) by (verb, le))",
                          "legendFormat": "{{verb}}"
                      }
                  ],
                  "title": "Post Request Latency 99th Quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "s"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 24,
                      "x": 0,
                      "y": 14
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\", verb=\"GET\"}[$__rate_interval])) by (verb, le))",
                          "legendFormat": "{{verb}}"
                      }
                  ],
                  "title": "Get Request Latency 99th Quantile",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "bytes"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 0,
                      "y": 21
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "process_resident_memory_bytes{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Memory",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 8,
                      "y": 21
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "rate(process_cpu_seconds_total{cluster=\"$cluster\", job=\"kube-scheduler\", instance=~\"$instance\"}[$__rate_interval])",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "CPU usage",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "short"
                      }
                  },
                  "gridPos": {
                      "h": 7,
                      "w": 8,
                      "x": 16,
                      "y": 21
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "go_goroutines{cluster=\"$cluster\", job=\"kube-scheduler\",instance=~\"$instance\"}",
                          "legendFormat": "{{instance}}"
                      }
                  ],
                  "title": "Goroutines",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(up{job=\"kube-scheduler\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "allValue": ".+",
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "instance",
                      "name": "instance",
                      "query": "label_values(up{job=\"kube-scheduler\", cluster=\"$cluster\"}, instance)",
                      "refresh": 2,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Scheduler",
          "uid": "2e6b6a3b4bddf1427b3a55aa1311c656"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-scheduler
    namespace: monitoring
- apiVersion: v1
  data:
    workload-total.json: |-
      {
          "editable": false,
          "links": [
              {
                  "asDropdown": true,
                  "includeVars": true,
                  "keepTime": true,
                  "tags": [
                      "kubernetes-mixin"
                  ],
                  "targetBlank": false,
                  "title": "Kubernetes",
                  "type": "dashboards"
              }
          ],
          "panels": [
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "color": {
                              "fixedColor": "green",
                              "mode": "fixed"
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 0
                  },
                  "id": 1,
                  "interval": "1m",
                  "options": {
                      "displayMode": "basic",
                      "showUnfilled": false
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Current Rate of Bytes Received",
                  "type": "bargauge"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "color": {
                              "fixedColor": "green",
                              "mode": "fixed"
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 0
                  },
                  "id": 2,
                  "interval": "1m",
                  "options": {
                      "displayMode": "basic",
                      "showUnfilled": false
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Current Rate of Bytes Transmitted",
                  "type": "bargauge"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "color": {
                              "fixedColor": "green",
                              "mode": "fixed"
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 9
                  },
                  "id": 3,
                  "interval": "1m",
                  "options": {
                      "displayMode": "basic",
                      "showUnfilled": false
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(avg(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Rate of Bytes Received",
                  "type": "bargauge"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "color": {
                              "fixedColor": "green",
                              "mode": "fixed"
                          },
                          "unit": "Bps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 9
                  },
                  "id": 4,
                  "interval": "1m",
                  "options": {
                      "displayMode": "basic",
                      "showUnfilled": false
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(avg(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Average Rate of Bytes Transmitted",
                  "type": "bargauge"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 18
                  },
                  "id": 5,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_receive_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Receive Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "binBps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 18
                  },
                  "id": 6,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_transmit_bytes_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Transmit Bandwidth",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 27
                  },
                  "id": 7,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_receive_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 27
                  },
                  "id": 8,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_transmit_packets_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 0,
                      "y": 36
                  },
                  "id": 9,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_receive_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Received Packets Dropped",
                  "type": "timeseries"
              },
              {
                  "datasource": {
                      "type": "datasource",
                      "uid": "-- Mixed --"
                  },
                  "fieldConfig": {
                      "defaults": {
                          "custom": {
                              "fillOpacity": 10,
                              "showPoints": "never",
                              "spanNulls": true
                          },
                          "unit": "pps"
                      }
                  },
                  "gridPos": {
                      "h": 9,
                      "w": 12,
                      "x": 12,
                      "y": 36
                  },
                  "id": 10,
                  "interval": "1m",
                  "options": {
                      "legend": {
                          "asTable": true,
                          "calcs": [
                              "lastNotNull"
                          ],
                          "displayMode": "table",
                          "placement": "right",
                          "showLegend": true
                      },
                      "tooltip": {
                          "mode": "single"
                      }
                  },
                  "pluginVersion": "v11.4.0",
                  "targets": [
                      {
                          "datasource": {
                              "type": "prometheus",
                              "uid": "${datasource}"
                          },
                          "expr": "sort_desc(sum(rate(container_network_transmit_packets_dropped_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"$cluster\",namespace=~\"$namespace\"}[$__rate_interval])\n* on (namespace,pod)\ngroup_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\",namespace=~\"$namespace\", workload=~\"$workload\", workload_type=~\"$type\"}) by (pod))\n",
                          "legendFormat": "__auto"
                      }
                  ],
                  "title": "Rate of Transmitted Packets Dropped",
                  "type": "timeseries"
              }
          ],
          "refresh": "10s",
          "schemaVersion": 39,
          "tags": [
              "kubernetes-mixin"
          ],
          "templating": {
              "list": [
                  {
                      "current": {
                          "selected": true,
                          "text": "default",
                          "value": "default"
                      },
                      "hide": 0,
                      "label": "Data source",
                      "name": "datasource",
                      "query": "prometheus",
                      "regex": "",
                      "type": "datasource"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "cluster",
                      "name": "cluster",
                      "query": "label_values(kube_pod_info{job=\"kube-state-metrics\"}, cluster)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "allValue": ".+",
                      "current": {
                          "selected": false,
                          "text": "kube-system",
                          "value": "kube-system"
                      },
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "namespace",
                      "name": "namespace",
                      "query": "label_values(container_network_receive_packets_total{cluster=\"$cluster\"}, namespace)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "label": "workload",
                      "name": "workload",
                      "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\".+\"}, workload)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  },
                  {
                      "allValue": ".+",
                      "datasource": {
                          "type": "prometheus",
                          "uid": "${datasource}"
                      },
                      "hide": 0,
                      "includeAll": true,
                      "label": "workload_type",
                      "name": "type",
                      "query": "label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster=\"$cluster\", namespace=~\"$namespace\", workload=~\"$workload\"}, workload_type)",
                      "refresh": 2,
                      "sort": 1,
                      "type": "query"
                  }
              ]
          },
          "time": {
              "from": "now-1h",
              "to": "now"
          },
          "timezone": "UTC",
          "title": "Kubernetes / Networking / Workload",
          "uid": "728bf77cc1166d2f3133bf25846876cc"
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboard-workload-total
    namespace: monitoring
- apiVersion: v1
  data:
    dashboards.yaml: |-
      {
          "apiVersion": 1,
          "providers": [
              {
                  "folder": "Default",
                  "folderUid": "",
                  "name": "0",
                  "options": {
                      "path": "/grafana-dashboard-definitions/0"
                  },
                  "orgId": 1,
                  "type": "file"
              }
          ]
      }
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 12.1.0
    name: grafana-dashboards
    namespace: monitoring
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIELTCCApWgAwIBAgIRAMH90bGd7EZBR+oO1E7Vu3QwDQYJKoZIhvcNAQELBQAw
      LzEtMCsGA1UEAxMkZTE0M2M5YTYtNjRjYi00ZjI4LTk0NmQtZmZlYWQ0ODlmZWZk
      MCAXDTI1MDkyODEzNDUyN1oYDzIwNTUwOTIxMTQ0NTI3WjAvMS0wKwYDVQQDEyRl
      MTQzYzlhNi02NGNiLTRmMjgtOTQ2ZC1mZmVhZDQ4OWZlZmQwggGiMA0GCSqGSIb3
      DQEBAQUAA4IBjwAwggGKAoIBgQCzVfRMAji982iQ12LiB0NbH8TMv1pmQAYXdROH
      lUjN0ILpfRdCImK2aBaTBOZZ1Kk49JPweNlrxEUJl2pRsWa0PfYgJ6UgZoj77pyn
      gmFSAIdwBwzG8zp4W4cb9ZMT0G8ZJ+sXjF1if2+TCkbrpWiPTbjBk5JWZNVMld9L
      Uc/4g0iGLM7OkLZFkYoQckGRQTfzuN5nOQHDOefFoLCbO5if3b5LrT3orcuwc9Ty
      +mpVtDwNkSjD4fwVfvDbXij0sGOsBS+JpIdwsjL+b8DDT2B1aPGNXzcs8V7dAg+h
      0JlSBMeJTsGUa/4WWJO0PRZP4VDxppgPMYM9cmv/tGpydAJY+vXrq0PGzmgwXu/u
      PV6C7ScyiBManJcA7GLeO5EOyIZrjwvS7ut6SkkgLDj21ue/3Pax0xrd4hIXq8aV
      GkdW9NkYUZV4HMmd3Du9dZV8udW++bcc5m1zawLc2tHBplT71cnTXeB7im/Cbmc5
      qOoxEd8xeg6Eqh3erkvNtB9BIeECAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgIEMA8G
      A1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFITt7bG8ViIVaxHjCT6CP1sheNDJMA0G
      CSqGSIb3DQEBCwUAA4IBgQAzsP4hn8pWMuuNJe3iFGFZdaA31K0mQAlR0KFLIYnJ
      lyBfKjG0i7/1TLlEegLDeUy/fyd0hYYbcLqZiCFlTvK6YQwA1Jk7WmAzrzEqzFMi
      ydlYx2GDkbX3vQRKs4oqdhhIWrvtHjcDWKsSMqkl2mIWhRp5qJyClcHEo0iFFfH0
      2FhkdMiqKnkXD+krUcgULt7tuXVjMVNSIR2LeY1X561IF0wnfwvYSa7RjM95napI
      HQNYxm89iPP1BAHs9Y+2/m2TRu2FOheYeSnyNosst+pCppAO7L8UODk6uSq18OiT
      706npIS9RRL0n3I7Wfm5K4ErUB7VGARu2rpLdlz/bg5Do+TXOUBn3mU/IiNqJw3u
      gvLHsctRi2cwKbiEaRbCJDatz5QWvbKK7EZ2yRpbsAgiRAu6XCAUZeKTDNEZdHBz
      jOXMgHfT1aMHQC2pSrKNliIogIudAYUQ5O3M6CTUdKaT40wd9m4Sg15AC2szw0Og
      Meu/C1PGiiwpZiXfchq2gcg=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    name: kube-root-ca.crt
    namespace: monitoring
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      managed-by: prometheus-operator
      prometheus-name: apps
    name: prometheus-apps-rulefiles-0
    namespace: monitoring
- apiVersion: v1
  data:
    monitoring-alertmanager-main-rules-0bb03237-9bc1-4308-8275-e0dda410f9ff.yaml: |
      groups:
      - name: alertmanager.rules
        rules:
        - alert: AlertmanagerFailedReload
          annotations:
            description: Configuration has failed to load for {{ $labels.namespace }}/{{
              $labels.pod}}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagerfailedreload
            summary: Reloading an Alertmanager configuration has failed.
          expr: |
            # Without max_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            max_over_time(alertmanager_config_last_reload_successful{job="alertmanager-main",namespace="monitoring"}[5m]) == 0
          for: 10m
          labels:
            severity: critical
        - alert: AlertmanagerMembersInconsistent
          annotations:
            description: Alertmanager {{ $labels.namespace }}/{{ $labels.pod}} has only
              found {{ $value }} members of the {{$labels.job}} cluster.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagermembersinconsistent
            summary: A member of an Alertmanager cluster has not found all other cluster
              members.
          expr: |
            # Without max_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
              max_over_time(alertmanager_cluster_members{job="alertmanager-main",namespace="monitoring"}[5m])
            < on (namespace,service) group_left
              count by (namespace,service) (max_over_time(alertmanager_cluster_members{job="alertmanager-main",namespace="monitoring"}[5m]))
          for: 15m
          labels:
            severity: critical
        - alert: AlertmanagerFailedToSendAlerts
          annotations:
            description: Alertmanager {{ $labels.namespace }}/{{ $labels.pod}} failed to
              send {{ $value | humanizePercentage }} of notifications to {{ $labels.integration
              }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagerfailedtosendalerts
            summary: An Alertmanager instance failed to send notifications.
          expr: |
            (
              rate(alertmanager_notifications_failed_total{job="alertmanager-main",namespace="monitoring"}[15m])
            /
              ignoring (reason) group_left rate(alertmanager_notifications_total{job="alertmanager-main",namespace="monitoring"}[15m])
            )
            > 0.01
          for: 5m
          labels:
            severity: warning
        - alert: AlertmanagerClusterFailedToSendAlerts
          annotations:
            description: The minimum notification failure rate to {{ $labels.integration
              }} sent from any instance in the {{$labels.job}} cluster is {{ $value | humanizePercentage
              }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagerclusterfailedtosendalerts
            summary: All Alertmanager instances in a cluster failed to send notifications
              to a critical integration.
          expr: |
            min by (namespace,service, integration) (
              rate(alertmanager_notifications_failed_total{job="alertmanager-main",namespace="monitoring", integration=~`.*`}[15m])
            /
              ignoring (reason) group_left rate(alertmanager_notifications_total{job="alertmanager-main",namespace="monitoring", integration=~`.*`}[15m])
            )
            > 0.01
          for: 5m
          labels:
            severity: critical
        - alert: AlertmanagerClusterFailedToSendAlerts
          annotations:
            description: The minimum notification failure rate to {{ $labels.integration
              }} sent from any instance in the {{$labels.job}} cluster is {{ $value | humanizePercentage
              }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagerclusterfailedtosendalerts
            summary: All Alertmanager instances in a cluster failed to send notifications
              to a non-critical integration.
          expr: |
            min by (namespace,service, integration) (
              rate(alertmanager_notifications_failed_total{job="alertmanager-main",namespace="monitoring", integration!~`.*`}[15m])
            /
              ignoring (reason) group_left rate(alertmanager_notifications_total{job="alertmanager-main",namespace="monitoring", integration!~`.*`}[15m])
            )
            > 0.01
          for: 5m
          labels:
            severity: warning
        - alert: AlertmanagerConfigInconsistent
          annotations:
            description: Alertmanager instances within the {{$labels.job}} cluster have
              different configurations.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagerconfiginconsistent
            summary: Alertmanager instances within the same cluster have different configurations.
          expr: |
            count by (namespace,service) (
              count_values by (namespace,service) ("config_hash", alertmanager_config_hash{job="alertmanager-main",namespace="monitoring"})
            )
            != 1
          for: 20m
          labels:
            severity: critical
        - alert: AlertmanagerClusterDown
          annotations:
            description: '{{ $value | humanizePercentage }} of Alertmanager instances within
              the {{$labels.job}} cluster have been up for less than half of the last 5m.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagerclusterdown
            summary: Half or more of the Alertmanager instances within the same cluster
              are down.
          expr: |
            (
              count by (namespace,service) (
                avg_over_time(up{job="alertmanager-main",namespace="monitoring"}[5m]) < 0.5
              )
            /
              count by (namespace,service) (
                up{job="alertmanager-main",namespace="monitoring"}
              )
            )
            >= 0.5
          for: 5m
          labels:
            severity: critical
        - alert: AlertmanagerClusterCrashlooping
          annotations:
            description: '{{ $value | humanizePercentage }} of Alertmanager instances within
              the {{$labels.job}} cluster have restarted at least 5 times in the last 10m.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagerclustercrashlooping
            summary: Half or more of the Alertmanager instances within the same cluster
              are crashlooping.
          expr: |
            (
              count by (namespace,service) (
                changes(process_start_time_seconds{job="alertmanager-main",namespace="monitoring"}[10m]) > 4
              )
            /
              count by (namespace,service) (
                up{job="alertmanager-main",namespace="monitoring"}
              )
            )
            >= 0.5
          for: 5m
          labels:
            severity: critical
    monitoring-grafana-rules-703f2f4d-cdd7-476e-9929-2f16232ab2fb.yaml: |
      groups:
      - name: GrafanaAlerts
        rules:
        - alert: GrafanaRequestsFailing
          annotations:
            message: '{{ $labels.namespace }}/{{ $labels.job }}/{{ $labels.handler }} is
              experiencing {{ $value | humanize }}% errors'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/grafana/grafanarequestsfailing
          expr: |
            100 * sum without (status_code) (namespace_job_handler_statuscode:grafana_http_request_duration_seconds_count:rate5m{handler!~"/api/datasources/proxy/:id.*|/api/ds/query|/api/tsdb/query", status_code=~"5.."})
            /
            sum without (status_code) (namespace_job_handler_statuscode:grafana_http_request_duration_seconds_count:rate5m{handler!~"/api/datasources/proxy/:id.*|/api/ds/query|/api/tsdb/query"})
            > 50
          for: 5m
          labels:
            severity: warning
      - name: grafana_rules
        rules:
        - expr: |
            sum by (namespace, job, handler, status_code) (rate(grafana_http_request_duration_seconds_count[5m]))
          record: namespace_job_handler_statuscode:grafana_http_request_duration_seconds_count:rate5m
    monitoring-kube-prometheus-rules-f93beb7a-7b90-421a-961b-99ce5ec864d2.yaml: |
      groups:
      - name: general.rules
        rules:
        - alert: TargetDown
          annotations:
            description: '{{ printf "%.4g" $value }}% of the {{ $labels.job }}/{{ $labels.service
              }} targets in {{ $labels.namespace }} namespace are down.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/general/targetdown
            summary: One or more targets are unreachable.
          expr: 100 * (count(up == 0) BY (cluster, job, namespace, service) / count(up)
            BY (cluster, job, namespace, service)) > 10
          for: 10m
          labels:
            severity: warning
        - alert: Watchdog
          annotations:
            description: |
              This is an alert meant to ensure that the entire alerting pipeline is functional.
              This alert is always firing, therefore it should always be firing in Alertmanager
              and always fire against a receiver. There are integrations with various notification
              mechanisms that send a notification when this alert is not firing. For example the
              "DeadMansSnitch" integration in PagerDuty.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/general/watchdog
            summary: An alert that should always be firing to certify that Alertmanager
              is working properly.
          expr: vector(1)
          labels:
            severity: none
        - alert: InfoInhibitor
          annotations:
            description: |
              This is an alert that is used to inhibit info alerts.
              By themselves, the info-level alerts are sometimes very noisy, but they are relevant when combined with
              other alerts.
              This alert fires whenever there's a severity="info" alert, and stops firing when another alert with a
              severity of 'warning' or 'critical' starts firing on the same namespace.
              This alert should be routed to a null receiver and configured to inhibit alerts with severity="info".
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/general/infoinhibitor
            summary: Info-level alert inhibition.
          expr: ALERTS{severity = "info"} == 1 unless on(namespace) ALERTS{alertname !=
            "InfoInhibitor", severity =~ "warning|critical", alertstate="firing"} == 1
          labels:
            severity: none
      - name: node-network
        rules:
        - alert: NodeNetworkInterfaceFlapping
          annotations:
            description: Network interface "{{ $labels.device }}" changing its up status
              often on node-exporter {{ $labels.namespace }}/{{ $labels.pod }}
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/general/nodenetworkinterfaceflapping
            summary: Network interface is often changing its status
          expr: |
            changes(node_network_up{job="node-exporter",device!~"veth.+"}[2m]) > 2
          for: 2m
          labels:
            severity: warning
      - name: kube-prometheus-node-recording.rules
        rules:
        - expr: sum(rate(node_cpu_seconds_total{mode!="idle",mode!="iowait",mode!="steal"}[3m]))
            BY (instance)
          record: instance:node_cpu:rate:sum
        - expr: sum(rate(node_network_receive_bytes_total[3m])) BY (instance)
          record: instance:node_network_receive_bytes:rate:sum
        - expr: sum(rate(node_network_transmit_bytes_total[3m])) BY (instance)
          record: instance:node_network_transmit_bytes:rate:sum
        - expr: sum(rate(node_cpu_seconds_total{mode!="idle",mode!="iowait",mode!="steal"}[5m]))
            WITHOUT (cpu, mode) / ON(instance) GROUP_LEFT() count(sum(node_cpu_seconds_total)
            BY (instance, cpu)) BY (instance)
          record: instance:node_cpu:ratio
        - expr: sum(rate(node_cpu_seconds_total{mode!="idle",mode!="iowait",mode!="steal"}[5m]))
          record: cluster:node_cpu:sum_rate5m
        - expr: cluster:node_cpu:sum_rate5m / count(sum(node_cpu_seconds_total) BY (instance,
            cpu))
          record: cluster:node_cpu:ratio
      - name: kube-prometheus-general.rules
        rules:
        - expr: count without(instance, pod, node) (up == 1)
          record: count:up1
        - expr: count without(instance, pod, node) (up == 0)
          record: count:up0
    monitoring-kube-state-metrics-rules-3d3b1a69-994e-4a83-8469-886db8aa15e8.yaml: |
      groups:
      - name: kube-state-metrics
        rules:
        - alert: KubeStateMetricsListErrors
          annotations:
            description: kube-state-metrics is experiencing errors at an elevated rate in
              list operations. This is likely causing it to not be able to expose metrics
              about Kubernetes objects correctly or at all.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kube-state-metrics/kubestatemetricslisterrors
            summary: kube-state-metrics is experiencing errors in list operations.
          expr: |
            (sum(rate(kube_state_metrics_list_total{job="kube-state-metrics",result="error"}[5m])) by (cluster)
              /
            sum(rate(kube_state_metrics_list_total{job="kube-state-metrics"}[5m])) by (cluster))
            > 0.01
          for: 15m
          labels:
            severity: critical
        - alert: KubeStateMetricsWatchErrors
          annotations:
            description: kube-state-metrics is experiencing errors at an elevated rate in
              watch operations. This is likely causing it to not be able to expose metrics
              about Kubernetes objects correctly or at all.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kube-state-metrics/kubestatemetricswatcherrors
            summary: kube-state-metrics is experiencing errors in watch operations.
          expr: |
            (sum(rate(kube_state_metrics_watch_total{job="kube-state-metrics",result="error"}[5m])) by (cluster)
              /
            sum(rate(kube_state_metrics_watch_total{job="kube-state-metrics"}[5m])) by (cluster))
            > 0.01
          for: 15m
          labels:
            severity: critical
        - alert: KubeStateMetricsShardingMismatch
          annotations:
            description: kube-state-metrics pods are running with different --total-shards
              configuration, some Kubernetes objects may be exposed multiple times or not
              exposed at all.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kube-state-metrics/kubestatemetricsshardingmismatch
            summary: kube-state-metrics sharding is misconfigured.
          expr: |
            stdvar (kube_state_metrics_total_shards{job="kube-state-metrics"}) by (cluster) != 0
          for: 15m
          labels:
            severity: critical
        - alert: KubeStateMetricsShardsMissing
          annotations:
            description: kube-state-metrics shards are missing, some Kubernetes objects
              are not being exposed.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kube-state-metrics/kubestatemetricsshardsmissing
            summary: kube-state-metrics shards are missing.
          expr: |
            2^max(kube_state_metrics_total_shards{job="kube-state-metrics"}) by (cluster) - 1
              -
            sum( 2 ^ max by (cluster, shard_ordinal) (kube_state_metrics_shard_ordinal{job="kube-state-metrics"}) ) by (cluster)
            != 0
          for: 15m
          labels:
            severity: critical
    monitoring-kubernetes-monitoring-rules-2b76048d-70b2-41f3-916e-9043c723064c.yaml: |
      groups:
      - name: kubernetes-apps
        rules:
        - alert: KubePodCrashLooping
          annotations:
            description: 'Pod {{ $labels.namespace }}/{{ $labels.pod }} ({{ $labels.container
              }}) is in waiting state (reason: "CrashLoopBackOff") on cluster {{ $labels.cluster
              }}.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepodcrashlooping
            summary: Pod is crash looping.
          expr: |
            max_over_time(kube_pod_container_status_waiting_reason{reason="CrashLoopBackOff", job="kube-state-metrics"}[5m]) >= 1
          for: 15m
          labels:
            severity: warning
        - alert: KubePodNotReady
          annotations:
            description: Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-ready
              state for longer than 15 minutes on cluster {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepodnotready
            summary: Pod has been in a non-ready state for more than 15 minutes.
          expr: |
            sum by (namespace, pod, cluster) (
              max by(namespace, pod, cluster) (
                kube_pod_status_phase{job="kube-state-metrics", phase=~"Pending|Unknown|Failed"}
              ) * on(namespace, pod, cluster) group_left(owner_kind) topk by(namespace, pod, cluster) (
                1, max by(namespace, pod, owner_kind, cluster) (kube_pod_owner{owner_kind!="Job"})
              )
            ) > 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeDeploymentGenerationMismatch
          annotations:
            description: Deployment generation for {{ $labels.namespace }}/{{ $labels.deployment
              }} does not match, this indicates that the Deployment has failed but has not
              been rolled back on cluster {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubedeploymentgenerationmismatch
            summary: Deployment generation mismatch due to possible roll-back
          expr: |
            kube_deployment_status_observed_generation{job="kube-state-metrics"}
              !=
            kube_deployment_metadata_generation{job="kube-state-metrics"}
          for: 15m
          labels:
            severity: warning
        - alert: KubeDeploymentReplicasMismatch
          annotations:
            description: Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has
              not matched the expected number of replicas for longer than 15 minutes on
              cluster {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubedeploymentreplicasmismatch
            summary: Deployment has not matched the expected number of replicas.
          expr: |
            (
              kube_deployment_spec_replicas{job="kube-state-metrics"}
                >
              kube_deployment_status_replicas_available{job="kube-state-metrics"}
            ) and (
              changes(kube_deployment_status_replicas_updated{job="kube-state-metrics"}[10m])
                ==
              0
            )
          for: 15m
          labels:
            severity: warning
        - alert: KubeDeploymentRolloutStuck
          annotations:
            description: Rollout of deployment {{ $labels.namespace }}/{{ $labels.deployment
              }} is not progressing for longer than 15 minutes on cluster {{ $labels.cluster
              }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubedeploymentrolloutstuck
            summary: Deployment rollout is not progressing.
          expr: |
            kube_deployment_status_condition{condition="Progressing", status="false",job="kube-state-metrics"}
            != 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeStatefulSetReplicasMismatch
          annotations:
            description: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} has
              not matched the expected number of replicas for longer than 15 minutes on
              cluster {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubestatefulsetreplicasmismatch
            summary: StatefulSet has not matched the expected number of replicas.
          expr: |
            (
              kube_statefulset_status_replicas_ready{job="kube-state-metrics"}
                !=
              kube_statefulset_replicas{job="kube-state-metrics"}
            ) and (
              changes(kube_statefulset_status_replicas_updated{job="kube-state-metrics"}[10m])
                ==
              0
            )
          for: 15m
          labels:
            severity: warning
        - alert: KubeStatefulSetGenerationMismatch
          annotations:
            description: StatefulSet generation for {{ $labels.namespace }}/{{ $labels.statefulset
              }} does not match, this indicates that the StatefulSet has failed but has
              not been rolled back on cluster {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubestatefulsetgenerationmismatch
            summary: StatefulSet generation mismatch due to possible roll-back
          expr: |
            kube_statefulset_status_observed_generation{job="kube-state-metrics"}
              !=
            kube_statefulset_metadata_generation{job="kube-state-metrics"}
          for: 15m
          labels:
            severity: warning
        - alert: KubeStatefulSetUpdateNotRolledOut
          annotations:
            description: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} update
              has not been rolled out on cluster {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubestatefulsetupdatenotrolledout
            summary: StatefulSet update has not been rolled out.
          expr: |
            (
              max by(namespace, statefulset, job, cluster) (
                kube_statefulset_status_current_revision{job="kube-state-metrics"}
                  unless
                kube_statefulset_status_update_revision{job="kube-state-metrics"}
              )
                * on(namespace, statefulset, job, cluster)
              (
                kube_statefulset_replicas{job="kube-state-metrics"}
                  !=
                kube_statefulset_status_replicas_updated{job="kube-state-metrics"}
              )
            )  and on(namespace, statefulset, job, cluster) (
              changes(kube_statefulset_status_replicas_updated{job="kube-state-metrics"}[5m])
                ==
              0
            )
          for: 15m
          labels:
            severity: warning
        - alert: KubeDaemonSetRolloutStuck
          annotations:
            description: DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} has not
              finished or progressed for at least 15m on cluster {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubedaemonsetrolloutstuck
            summary: DaemonSet rollout is stuck.
          expr: |
            (
              (
                kube_daemonset_status_current_number_scheduled{job="kube-state-metrics"}
                  !=
                kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics"}
              ) or (
                kube_daemonset_status_number_misscheduled{job="kube-state-metrics"}
                  !=
                0
              ) or (
                kube_daemonset_status_updated_number_scheduled{job="kube-state-metrics"}
                  !=
                kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics"}
              ) or (
                kube_daemonset_status_number_available{job="kube-state-metrics"}
                  !=
                kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics"}
              )
            ) and (
              changes(kube_daemonset_status_updated_number_scheduled{job="kube-state-metrics"}[5m])
                ==
              0
            )
          for: 15m
          labels:
            severity: warning
        - alert: KubeContainerWaiting
          annotations:
            description: 'pod/{{ $labels.pod }} in namespace {{ $labels.namespace }} on
              container {{ $labels.container}} has been in waiting state for longer than
              1 hour. (reason: "{{ $labels.reason }}") on cluster {{ $labels.cluster }}.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubecontainerwaiting
            summary: Pod container waiting longer than 1 hour
          expr: |
            kube_pod_container_status_waiting_reason{reason!="CrashLoopBackOff", job="kube-state-metrics"} > 0
          for: 1h
          labels:
            severity: warning
        - alert: KubeDaemonSetNotScheduled
          annotations:
            description: '{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset
              }} are not scheduled on cluster {{ $labels.cluster }}.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubedaemonsetnotscheduled
            summary: DaemonSet pods are not scheduled.
          expr: |
            kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics"}
              -
            kube_daemonset_status_current_number_scheduled{job="kube-state-metrics"} > 0
          for: 10m
          labels:
            severity: warning
        - alert: KubeDaemonSetMisScheduled
          annotations:
            description: '{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset
              }} are running where they are not supposed to run on cluster {{ $labels.cluster
              }}.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubedaemonsetmisscheduled
            summary: DaemonSet pods are misscheduled.
          expr: |
            kube_daemonset_status_number_misscheduled{job="kube-state-metrics"} > 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeJobNotCompleted
          annotations:
            description: Job {{ $labels.namespace }}/{{ $labels.job_name }} is taking more
              than {{ "43200" | humanizeDuration }} to complete on cluster {{ $labels.cluster
              }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubejobnotcompleted
            summary: Job did not complete in time
          expr: |
            time() - max by(namespace, job_name, cluster) (kube_job_status_start_time{job="kube-state-metrics"}
              and
            kube_job_status_active{job="kube-state-metrics"} > 0) > 43200
          labels:
            severity: warning
        - alert: KubeJobFailed
          annotations:
            description: Job {{ $labels.namespace }}/{{ $labels.job_name }} failed to complete.
              Removing failed job after investigation should clear this alert on cluster
              {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubejobfailed
            summary: Job failed to complete.
          expr: |
            kube_job_failed{job="kube-state-metrics"}  > 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeHpaReplicasMismatch
          annotations:
            description: HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler  }}
              has not matched the desired number of replicas for longer than 15 minutes
              on cluster {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubehpareplicasmismatch
            summary: HPA has not matched desired number of replicas.
          expr: |
            (kube_horizontalpodautoscaler_status_desired_replicas{job="kube-state-metrics"}
              !=
            kube_horizontalpodautoscaler_status_current_replicas{job="kube-state-metrics"})
              and
            (kube_horizontalpodautoscaler_status_current_replicas{job="kube-state-metrics"}
              >
            kube_horizontalpodautoscaler_spec_min_replicas{job="kube-state-metrics"})
              and
            (kube_horizontalpodautoscaler_status_current_replicas{job="kube-state-metrics"}
              <
            kube_horizontalpodautoscaler_spec_max_replicas{job="kube-state-metrics"})
              and
            changes(kube_horizontalpodautoscaler_status_current_replicas{job="kube-state-metrics"}[15m]) == 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeHpaMaxedOut
          annotations:
            description: HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler  }}
              has been running at max replicas for longer than 15 minutes on cluster {{
              $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubehpamaxedout
            summary: HPA is running at max replicas
          expr: |
            kube_horizontalpodautoscaler_status_current_replicas{job="kube-state-metrics"}
              ==
            kube_horizontalpodautoscaler_spec_max_replicas{job="kube-state-metrics"}
          for: 15m
          labels:
            severity: warning
        - alert: KubePdbNotEnoughHealthyPods
          annotations:
            description: PDB {{ $labels.cluster }}/{{ $labels.namespace }}/{{ $labels.poddisruptionbudget
              }} expects {{ $value }} more healthy pods. The desired number of healthy pods
              has not been met for at least 15m.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepdbnotenoughhealthypods
            summary: PDB does not have enough healthy pods.
          expr: |
            (
              kube_poddisruptionbudget_status_desired_healthy{job="kube-state-metrics"}
              -
              kube_poddisruptionbudget_status_current_healthy{job="kube-state-metrics"}
            )
            > 0
          for: 15m
          labels:
            severity: warning
      - name: kubernetes-resources
        rules:
        - alert: KubeCPUOvercommit
          annotations:
            description: Cluster {{ $labels.cluster }} has overcommitted CPU resource requests
              for Pods by {{ printf "%.2f" $value }} CPU shares and cannot tolerate node
              failure.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubecpuovercommit
            summary: Cluster has overcommitted CPU resource requests.
          expr: |
            # Non-HA clusters.
            (
              (
                sum by(cluster) (namespace_cpu:kube_pod_container_resource_requests:sum{})
                -
                sum by(cluster) (kube_node_status_allocatable{job="kube-state-metrics",resource="cpu"}) > 0
              )
              and
              count by (cluster) (max by (cluster, node) (kube_node_role{job="kube-state-metrics", role="control-plane"})) < 3
            )
            or
            # HA clusters.
            (
              sum by(cluster) (namespace_cpu:kube_pod_container_resource_requests:sum{})
              -
              (
                # Skip clusters with only one allocatable node.
                (
                  sum by (cluster) (kube_node_status_allocatable{job="kube-state-metrics",resource="cpu"})
                  -
                  max by (cluster) (kube_node_status_allocatable{job="kube-state-metrics",resource="cpu"})
                ) > 0
              ) > 0
            )
          for: 10m
          labels:
            severity: warning
        - alert: KubeMemoryOvercommit
          annotations:
            description: Cluster {{ $labels.cluster }} has overcommitted memory resource
              requests for Pods by {{ $value | humanize }} bytes and cannot tolerate node
              failure.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubememoryovercommit
            summary: Cluster has overcommitted memory resource requests.
          expr: |
            # Non-HA clusters.
            (
              (
                sum by(cluster) (namespace_memory:kube_pod_container_resource_requests:sum{})
                -
                sum by(cluster) (kube_node_status_allocatable{job="kube-state-metrics",resource="memory"}) > 0
              )
              and
              count by (cluster) (max by (cluster, node) (kube_node_role{job="kube-state-metrics", role="control-plane"})) < 3
            )
            or
            # HA clusters.
            (
              sum by(cluster) (namespace_memory:kube_pod_container_resource_requests:sum{})
              -
              (
                # Skip clusters with only one allocatable node.
                (
                  sum by (cluster) (kube_node_status_allocatable{job="kube-state-metrics",resource="memory"})
                  -
                  max by (cluster) (kube_node_status_allocatable{job="kube-state-metrics",resource="memory"})
                ) > 0
              ) > 0
            )
          for: 10m
          labels:
            severity: warning
        - alert: KubeCPUQuotaOvercommit
          annotations:
            description: Cluster {{ $labels.cluster }} has overcommitted CPU resource requests
              for Namespaces.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubecpuquotaovercommit
            summary: Cluster has overcommitted CPU resource requests.
          expr: |
            sum by(cluster) (
              min without(resource) (kube_resourcequota{job="kube-state-metrics", type="hard", resource=~"(cpu|requests.cpu)"})
            )
            /
            sum by(cluster) (
              kube_node_status_allocatable{resource="cpu", job="kube-state-metrics"}
            ) > 1.5
          for: 5m
          labels:
            severity: warning
        - alert: KubeMemoryQuotaOvercommit
          annotations:
            description: Cluster {{ $labels.cluster }} has overcommitted memory resource
              requests for Namespaces.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubememoryquotaovercommit
            summary: Cluster has overcommitted memory resource requests.
          expr: |
            sum by(cluster) (
              min without(resource) (kube_resourcequota{job="kube-state-metrics", type="hard", resource=~"(memory|requests.memory)"})
            )
            /
            sum by(cluster) (
              kube_node_status_allocatable{resource="memory", job="kube-state-metrics"}
            ) > 1.5
          for: 5m
          labels:
            severity: warning
        - alert: KubeQuotaAlmostFull
          annotations:
            description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage
              }} of its {{ $labels.resource }} quota on cluster {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubequotaalmostfull
            summary: Namespace quota is going to be full.
          expr: |
            kube_resourcequota{job="kube-state-metrics", type="used"}
              / ignoring(instance, job, type)
            (kube_resourcequota{job="kube-state-metrics", type="hard"} > 0)
              > 0.9 < 1
          for: 15m
          labels:
            severity: info
        - alert: KubeQuotaFullyUsed
          annotations:
            description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage
              }} of its {{ $labels.resource }} quota on cluster {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubequotafullyused
            summary: Namespace quota is fully used.
          expr: |
            kube_resourcequota{job="kube-state-metrics", type="used"}
              / ignoring(instance, job, type)
            (kube_resourcequota{job="kube-state-metrics", type="hard"} > 0)
              == 1
          for: 15m
          labels:
            severity: info
        - alert: KubeQuotaExceeded
          annotations:
            description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage
              }} of its {{ $labels.resource }} quota on cluster {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubequotaexceeded
            summary: Namespace quota has exceeded the limits.
          expr: |
            kube_resourcequota{job="kube-state-metrics", type="used"}
              / ignoring(instance, job, type)
            (kube_resourcequota{job="kube-state-metrics", type="hard"} > 0)
              > 1
          for: 15m
          labels:
            severity: warning
        - alert: CPUThrottlingHigh
          annotations:
            description: '{{ $value | humanizePercentage }} throttling of CPU in namespace
              {{ $labels.namespace }} for container {{ $labels.container }} in pod {{ $labels.pod
              }} on cluster {{ $labels.cluster }}.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/cputhrottlinghigh
            summary: Processes experience elevated CPU throttling.
          expr: |
            sum(increase(container_cpu_cfs_throttled_periods_total{container!="", job="kubelet", metrics_path="/metrics/cadvisor", }[5m])) without (id, metrics_path, name, image, endpoint, job, node)
              / on (cluster, namespace, pod, container, instance) group_left
            sum(increase(container_cpu_cfs_periods_total{job="kubelet", metrics_path="/metrics/cadvisor", }[5m])) without (id, metrics_path, name, image, endpoint, job, node)
              > ( 25 / 100 )
          for: 15m
          labels:
            severity: info
      - name: kubernetes-storage
        rules:
        - alert: KubePersistentVolumeFillingUp
          annotations:
            description: The PersistentVolume claimed by {{ $labels.persistentvolumeclaim
              }} in Namespace {{ $labels.namespace }} {{ with $labels.cluster -}} on Cluster
              {{ . }} {{- end }} is only {{ $value | humanizePercentage }} free.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepersistentvolumefillingup
            summary: PersistentVolume is filling up.
          expr: |
            (
              kubelet_volume_stats_available_bytes{job="kubelet", metrics_path="/metrics"}
                /
              kubelet_volume_stats_capacity_bytes{job="kubelet", metrics_path="/metrics"}
            ) < 0.03
            and
            kubelet_volume_stats_used_bytes{job="kubelet", metrics_path="/metrics"} > 0
            unless on(cluster, namespace, persistentvolumeclaim)
            kube_persistentvolumeclaim_access_mode{ access_mode="ReadOnlyMany"} == 1
            unless on(cluster, namespace, persistentvolumeclaim)
            kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"} == 1
          for: 1m
          labels:
            severity: critical
        - alert: KubePersistentVolumeFillingUp
          annotations:
            description: Based on recent sampling, the PersistentVolume claimed by {{ $labels.persistentvolumeclaim
              }} in Namespace {{ $labels.namespace }} {{ with $labels.cluster -}} on Cluster
              {{ . }} {{- end }} is expected to fill up within four days. Currently {{ $value
              | humanizePercentage }} is available.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepersistentvolumefillingup
            summary: PersistentVolume is filling up.
          expr: |
            (
              kubelet_volume_stats_available_bytes{job="kubelet", metrics_path="/metrics"}
                /
              kubelet_volume_stats_capacity_bytes{job="kubelet", metrics_path="/metrics"}
            ) < 0.15
            and
            kubelet_volume_stats_used_bytes{job="kubelet", metrics_path="/metrics"} > 0
            and
            predict_linear(kubelet_volume_stats_available_bytes{job="kubelet", metrics_path="/metrics"}[6h], 4 * 24 * 3600) < 0
            unless on(cluster, namespace, persistentvolumeclaim)
            kube_persistentvolumeclaim_access_mode{ access_mode="ReadOnlyMany"} == 1
            unless on(cluster, namespace, persistentvolumeclaim)
            kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"} == 1
          for: 1h
          labels:
            severity: warning
        - alert: KubePersistentVolumeInodesFillingUp
          annotations:
            description: The PersistentVolume claimed by {{ $labels.persistentvolumeclaim
              }} in Namespace {{ $labels.namespace }} {{ with $labels.cluster -}} on Cluster
              {{ . }} {{- end }} only has {{ $value | humanizePercentage }} free inodes.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepersistentvolumeinodesfillingup
            summary: PersistentVolumeInodes are filling up.
          expr: |
            (
              kubelet_volume_stats_inodes_free{job="kubelet", metrics_path="/metrics"}
                /
              kubelet_volume_stats_inodes{job="kubelet", metrics_path="/metrics"}
            ) < 0.03
            and
            kubelet_volume_stats_inodes_used{job="kubelet", metrics_path="/metrics"} > 0
            unless on(cluster, namespace, persistentvolumeclaim)
            kube_persistentvolumeclaim_access_mode{ access_mode="ReadOnlyMany"} == 1
            unless on(cluster, namespace, persistentvolumeclaim)
            kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"} == 1
          for: 1m
          labels:
            severity: critical
        - alert: KubePersistentVolumeInodesFillingUp
          annotations:
            description: Based on recent sampling, the PersistentVolume claimed by {{ $labels.persistentvolumeclaim
              }} in Namespace {{ $labels.namespace }} {{ with $labels.cluster -}} on Cluster
              {{ . }} {{- end }} is expected to run out of inodes within four days. Currently
              {{ $value | humanizePercentage }} of its inodes are free.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepersistentvolumeinodesfillingup
            summary: PersistentVolumeInodes are filling up.
          expr: |
            (
              kubelet_volume_stats_inodes_free{job="kubelet", metrics_path="/metrics"}
                /
              kubelet_volume_stats_inodes{job="kubelet", metrics_path="/metrics"}
            ) < 0.15
            and
            kubelet_volume_stats_inodes_used{job="kubelet", metrics_path="/metrics"} > 0
            and
            predict_linear(kubelet_volume_stats_inodes_free{job="kubelet", metrics_path="/metrics"}[6h], 4 * 24 * 3600) < 0
            unless on(cluster, namespace, persistentvolumeclaim)
            kube_persistentvolumeclaim_access_mode{ access_mode="ReadOnlyMany"} == 1
            unless on(cluster, namespace, persistentvolumeclaim)
            kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"} == 1
          for: 1h
          labels:
            severity: warning
        - alert: KubePersistentVolumeErrors
          annotations:
            description: The persistent volume {{ $labels.persistentvolume }} {{ with $labels.cluster
              -}} on Cluster {{ . }} {{- end }} has status {{ $labels.phase }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepersistentvolumeerrors
            summary: PersistentVolume is having issues with provisioning.
          expr: |
            kube_persistentvolume_status_phase{phase=~"Failed|Pending",job="kube-state-metrics"} > 0
          for: 5m
          labels:
            severity: critical
      - name: kubernetes-system
        rules:
        - alert: KubeVersionMismatch
          annotations:
            description: There are {{ $value }} different semantic versions of Kubernetes
              components running on cluster {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeversionmismatch
            summary: Different semantic versions of Kubernetes components running.
          expr: |
            count by (cluster) (count by (git_version, cluster) (label_replace(kubernetes_build_info{job!~"kube-dns|coredns"},"git_version","$1","git_version","(v[0-9]*.[0-9]*).*"))) > 1
          for: 15m
          labels:
            severity: warning
        - alert: KubeClientErrors
          annotations:
            description: Kubernetes API server client '{{ $labels.job }}/{{ $labels.instance
              }}' is experiencing {{ $value | humanizePercentage }} errors on cluster {{
              $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeclienterrors
            summary: Kubernetes API server client is experiencing errors.
          expr: |
            (sum(rate(rest_client_requests_total{job="apiserver",code=~"5.."}[5m])) by (cluster, instance, job, namespace)
              /
            sum(rate(rest_client_requests_total{job="apiserver"}[5m])) by (cluster, instance, job, namespace))
            > 0.01
          for: 15m
          labels:
            severity: warning
      - name: kube-apiserver-slos
        rules:
        - alert: KubeAPIErrorBudgetBurn
          annotations:
            description: The API server is burning too much error budget on cluster {{ $labels.cluster
              }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeapierrorbudgetburn
            summary: The API server is burning too much error budget.
          expr: |
            sum by(cluster) (apiserver_request:burnrate1h) > (14.40 * 0.01000)
            and on(cluster)
            sum by(cluster) (apiserver_request:burnrate5m) > (14.40 * 0.01000)
          for: 2m
          labels:
            long: 1h
            severity: critical
            short: 5m
        - alert: KubeAPIErrorBudgetBurn
          annotations:
            description: The API server is burning too much error budget on cluster {{ $labels.cluster
              }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeapierrorbudgetburn
            summary: The API server is burning too much error budget.
          expr: |
            sum by(cluster) (apiserver_request:burnrate6h) > (6.00 * 0.01000)
            and on(cluster)
            sum by(cluster) (apiserver_request:burnrate30m) > (6.00 * 0.01000)
          for: 15m
          labels:
            long: 6h
            severity: critical
            short: 30m
        - alert: KubeAPIErrorBudgetBurn
          annotations:
            description: The API server is burning too much error budget on cluster {{ $labels.cluster
              }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeapierrorbudgetburn
            summary: The API server is burning too much error budget.
          expr: |
            sum by(cluster) (apiserver_request:burnrate1d) > (3.00 * 0.01000)
            and on(cluster)
            sum by(cluster) (apiserver_request:burnrate2h) > (3.00 * 0.01000)
          for: 1h
          labels:
            long: 1d
            severity: warning
            short: 2h
        - alert: KubeAPIErrorBudgetBurn
          annotations:
            description: The API server is burning too much error budget on cluster {{ $labels.cluster
              }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeapierrorbudgetburn
            summary: The API server is burning too much error budget.
          expr: |
            sum by(cluster) (apiserver_request:burnrate3d) > (1.00 * 0.01000)
            and on(cluster)
            sum by(cluster) (apiserver_request:burnrate6h) > (1.00 * 0.01000)
          for: 3h
          labels:
            long: 3d
            severity: warning
            short: 6h
      - name: kubernetes-system-apiserver
        rules:
        - alert: KubeClientCertificateExpiration
          annotations:
            description: A client certificate used to authenticate to kubernetes apiserver
              is expiring in less than 7.0 days on cluster {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeclientcertificateexpiration
            summary: Client certificate is about to expire.
          expr: |
            histogram_quantile(0.01, sum without (namespace, service, endpoint) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m]))) < 604800
            and
            on(job, cluster, instance) apiserver_client_certificate_expiration_seconds_count{job="apiserver"} > 0
          for: 5m
          labels:
            severity: warning
        - alert: KubeClientCertificateExpiration
          annotations:
            description: A client certificate used to authenticate to kubernetes apiserver
              is expiring in less than 24.0 hours on cluster {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeclientcertificateexpiration
            summary: Client certificate is about to expire.
          expr: |
            histogram_quantile(0.01, sum without (namespace, service, endpoint) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m]))) < 86400
            and
            on(job, cluster, instance) apiserver_client_certificate_expiration_seconds_count{job="apiserver"} > 0
          for: 5m
          labels:
            severity: critical
        - alert: KubeAggregatedAPIErrors
          annotations:
            description: Kubernetes aggregated API {{ $labels.instance }}/{{ $labels.name
              }} has reported {{ $labels.reason }} errors on cluster {{ $labels.cluster
              }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeaggregatedapierrors
            summary: Kubernetes aggregated API has reported errors.
          expr: |
            sum by(cluster, instance, name, reason)(increase(aggregator_unavailable_apiservice_total{job="apiserver"}[1m])) > 0
          for: 10m
          labels:
            severity: warning
        - alert: KubeAggregatedAPIDown
          annotations:
            description: Kubernetes aggregated API {{ $labels.name }}/{{ $labels.namespace
              }} has been only {{ $value | humanize }}% available over the last 10m on cluster
              {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeaggregatedapidown
            summary: Kubernetes aggregated API is down.
          expr: |
            (1 - max by(name, namespace, cluster)(avg_over_time(aggregator_unavailable_apiservice{job="apiserver"}[10m]))) * 100 < 85
          for: 5m
          labels:
            severity: warning
        - alert: KubeAPIDown
          annotations:
            description: KubeAPI has disappeared from Prometheus target discovery.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeapidown
            summary: Target disappeared from Prometheus target discovery.
          expr: |
            absent(up{job="apiserver"} == 1)
          for: 15m
          labels:
            severity: critical
        - alert: KubeAPITerminatedRequests
          annotations:
            description: The kubernetes apiserver has terminated {{ $value | humanizePercentage
              }} of its incoming requests on cluster {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeapiterminatedrequests
            summary: The kubernetes apiserver has terminated {{ $value | humanizePercentage
              }} of its incoming requests.
          expr: |
            sum by(cluster) (rate(apiserver_request_terminations_total{job="apiserver"}[10m])) / ( sum by(cluster) (rate(apiserver_request_total{job="apiserver"}[10m])) + sum by(cluster) (rate(apiserver_request_terminations_total{job="apiserver"}[10m])) ) > 0.20
          for: 5m
          labels:
            severity: warning
      - name: kubernetes-system-kubelet
        rules:
        - alert: KubeNodeNotReady
          annotations:
            description: '{{ $labels.node }} has been unready for more than 15 minutes on
              cluster {{ $labels.cluster }}.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubenodenotready
            summary: Node is not ready.
          expr: |
            kube_node_status_condition{job="kube-state-metrics",condition="Ready",status="true"} == 0
            and on (cluster, node)
            kube_node_spec_unschedulable{job="kube-state-metrics"} == 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeNodePressure
          annotations:
            description: '{{ $labels.node }} on cluster {{ $labels.cluster }} has active
              Condition {{ $labels.condition }}. This is caused by resource usage exceeding
              eviction thresholds.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubenodepressure
            summary: Node has as active Condition.
          expr: |
            kube_node_status_condition{job="kube-state-metrics",condition=~"(MemoryPressure|DiskPressure|PIDPressure)",status="true"} == 1
            and on (cluster, node)
            kube_node_spec_unschedulable{job="kube-state-metrics"} == 0
          for: 10m
          labels:
            severity: info
        - alert: KubeNodeUnreachable
          annotations:
            description: '{{ $labels.node }} is unreachable and some workloads may be rescheduled
              on cluster {{ $labels.cluster }}.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubenodeunreachable
            summary: Node is unreachable.
          expr: |
            (kube_node_spec_taint{job="kube-state-metrics",key="node.kubernetes.io/unreachable",effect="NoSchedule"} unless ignoring(key,value) kube_node_spec_taint{job="kube-state-metrics",key=~"ToBeDeletedByClusterAutoscaler|cloud.google.com/impending-node-termination|aws-node-termination-handler/spot-itn"}) == 1
          for: 15m
          labels:
            severity: warning
        - alert: KubeletTooManyPods
          annotations:
            description: Kubelet '{{ $labels.node }}' is running at {{ $value | humanizePercentage
              }} of its Pod capacity on cluster {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubelettoomanypods
            summary: Kubelet is running at capacity.
          expr: |
            (
              max by (cluster, instance) (
                kubelet_running_pods{job="kubelet", metrics_path="/metrics"} > 1
              )
              * on (cluster, instance) group_left(node)
              max by (cluster, instance, node) (
                kubelet_node_name{job="kubelet", metrics_path="/metrics"}
              )
            )
            / on (cluster, node) group_left()
            max by (cluster, node) (
              kube_node_status_capacity{job="kube-state-metrics", resource="pods"} != 1
            ) > 0.95
          for: 15m
          labels:
            severity: info
        - alert: KubeNodeReadinessFlapping
          annotations:
            description: The readiness status of node {{ $labels.node }} has changed {{
              $value }} times in the last 15 minutes on cluster {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubenodereadinessflapping
            summary: Node readiness status is flapping.
          expr: |
            sum(changes(kube_node_status_condition{job="kube-state-metrics",status="true",condition="Ready"}[15m])) by (cluster, node) > 2
            and on (cluster, node)
            kube_node_spec_unschedulable{job="kube-state-metrics"} == 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeNodeEviction
          annotations:
            description: Node {{ $labels.node }} on {{ $labels.cluster }} is evicting Pods
              due to {{ $labels.eviction_signal }}.  Eviction occurs when eviction thresholds
              are crossed, typically caused by Pods exceeding RAM/ephemeral-storage limits.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubenodeeviction
            summary: Node is evicting pods.
          expr: |
            sum(rate(kubelet_evictions{job="kubelet", metrics_path="/metrics"}[15m])) by(cluster, eviction_signal, instance)
            * on (cluster, instance) group_left(node)
            max by (cluster, instance, node) (
              kubelet_node_name{job="kubelet", metrics_path="/metrics"}
            )
            > 0
          for: 0s
          labels:
            severity: info
        - alert: KubeletPlegDurationHigh
          annotations:
            description: The Kubelet Pod Lifecycle Event Generator has a 99th percentile
              duration of {{ $value }} seconds on node {{ $labels.node }} on cluster {{
              $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletplegdurationhigh
            summary: Kubelet Pod Lifecycle Event Generator is taking too long to relist.
          expr: |
            node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile{quantile="0.99"} >= 10
          for: 5m
          labels:
            severity: warning
        - alert: KubeletPodStartUpLatencyHigh
          annotations:
            description: Kubelet Pod startup 99th percentile latency is {{ $value }} seconds
              on node {{ $labels.node }} on cluster {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletpodstartuplatencyhigh
            summary: Kubelet Pod startup latency is too high.
          expr: |
            histogram_quantile(0.99,
              sum by (cluster, instance, le) (
                topk by (cluster, instance, le, operation_type) (1,
                  rate(kubelet_pod_worker_duration_seconds_bucket{job="kubelet", metrics_path="/metrics"}[5m])
                )
              )
            )
            * on(cluster, instance) group_left(node)
            topk by (cluster, instance, node) (1,
              kubelet_node_name{job="kubelet", metrics_path="/metrics"}
            )
            > 60
          for: 15m
          labels:
            severity: warning
        - alert: KubeletClientCertificateExpiration
          annotations:
            description: Client certificate for Kubelet on node {{ $labels.node }} expires
              in {{ $value | humanizeDuration }} on cluster {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletclientcertificateexpiration
            summary: Kubelet client certificate is about to expire.
          expr: |
            kubelet_certificate_manager_client_ttl_seconds < 604800
          labels:
            severity: warning
        - alert: KubeletClientCertificateExpiration
          annotations:
            description: Client certificate for Kubelet on node {{ $labels.node }} expires
              in {{ $value | humanizeDuration }} on cluster {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletclientcertificateexpiration
            summary: Kubelet client certificate is about to expire.
          expr: |
            kubelet_certificate_manager_client_ttl_seconds < 86400
          labels:
            severity: critical
        - alert: KubeletServerCertificateExpiration
          annotations:
            description: Server certificate for Kubelet on node {{ $labels.node }} expires
              in {{ $value | humanizeDuration }} on cluster {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletservercertificateexpiration
            summary: Kubelet server certificate is about to expire.
          expr: |
            kubelet_certificate_manager_server_ttl_seconds < 604800
          labels:
            severity: warning
        - alert: KubeletServerCertificateExpiration
          annotations:
            description: Server certificate for Kubelet on node {{ $labels.node }} expires
              in {{ $value | humanizeDuration }} on cluster {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletservercertificateexpiration
            summary: Kubelet server certificate is about to expire.
          expr: |
            kubelet_certificate_manager_server_ttl_seconds < 86400
          labels:
            severity: critical
        - alert: KubeletClientCertificateRenewalErrors
          annotations:
            description: Kubelet on node {{ $labels.node }} has failed to renew its client
              certificate ({{ $value | humanize }} errors in the last 5 minutes) on cluster
              {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletclientcertificaterenewalerrors
            summary: Kubelet has failed to renew its client certificate.
          expr: |
            increase(kubelet_certificate_manager_client_expiration_renew_errors[5m]) > 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeletServerCertificateRenewalErrors
          annotations:
            description: Kubelet on node {{ $labels.node }} has failed to renew its server
              certificate ({{ $value | humanize }} errors in the last 5 minutes) on cluster
              {{ $labels.cluster }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletservercertificaterenewalerrors
            summary: Kubelet has failed to renew its server certificate.
          expr: |
            increase(kubelet_server_expiration_renew_errors[5m]) > 0
          for: 15m
          labels:
            severity: warning
        - alert: KubeletDown
          annotations:
            description: Kubelet has disappeared from Prometheus target discovery.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletdown
            summary: Target disappeared from Prometheus target discovery.
          expr: |
            absent(up{job="kubelet", metrics_path="/metrics"} == 1)
          for: 15m
          labels:
            severity: critical
      - name: kubernetes-system-scheduler
        rules:
        - alert: KubeSchedulerDown
          annotations:
            description: KubeScheduler has disappeared from Prometheus target discovery.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeschedulerdown
            summary: Target disappeared from Prometheus target discovery.
          expr: |
            absent(up{job="kube-scheduler"} == 1)
          for: 15m
          labels:
            severity: critical
      - name: kubernetes-system-controller-manager
        rules:
        - alert: KubeControllerManagerDown
          annotations:
            description: KubeControllerManager has disappeared from Prometheus target discovery.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubecontrollermanagerdown
            summary: Target disappeared from Prometheus target discovery.
          expr: |
            absent(up{job="kube-controller-manager"} == 1)
          for: 15m
          labels:
            severity: critical
      - interval: 3m
        name: kube-apiserver-availability.rules
        rules:
        - expr: |
            avg_over_time(code_verb:apiserver_request_total:increase1h[30d]) * 24 * 30
          record: code_verb:apiserver_request_total:increase30d
        - expr: |
            sum by (cluster, code) (code_verb:apiserver_request_total:increase30d{verb=~"LIST|GET"})
          labels:
            verb: read
          record: code:apiserver_request_total:increase30d
        - expr: |
            sum by (cluster, code) (code_verb:apiserver_request_total:increase30d{verb=~"POST|PUT|PATCH|DELETE"})
          labels:
            verb: write
          record: code:apiserver_request_total:increase30d
        - expr: |
            sum by (cluster, verb, scope, le) (increase(apiserver_request_sli_duration_seconds_bucket[1h]))
          record: cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase1h
        - expr: |
            sum by (cluster, verb, scope, le) (avg_over_time(cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase1h[30d]) * 24 * 30)
          record: cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d
        - expr: |
            sum by (cluster, verb, scope) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase1h{le="+Inf"})
          record: cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase1h
        - expr: |
            sum by (cluster, verb, scope) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{le="+Inf"})
          record: cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d
        - expr: |
            1 - (
              (
                # write too slow
                sum by (cluster) (cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d{verb=~"POST|PUT|PATCH|DELETE"})
                -
                sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"POST|PUT|PATCH|DELETE",le=~"1(\\.0)?"} or vector(0))
              ) +
              (
                # read too slow
                sum by (cluster) (cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d{verb=~"LIST|GET"})
                -
                (
                  sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope=~"resource|",le=~"1(\\.0)?"} or vector(0))
                  +
                  sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="namespace",le=~"5(\\.0)?"} or vector(0))
                  +
                  sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="cluster",le=~"30(\\.0)?"} or vector(0))
                )
              ) +
              # errors
              sum by (cluster) (code:apiserver_request_total:increase30d{code=~"5.."} or vector(0))
            )
            /
            sum by (cluster) (code:apiserver_request_total:increase30d)
          labels:
            verb: all
          record: apiserver_request:availability30d
        - expr: |
            1 - (
              sum by (cluster) (cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d{verb=~"LIST|GET"})
              -
              (
                # too slow
                sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope=~"resource|",le=~"1(\\.0)?"} or vector(0))
                +
                sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="namespace",le=~"5(\\.0)?"} or vector(0))
                +
                sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="cluster",le=~"30(\\.0)?"} or vector(0))
              )
              +
              # errors
              sum by (cluster) (code:apiserver_request_total:increase30d{verb="read",code=~"5.."} or vector(0))
            )
            /
            sum by (cluster) (code:apiserver_request_total:increase30d{verb="read"})
          labels:
            verb: read
          record: apiserver_request:availability30d
        - expr: |
            1 - (
              (
                # too slow
                sum by (cluster) (cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d{verb=~"POST|PUT|PATCH|DELETE"})
                -
                sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"POST|PUT|PATCH|DELETE",le=~"1(\\.0)?"} or vector(0))
              )
              +
              # errors
              sum by (cluster) (code:apiserver_request_total:increase30d{verb="write",code=~"5.."} or vector(0))
            )
            /
            sum by (cluster) (code:apiserver_request_total:increase30d{verb="write"})
          labels:
            verb: write
          record: apiserver_request:availability30d
        - expr: |
            sum by (cluster,code,resource) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[5m]))
          labels:
            verb: read
          record: code_resource:apiserver_request_total:rate5m
        - expr: |
            sum by (cluster,code,resource) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[5m]))
          labels:
            verb: write
          record: code_resource:apiserver_request_total:rate5m
        - expr: |
            sum by (cluster, code, verb) (increase(apiserver_request_total{job="apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"2.."}[1h]))
          record: code_verb:apiserver_request_total:increase1h
        - expr: |
            sum by (cluster, code, verb) (increase(apiserver_request_total{job="apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"3.."}[1h]))
          record: code_verb:apiserver_request_total:increase1h
        - expr: |
            sum by (cluster, code, verb) (increase(apiserver_request_total{job="apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"4.."}[1h]))
          record: code_verb:apiserver_request_total:increase1h
        - expr: |
            sum by (cluster, code, verb) (increase(apiserver_request_total{job="apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"5.."}[1h]))
          record: code_verb:apiserver_request_total:increase1h
      - name: kube-apiserver-burnrate.rules
        rules:
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[1d]))
                -
                (
                  (
                    sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le=~"1(\\.0)?"}[1d]))
                    or
                    vector(0)
                  )
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le=~"5(\\.0)?"}[1d]))
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le=~"30(\\.0)?"}[1d]))
                )
              )
              +
              # errors
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[1d]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[1d]))
          labels:
            verb: read
          record: apiserver_request:burnrate1d
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[1h]))
                -
                (
                  (
                    sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le=~"1(\\.0)?"}[1h]))
                    or
                    vector(0)
                  )
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le=~"5(\\.0)?"}[1h]))
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le=~"30(\\.0)?"}[1h]))
                )
              )
              +
              # errors
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[1h]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[1h]))
          labels:
            verb: read
          record: apiserver_request:burnrate1h
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[2h]))
                -
                (
                  (
                    sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le=~"1(\\.0)?"}[2h]))
                    or
                    vector(0)
                  )
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le=~"5(\\.0)?"}[2h]))
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le=~"30(\\.0)?"}[2h]))
                )
              )
              +
              # errors
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[2h]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[2h]))
          labels:
            verb: read
          record: apiserver_request:burnrate2h
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[30m]))
                -
                (
                  (
                    sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le=~"1(\\.0)?"}[30m]))
                    or
                    vector(0)
                  )
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le=~"5(\\.0)?"}[30m]))
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le=~"30(\\.0)?"}[30m]))
                )
              )
              +
              # errors
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[30m]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[30m]))
          labels:
            verb: read
          record: apiserver_request:burnrate30m
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[3d]))
                -
                (
                  (
                    sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le=~"1(\\.0)?"}[3d]))
                    or
                    vector(0)
                  )
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le=~"5(\\.0)?"}[3d]))
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le=~"30(\\.0)?"}[3d]))
                )
              )
              +
              # errors
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[3d]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[3d]))
          labels:
            verb: read
          record: apiserver_request:burnrate3d
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[5m]))
                -
                (
                  (
                    sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le=~"1(\\.0)?"}[5m]))
                    or
                    vector(0)
                  )
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le=~"5(\\.0)?"}[5m]))
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le=~"30(\\.0)?"}[5m]))
                )
              )
              +
              # errors
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[5m]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[5m]))
          labels:
            verb: read
          record: apiserver_request:burnrate5m
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[6h]))
                -
                (
                  (
                    sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le=~"1(\\.0)?"}[6h]))
                    or
                    vector(0)
                  )
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le=~"5(\\.0)?"}[6h]))
                  +
                  sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le=~"30(\\.0)?"}[6h]))
                )
              )
              +
              # errors
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[6h]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[6h]))
          labels:
            verb: read
          record: apiserver_request:burnrate6h
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[1d]))
                -
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le=~"1(\\.0)?"}[1d]))
              )
              +
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[1d]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[1d]))
          labels:
            verb: write
          record: apiserver_request:burnrate1d
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[1h]))
                -
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le=~"1(\\.0)?"}[1h]))
              )
              +
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[1h]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[1h]))
          labels:
            verb: write
          record: apiserver_request:burnrate1h
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[2h]))
                -
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le=~"1(\\.0)?"}[2h]))
              )
              +
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[2h]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[2h]))
          labels:
            verb: write
          record: apiserver_request:burnrate2h
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[30m]))
                -
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le=~"1(\\.0)?"}[30m]))
              )
              +
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[30m]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[30m]))
          labels:
            verb: write
          record: apiserver_request:burnrate30m
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[3d]))
                -
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le=~"1(\\.0)?"}[3d]))
              )
              +
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[3d]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[3d]))
          labels:
            verb: write
          record: apiserver_request:burnrate3d
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[5m]))
                -
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le=~"1(\\.0)?"}[5m]))
              )
              +
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[5m]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[5m]))
          labels:
            verb: write
          record: apiserver_request:burnrate5m
        - expr: |
            (
              (
                # too slow
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[6h]))
                -
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le=~"1(\\.0)?"}[6h]))
              )
              +
              sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[6h]))
            )
            /
            sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[6h]))
          labels:
            verb: write
          record: apiserver_request:burnrate6h
      - name: kube-apiserver-histogram.rules
        rules:
        - expr: |
            histogram_quantile(0.99, sum by (cluster, le, resource) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[5m]))) > 0
          labels:
            quantile: "0.99"
            verb: read
          record: cluster_quantile:apiserver_request_sli_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.99, sum by (cluster, le, resource) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[5m]))) > 0
          labels:
            quantile: "0.99"
            verb: write
          record: cluster_quantile:apiserver_request_sli_duration_seconds:histogram_quantile
      - name: k8s.rules.container_cpu_usage_seconds_total
        rules:
        - expr: |
            sum by (cluster, namespace, pod, container) (
              rate(container_cpu_usage_seconds_total{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}[5m])
            ) * on (cluster, namespace, pod) group_left(node) topk by (cluster, namespace, pod) (
              1, max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
            )
          record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate5m
        - expr: |
            sum by (cluster, namespace, pod, container) (
              irate(container_cpu_usage_seconds_total{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}[5m])
            ) * on (cluster, namespace, pod) group_left(node) topk by (cluster, namespace, pod) (
              1, max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
            )
          record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate
      - name: k8s.rules.container_memory_working_set_bytes
        rules:
        - expr: |
            container_memory_working_set_bytes{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}
            * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
              max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
            )
          record: node_namespace_pod_container:container_memory_working_set_bytes
      - name: k8s.rules.container_memory_rss
        rules:
        - expr: |
            container_memory_rss{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}
            * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
              max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
            )
          record: node_namespace_pod_container:container_memory_rss
      - name: k8s.rules.container_memory_cache
        rules:
        - expr: |
            container_memory_cache{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}
            * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
              max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
            )
          record: node_namespace_pod_container:container_memory_cache
      - name: k8s.rules.container_memory_swap
        rules:
        - expr: |
            container_memory_swap{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}
            * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
              max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
            )
          record: node_namespace_pod_container:container_memory_swap
      - name: k8s.rules.container_memory_requests
        rules:
        - expr: |
            kube_pod_container_resource_requests{resource="memory",job="kube-state-metrics"}  * on (namespace, pod, cluster)
            group_left() max by (namespace, pod, cluster) (
              (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
            )
          record: cluster:namespace:pod_memory:active:kube_pod_container_resource_requests
        - expr: |
            sum by (namespace, cluster) (
                sum by (namespace, pod, cluster) (
                    max by (namespace, pod, container, cluster) (
                      kube_pod_container_resource_requests{resource="memory",job="kube-state-metrics"}
                    ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                      kube_pod_status_phase{phase=~"Pending|Running"} == 1
                    )
                )
            )
          record: namespace_memory:kube_pod_container_resource_requests:sum
      - name: k8s.rules.container_cpu_requests
        rules:
        - expr: |
            kube_pod_container_resource_requests{resource="cpu",job="kube-state-metrics"}  * on (namespace, pod, cluster)
            group_left() max by (namespace, pod, cluster) (
              (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
            )
          record: cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests
        - expr: |
            sum by (namespace, cluster) (
                sum by (namespace, pod, cluster) (
                    max by (namespace, pod, container, cluster) (
                      kube_pod_container_resource_requests{resource="cpu",job="kube-state-metrics"}
                    ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                      kube_pod_status_phase{phase=~"Pending|Running"} == 1
                    )
                )
            )
          record: namespace_cpu:kube_pod_container_resource_requests:sum
      - name: k8s.rules.container_memory_limits
        rules:
        - expr: |
            kube_pod_container_resource_limits{resource="memory",job="kube-state-metrics"}  * on (namespace, pod, cluster)
            group_left() max by (namespace, pod, cluster) (
              (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
            )
          record: cluster:namespace:pod_memory:active:kube_pod_container_resource_limits
        - expr: |
            sum by (namespace, cluster) (
                sum by (namespace, pod, cluster) (
                    max by (namespace, pod, container, cluster) (
                      kube_pod_container_resource_limits{resource="memory",job="kube-state-metrics"}
                    ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                      kube_pod_status_phase{phase=~"Pending|Running"} == 1
                    )
                )
            )
          record: namespace_memory:kube_pod_container_resource_limits:sum
      - name: k8s.rules.container_cpu_limits
        rules:
        - expr: |
            kube_pod_container_resource_limits{resource="cpu",job="kube-state-metrics"}  * on (namespace, pod, cluster)
            group_left() max by (namespace, pod, cluster) (
              (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
            )
          record: cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits
        - expr: |
            sum by (namespace, cluster) (
                sum by (namespace, pod, cluster) (
                    max by (namespace, pod, container, cluster) (
                      kube_pod_container_resource_limits{resource="cpu",job="kube-state-metrics"}
                    ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                      kube_pod_status_phase{phase=~"Pending|Running"} == 1
                    )
                )
            )
          record: namespace_cpu:kube_pod_container_resource_limits:sum
      - name: k8s.rules.pod_owner
        rules:
        - expr: |
            max by (cluster, namespace, workload, pod) (
              label_replace(
                label_replace(
                  kube_pod_owner{job="kube-state-metrics", owner_kind="ReplicaSet"},
                  "replicaset", "$1", "owner_name", "(.*)"
                ) * on (cluster, replicaset, namespace) group_left(owner_name) topk by(cluster, replicaset, namespace) (
                  1, max by (cluster, replicaset, namespace, owner_name) (
                    kube_replicaset_owner{job="kube-state-metrics", owner_kind=""}
                  )
                ),
                "workload", "$1", "replicaset", "(.*)"
              )
            )
          labels:
            workload_type: replicaset
          record: namespace_workload_pod:kube_pod_owner:relabel
        - expr: |
            max by (cluster, namespace, workload, pod) (
              label_replace(
                label_replace(
                  kube_pod_owner{job="kube-state-metrics", owner_kind="ReplicaSet"},
                  "replicaset", "$1", "owner_name", "(.*)"
                ) * on(replicaset, namespace, cluster) group_left(owner_name) topk by(cluster, replicaset, namespace) (
                  1, max by (cluster, replicaset, namespace, owner_name) (
                    kube_replicaset_owner{job="kube-state-metrics", owner_kind="Deployment"}
                  )
                ),
                "workload", "$1", "owner_name", "(.*)"
              )
            )
          labels:
            workload_type: deployment
          record: namespace_workload_pod:kube_pod_owner:relabel
        - expr: |
            max by (cluster, namespace, workload, pod) (
              label_replace(
                kube_pod_owner{job="kube-state-metrics", owner_kind="DaemonSet"},
                "workload", "$1", "owner_name", "(.*)"
              )
            )
          labels:
            workload_type: daemonset
          record: namespace_workload_pod:kube_pod_owner:relabel
        - expr: |
            max by (cluster, namespace, workload, pod) (
              label_replace(
                kube_pod_owner{job="kube-state-metrics", owner_kind="StatefulSet"},
              "workload", "$1", "owner_name", "(.*)")
            )
          labels:
            workload_type: statefulset
          record: namespace_workload_pod:kube_pod_owner:relabel
        - expr: |
            group by (cluster, namespace, workload, pod) (
              label_join(
                group by (cluster, namespace, job_name, pod, owner_name) (
                  label_join(
                    kube_pod_owner{job="kube-state-metrics", owner_kind="Job"}
                  , "job_name", "", "owner_name")
                )
                * on (cluster, namespace, job_name) group_left()
                group by (cluster, namespace, job_name) (
                  kube_job_owner{job="kube-state-metrics", owner_kind=~"Pod|"}
                )
              , "workload", "", "owner_name")
            )
          labels:
            workload_type: job
          record: namespace_workload_pod:kube_pod_owner:relabel
        - expr: |
            max by (cluster, namespace, workload, pod) (
              label_replace(
                kube_pod_owner{job="kube-state-metrics", owner_kind="", owner_name=""},
              "workload", "$1", "pod", "(.+)")
            )
          labels:
            workload_type: barepod
          record: namespace_workload_pod:kube_pod_owner:relabel
        - expr: |
            max by (cluster, namespace, workload, pod) (
              label_replace(
                kube_pod_owner{job="kube-state-metrics", owner_kind="Node"},
              "workload", "$1", "pod", "(.+)")
            )
          labels:
            workload_type: staticpod
          record: namespace_workload_pod:kube_pod_owner:relabel
        - expr: |
            group by (cluster, namespace, workload, workload_type, pod) (
              label_join(
                label_join(
                  group by (cluster, namespace, job_name, pod) (
                    label_join(
                      kube_pod_owner{job="kube-state-metrics", owner_kind="Job"}
                    , "job_name", "", "owner_name")
                  )
                  * on (cluster, namespace, job_name) group_left(owner_kind, owner_name)
                  group by (cluster, namespace, job_name, owner_kind, owner_name) (
                    kube_job_owner{job="kube-state-metrics", owner_kind!="Pod", owner_kind!=""}
                  )
                , "workload", "", "owner_name")
              , "workload_type", "", "owner_kind")

              OR

              label_replace(
                label_replace(
                  label_replace(
                    kube_pod_owner{job="kube-state-metrics", owner_kind="ReplicaSet"}
                    , "replicaset", "$1", "owner_name", "(.+)"
                  )
                  * on(cluster, namespace, replicaset) group_left(owner_kind, owner_name)
                  group by (cluster, namespace, replicaset, owner_kind, owner_name) (
                    kube_replicaset_owner{job="kube-state-metrics", owner_kind!="Deployment", owner_kind!=""}
                  )
                , "workload", "$1", "owner_name", "(.+)")
                OR
                label_replace(
                  group by (cluster, namespace, pod, owner_name, owner_kind) (
                    kube_pod_owner{job="kube-state-metrics", owner_kind!="ReplicaSet", owner_kind!="DaemonSet", owner_kind!="StatefulSet", owner_kind!="Job", owner_kind!="Node", owner_kind!=""}
                  )
                  , "workload", "$1", "owner_name", "(.+)"
                )
              , "workload_type", "$1", "owner_kind", "(.+)")
            )
          record: namespace_workload_pod:kube_pod_owner:relabel
      - name: kube-scheduler.rules
        rules:
        - expr: |
            histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.99"
          record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.99"
          record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.99, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.99"
          record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.9, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.9"
          record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.9, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.9"
          record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.9, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.9"
          record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.5, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.5"
          record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.5, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.5"
          record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(0.5, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
          labels:
            quantile: "0.5"
          record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile
      - name: node.rules
        rules:
        - expr: |
            topk by(cluster, namespace, pod) (1,
              max by (cluster, node, namespace, pod) (
                label_replace(kube_pod_info{job="kube-state-metrics",node!=""}, "pod", "$1", "pod", "(.*)")
            ))
          record: 'node_namespace_pod:kube_pod_info:'
        - expr: |
            count by (cluster, node) (
              node_cpu_seconds_total{mode="idle",job="node-exporter"}
              * on (cluster, namespace, pod) group_left(node)
              topk by(cluster, namespace, pod) (1, node_namespace_pod:kube_pod_info:)
            )
          record: node:node_num_cpu:sum
        - expr: |
            sum(
              node_memory_MemAvailable_bytes{job="node-exporter"} or
              (
                node_memory_Buffers_bytes{job="node-exporter"} +
                node_memory_Cached_bytes{job="node-exporter"} +
                node_memory_MemFree_bytes{job="node-exporter"} +
                node_memory_Slab_bytes{job="node-exporter"}
              )
            ) by (cluster)
          record: :node_memory_MemAvailable_bytes:sum
        - expr: |
            avg by (cluster, node) (
              sum without (mode) (
                rate(node_cpu_seconds_total{mode!="idle",mode!="iowait",mode!="steal",job="node-exporter"}[5m])
              )
            )
          record: node:node_cpu_utilization:ratio_rate5m
        - expr: |
            avg by (cluster) (
              node:node_cpu_utilization:ratio_rate5m
            )
          record: cluster:node_cpu:ratio_rate5m
      - name: kubelet.rules
        rules:
        - expr: |
            histogram_quantile(
              0.99,
              sum(rate(kubelet_pleg_relist_duration_seconds_bucket{job="kubelet", metrics_path="/metrics"}[5m])) by (cluster, instance, le)
              * on(cluster, instance) group_left (node)
              max by (cluster, instance, node) (kubelet_node_name{job="kubelet", metrics_path="/metrics"})
            )
          labels:
            quantile: "0.99"
          record: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(
              0.9,
              sum(rate(kubelet_pleg_relist_duration_seconds_bucket{job="kubelet", metrics_path="/metrics"}[5m])) by (cluster, instance, le)
              * on(cluster, instance) group_left (node)
              max by (cluster, instance, node) (kubelet_node_name{job="kubelet", metrics_path="/metrics"})
            )
          labels:
            quantile: "0.9"
          record: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile
        - expr: |
            histogram_quantile(
              0.5,
              sum(rate(kubelet_pleg_relist_duration_seconds_bucket{job="kubelet", metrics_path="/metrics"}[5m])) by (cluster, instance, le)
              * on(cluster, instance) group_left (node)
              max by (cluster, instance, node) (kubelet_node_name{job="kubelet", metrics_path="/metrics"})
            )
          labels:
            quantile: "0.5"
          record: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile
    monitoring-node-exporter-rules-9eca3679-bb31-44cd-9b67-4ca4e1250d52.yaml: |
      groups:
      - name: node-exporter
        rules:
        - alert: NodeFilesystemSpaceFillingUp
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              space left and is filling up.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemspacefillingup
            summary: Filesystem is predicted to run out of space within the next 24 hours.
          expr: |
            (
              node_filesystem_avail_bytes{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_size_bytes{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 15
            and
              predict_linear(node_filesystem_avail_bytes{job="node-exporter",fstype!="",mountpoint!=""}[6h], 24*60*60) < 0
            and
              node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 1h
          labels:
            severity: warning
        - alert: NodeFilesystemSpaceFillingUp
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              space left and is filling up fast.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemspacefillingup
            summary: Filesystem is predicted to run out of space within the next 4 hours.
          expr: |
            (
              node_filesystem_avail_bytes{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_size_bytes{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 10
            and
              predict_linear(node_filesystem_avail_bytes{job="node-exporter",fstype!="",mountpoint!=""}[6h], 4*60*60) < 0
            and
              node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 1h
          labels:
            severity: critical
        - alert: NodeFilesystemAlmostOutOfSpace
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              space left.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemalmostoutofspace
            summary: Filesystem has less than 5% space left.
          expr: |
            (
              node_filesystem_avail_bytes{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_size_bytes{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 5
            and
              node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 30m
          labels:
            severity: warning
        - alert: NodeFilesystemAlmostOutOfSpace
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              space left.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemalmostoutofspace
            summary: Filesystem has less than 3% space left.
          expr: |
            (
              node_filesystem_avail_bytes{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_size_bytes{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 3
            and
              node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 30m
          labels:
            severity: critical
        - alert: NodeFilesystemFilesFillingUp
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              inodes left and is filling up.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemfilesfillingup
            summary: Filesystem is predicted to run out of inodes within the next 24 hours.
          expr: |
            (
              node_filesystem_files_free{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_files{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 40
            and
              predict_linear(node_filesystem_files_free{job="node-exporter",fstype!="",mountpoint!=""}[6h], 24*60*60) < 0
            and
              node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 1h
          labels:
            severity: warning
        - alert: NodeFilesystemFilesFillingUp
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              inodes left and is filling up fast.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemfilesfillingup
            summary: Filesystem is predicted to run out of inodes within the next 4 hours.
          expr: |
            (
              node_filesystem_files_free{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_files{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 20
            and
              predict_linear(node_filesystem_files_free{job="node-exporter",fstype!="",mountpoint!=""}[6h], 4*60*60) < 0
            and
              node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 1h
          labels:
            severity: critical
        - alert: NodeFilesystemAlmostOutOfFiles
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              inodes left.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemalmostoutoffiles
            summary: Filesystem has less than 5% inodes left.
          expr: |
            (
              node_filesystem_files_free{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_files{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 5
            and
              node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 1h
          labels:
            severity: warning
        - alert: NodeFilesystemAlmostOutOfFiles
          annotations:
            description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint
              }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available
              inodes left.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemalmostoutoffiles
            summary: Filesystem has less than 3% inodes left.
          expr: |
            (
              node_filesystem_files_free{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_files{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 3
            and
              node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
            )
          for: 1h
          labels:
            severity: critical
        - alert: NodeNetworkReceiveErrs
          annotations:
            description: '{{ $labels.instance }} interface {{ $labels.device }} has encountered
              {{ printf "%.0f" $value }} receive errors in the last two minutes.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodenetworkreceiveerrs
            summary: Network interface is reporting many receive errors.
          expr: |
            rate(node_network_receive_errs_total{job="node-exporter"}[2m]) / rate(node_network_receive_packets_total{job="node-exporter"}[2m]) > 0.01
          for: 1h
          labels:
            severity: warning
        - alert: NodeNetworkTransmitErrs
          annotations:
            description: '{{ $labels.instance }} interface {{ $labels.device }} has encountered
              {{ printf "%.0f" $value }} transmit errors in the last two minutes.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodenetworktransmiterrs
            summary: Network interface is reporting many transmit errors.
          expr: |
            rate(node_network_transmit_errs_total{job="node-exporter"}[2m]) / rate(node_network_transmit_packets_total{job="node-exporter"}[2m]) > 0.01
          for: 1h
          labels:
            severity: warning
        - alert: NodeHighNumberConntrackEntriesUsed
          annotations:
            description: '{{ $labels.instance }} {{ $value | humanizePercentage }} of conntrack
              entries are used.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodehighnumberconntrackentriesused
            summary: Number of conntrack are getting close to the limit.
          expr: |
            (node_nf_conntrack_entries{job="node-exporter"} / node_nf_conntrack_entries_limit) > 0.75
          labels:
            severity: warning
        - alert: NodeTextFileCollectorScrapeError
          annotations:
            description: Node Exporter text file collector on {{ $labels.instance }} failed
              to scrape.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodetextfilecollectorscrapeerror
            summary: Node Exporter text file collector failed to scrape.
          expr: |
            node_textfile_scrape_error{job="node-exporter"} == 1
          labels:
            severity: warning
        - alert: NodeClockSkewDetected
          annotations:
            description: Clock at {{ $labels.instance }} is out of sync by more than 0.05s.
              Ensure NTP is configured correctly on this host.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodeclockskewdetected
            summary: Clock skew detected.
          expr: |
            (
              node_timex_offset_seconds{job="node-exporter"} > 0.05
            and
              deriv(node_timex_offset_seconds{job="node-exporter"}[5m]) >= 0
            )
            or
            (
              node_timex_offset_seconds{job="node-exporter"} < -0.05
            and
              deriv(node_timex_offset_seconds{job="node-exporter"}[5m]) <= 0
            )
          for: 10m
          labels:
            severity: warning
        - alert: NodeClockNotSynchronising
          annotations:
            description: Clock at {{ $labels.instance }} is not synchronising. Ensure NTP
              is configured on this host.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodeclocknotsynchronising
            summary: Clock not synchronising.
          expr: |
            min_over_time(node_timex_sync_status{job="node-exporter"}[5m]) == 0
            and
            node_timex_maxerror_seconds{job="node-exporter"} >= 16
          for: 10m
          labels:
            severity: warning
        - alert: NodeRAIDDegraded
          annotations:
            description: RAID array '{{ $labels.device }}' at {{ $labels.instance }} is
              in degraded state due to one or more disks failures. Number of spare drives
              is insufficient to fix issue automatically.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/noderaiddegraded
            summary: RAID Array is degraded.
          expr: |
            node_md_disks_required{job="node-exporter",device=~"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)"} - ignoring (state) (node_md_disks{state="active",job="node-exporter",device=~"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)"}) > 0
          for: 15m
          labels:
            severity: critical
        - alert: NodeRAIDDiskFailure
          annotations:
            description: At least one device in RAID array at {{ $labels.instance }} failed.
              Array '{{ $labels.device }}' needs attention and possibly a disk swap.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/noderaiddiskfailure
            summary: Failed device in RAID array.
          expr: |
            node_md_disks{state="failed",job="node-exporter",device=~"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)"} > 0
          labels:
            severity: warning
        - alert: NodeFileDescriptorLimit
          annotations:
            description: File descriptors limit at {{ $labels.instance }} is currently at
              {{ printf "%.2f" $value }}%.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefiledescriptorlimit
            summary: Kernel is predicted to exhaust file descriptors limit soon.
          expr: |
            (
              node_filefd_allocated{job="node-exporter"} * 100 / node_filefd_maximum{job="node-exporter"} > 70
            )
          for: 15m
          labels:
            severity: warning
        - alert: NodeFileDescriptorLimit
          annotations:
            description: File descriptors limit at {{ $labels.instance }} is currently at
              {{ printf "%.2f" $value }}%.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefiledescriptorlimit
            summary: Kernel is predicted to exhaust file descriptors limit soon.
          expr: |
            (
              node_filefd_allocated{job="node-exporter"} * 100 / node_filefd_maximum{job="node-exporter"} > 90
            )
          for: 15m
          labels:
            severity: critical
        - alert: NodeCPUHighUsage
          annotations:
            description: |
              CPU usage at {{ $labels.instance }} has been above 90% for the last 15 minutes, is currently at {{ printf "%.2f" $value }}%.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodecpuhighusage
            summary: High CPU usage.
          expr: |
            sum without(mode) (avg without (cpu) (rate(node_cpu_seconds_total{job="node-exporter", mode!~"idle|iowait"}[2m]))) * 100 > 90
          for: 15m
          labels:
            severity: info
        - alert: NodeSystemSaturation
          annotations:
            description: |
              System load per core at {{ $labels.instance }} has been above 2 for the last 15 minutes, is currently at {{ printf "%.2f" $value }}.
              This might indicate this instance resources saturation and can cause it becoming unresponsive.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodesystemsaturation
            summary: System saturated, load per core is very high.
          expr: |
            node_load1{job="node-exporter"}
            / count without (cpu, mode) (node_cpu_seconds_total{job="node-exporter", mode="idle"}) > 2
          for: 15m
          labels:
            severity: warning
        - alert: NodeMemoryMajorPagesFaults
          annotations:
            description: |
              Memory major pages are occurring at very high rate at {{ $labels.instance }}, 500 major page faults per second for the last 15 minutes, is currently at {{ printf "%.2f" $value }}.
              Please check that there is enough memory available at this instance.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodememorymajorpagesfaults
            summary: Memory major page faults are occurring at very high rate.
          expr: |
            rate(node_vmstat_pgmajfault{job="node-exporter"}[5m]) > 500
          for: 15m
          labels:
            severity: warning
        - alert: NodeMemoryHighUtilization
          annotations:
            description: |
              Memory is filling up at {{ $labels.instance }}, has been above 90% for the last 15 minutes, is currently at {{ printf "%.2f" $value }}%.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodememoryhighutilization
            summary: Host is running out of memory.
          expr: |
            100 - (node_memory_MemAvailable_bytes{job="node-exporter"} / node_memory_MemTotal_bytes{job="node-exporter"} * 100) > 90
          for: 15m
          labels:
            severity: warning
        - alert: NodeDiskIOSaturation
          annotations:
            description: |
              Disk IO queue (aqu-sq) is high on {{ $labels.device }} at {{ $labels.instance }}, has been above 10 for the last 30 minutes, is currently at {{ printf "%.2f" $value }}.
              This symptom might indicate disk saturation.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodediskiosaturation
            summary: Disk IO queue is high.
          expr: |
            rate(node_disk_io_time_weighted_seconds_total{job="node-exporter", device=~"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)"}[5m]) > 10
          for: 30m
          labels:
            severity: warning
        - alert: NodeSystemdServiceFailed
          annotations:
            description: Systemd service {{ $labels.name }} has entered failed state at
              {{ $labels.instance }}
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodesystemdservicefailed
            summary: Systemd service has entered failed state.
          expr: |
            node_systemd_unit_state{job="node-exporter", state="failed"} == 1
          for: 5m
          labels:
            severity: warning
        - alert: NodeSystemdServiceCrashlooping
          annotations:
            description: Systemd service {{ $labels.name }} has being restarted too many
              times at {{ $labels.instance }} for the last 15 minutes. Please check if service
              is crash looping.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodesystemdservicecrashlooping
            summary: Systemd service keeps restaring, possibly crash looping.
          expr: |
            increase(node_systemd_service_restart_total{job="node-exporter"}[5m]) > 2
          for: 15m
          labels:
            severity: warning
        - alert: NodeBondingDegraded
          annotations:
            description: Bonding interface {{ $labels.master }} on {{ $labels.instance }}
              is in degraded state due to one or more slave failures.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodebondingdegraded
            summary: Bonding interface is degraded
          expr: |
            (node_bonding_slaves - node_bonding_active) != 0
          for: 5m
          labels:
            severity: warning
      - name: node-exporter.rules
        rules:
        - expr: |
            count without (cpu, mode) (
              node_cpu_seconds_total{job="node-exporter",mode="idle"}
            )
          record: instance:node_num_cpu:sum
        - expr: |
            1 - avg without (cpu) (
              sum without (mode) (rate(node_cpu_seconds_total{job="node-exporter", mode=~"idle|iowait|steal"}[5m]))
            )
          record: instance:node_cpu_utilisation:rate5m
        - expr: |
            (
              node_load1{job="node-exporter"}
            /
              instance:node_num_cpu:sum{job="node-exporter"}
            )
          record: instance:node_load1_per_cpu:ratio
        - expr: |
            1 - (
              (
                node_memory_MemAvailable_bytes{job="node-exporter"}
                or
                (
                  node_memory_Buffers_bytes{job="node-exporter"}
                  +
                  node_memory_Cached_bytes{job="node-exporter"}
                  +
                  node_memory_MemFree_bytes{job="node-exporter"}
                  +
                  node_memory_Slab_bytes{job="node-exporter"}
                )
              )
            /
              node_memory_MemTotal_bytes{job="node-exporter"}
            )
          record: instance:node_memory_utilisation:ratio
        - expr: |
            rate(node_vmstat_pgmajfault{job="node-exporter"}[5m])
          record: instance:node_vmstat_pgmajfault:rate5m
        - expr: |
            rate(node_disk_io_time_seconds_total{job="node-exporter", device=~"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)"}[5m])
          record: instance_device:node_disk_io_time_seconds:rate5m
        - expr: |
            rate(node_disk_io_time_weighted_seconds_total{job="node-exporter", device=~"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)"}[5m])
          record: instance_device:node_disk_io_time_weighted_seconds:rate5m
        - expr: |
            sum without (device) (
              rate(node_network_receive_bytes_total{job="node-exporter", device!="lo"}[5m])
            )
          record: instance:node_network_receive_bytes_excluding_lo:rate5m
        - expr: |
            sum without (device) (
              rate(node_network_transmit_bytes_total{job="node-exporter", device!="lo"}[5m])
            )
          record: instance:node_network_transmit_bytes_excluding_lo:rate5m
        - expr: |
            sum without (device) (
              rate(node_network_receive_drop_total{job="node-exporter", device!="lo"}[5m])
            )
          record: instance:node_network_receive_drop_excluding_lo:rate5m
        - expr: |
            sum without (device) (
              rate(node_network_transmit_drop_total{job="node-exporter", device!="lo"}[5m])
            )
          record: instance:node_network_transmit_drop_excluding_lo:rate5m
    monitoring-prometheus-k8s-prometheus-rules-8bd3b4e8-5868-4bd2-96fa-def3ce6d598c.yaml: |
      groups:
      - name: prometheus
        rules:
        - alert: PrometheusBadConfig
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to
              reload its configuration.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusbadconfig
            summary: Failed Prometheus configuration reload.
          expr: |
            # Without max_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            max_over_time(prometheus_config_last_reload_successful{job="prometheus-k8s",namespace="monitoring"}[5m]) == 0
          for: 10m
          labels:
            severity: critical
        - alert: PrometheusSDRefreshFailure
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to
              refresh SD with mechanism {{$labels.mechanism}}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheussdrefreshfailure
            summary: Failed Prometheus SD refresh.
          expr: |
            increase(prometheus_sd_refresh_failures_total{job="prometheus-k8s",namespace="monitoring"}[10m]) > 0
          for: 20m
          labels:
            severity: warning
        - alert: PrometheusKubernetesListWatchFailures
          annotations:
            description: Kubernetes service discovery of Prometheus {{$labels.namespace}}/{{$labels.pod}}
              is experiencing {{ printf "%.0f" $value }} failures with LIST/WATCH requests
              to the Kubernetes API in the last 5 minutes.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheuskuberneteslistwatchfailures
            summary: Requests in Kubernetes SD are failing.
          expr: |
            increase(prometheus_sd_kubernetes_failures_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusNotificationQueueRunningFull
          annotations:
            description: Alert notification queue of Prometheus {{$labels.namespace}}/{{$labels.pod}}
              is running full.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusnotificationqueuerunningfull
            summary: Prometheus alert notification queue predicted to run full in less than
              30m.
          expr: |
            # Without min_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            (
              predict_linear(prometheus_notifications_queue_length{job="prometheus-k8s",namespace="monitoring"}[5m], 60 * 30)
            >
              min_over_time(prometheus_notifications_queue_capacity{job="prometheus-k8s",namespace="monitoring"}[5m])
            )
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusErrorSendingAlertsToSomeAlertmanagers
          annotations:
            description: '{{ printf "%.1f" $value }}% of alerts sent by Prometheus {{$labels.namespace}}/{{$labels.pod}}
              to Alertmanager {{$labels.alertmanager}} were affected by errors.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheuserrorsendingalertstosomealertmanagers
            summary: More than 1% of alerts sent by Prometheus to a specific Alertmanager
              were affected by errors.
          expr: |
            (
              rate(prometheus_notifications_errors_total{job="prometheus-k8s",namespace="monitoring"}[5m])
            /
              rate(prometheus_notifications_sent_total{job="prometheus-k8s",namespace="monitoring"}[5m])
            )
            * 100
            > 1
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusNotConnectedToAlertmanagers
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is not connected
              to any Alertmanagers.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusnotconnectedtoalertmanagers
            summary: Prometheus is not connected to any Alertmanagers.
          expr: |
            # Without max_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            max_over_time(prometheus_notifications_alertmanagers_discovered{job="prometheus-k8s",namespace="monitoring"}[5m]) < 1
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusTSDBReloadsFailing
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has detected {{$value
              | humanize}} reload failures over the last 3h.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheustsdbreloadsfailing
            summary: Prometheus has issues reloading blocks from disk.
          expr: |
            increase(prometheus_tsdb_reloads_failures_total{job="prometheus-k8s",namespace="monitoring"}[3h]) > 0
          for: 4h
          labels:
            severity: warning
        - alert: PrometheusTSDBCompactionsFailing
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has detected {{$value
              | humanize}} compaction failures over the last 3h.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheustsdbcompactionsfailing
            summary: Prometheus has issues compacting blocks.
          expr: |
            increase(prometheus_tsdb_compactions_failed_total{job="prometheus-k8s",namespace="monitoring"}[3h]) > 0
          for: 4h
          labels:
            severity: warning
        - alert: PrometheusNotIngestingSamples
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is not ingesting
              samples.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusnotingestingsamples
            summary: Prometheus is not ingesting samples.
          expr: |
            (
              sum without(type) (rate(prometheus_tsdb_head_samples_appended_total{job="prometheus-k8s",namespace="monitoring"}[5m])) <= 0
            and
              (
                sum without(scrape_job) (prometheus_target_metadata_cache_entries{job="prometheus-k8s",namespace="monitoring"}) > 0
              or
                sum without(rule_group) (prometheus_rule_group_rules{job="prometheus-k8s",namespace="monitoring"}) > 0
              )
            )
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusDuplicateTimestamps
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is dropping {{
              printf "%.4g" $value  }} samples/s with different values but duplicated timestamp.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusduplicatetimestamps
            summary: Prometheus is dropping samples with duplicate timestamps.
          expr: |
            rate(prometheus_target_scrapes_sample_duplicate_timestamp_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusOutOfOrderTimestamps
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is dropping {{
              printf "%.4g" $value  }} samples/s with timestamps arriving out of order.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusoutofordertimestamps
            summary: Prometheus drops samples with out-of-order timestamps.
          expr: |
            rate(prometheus_target_scrapes_sample_out_of_order_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusRemoteStorageFailures
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} failed to send
              {{ printf "%.1f" $value }}% of the samples to {{ $labels.remote_name}}:{{
              $labels.url }}
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusremotestoragefailures
            summary: Prometheus fails to send samples to remote storage.
          expr: |
            (
              (rate(prometheus_remote_storage_failed_samples_total{job="prometheus-k8s",namespace="monitoring"}[5m]) or rate(prometheus_remote_storage_samples_failed_total{job="prometheus-k8s",namespace="monitoring"}[5m]))
            /
              (
                (rate(prometheus_remote_storage_failed_samples_total{job="prometheus-k8s",namespace="monitoring"}[5m]) or rate(prometheus_remote_storage_samples_failed_total{job="prometheus-k8s",namespace="monitoring"}[5m]))
              +
                (rate(prometheus_remote_storage_succeeded_samples_total{job="prometheus-k8s",namespace="monitoring"}[5m]) or rate(prometheus_remote_storage_samples_total{job="prometheus-k8s",namespace="monitoring"}[5m]))
              )
            )
            * 100
            > 1
          for: 15m
          labels:
            severity: critical
        - alert: PrometheusRemoteWriteBehind
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write is
              {{ printf "%.1f" $value }}s behind for {{ $labels.remote_name}}:{{ $labels.url
              }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusremotewritebehind
            summary: Prometheus remote write is behind.
          expr: |
            # Without max_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            (
              max_over_time(prometheus_remote_storage_queue_highest_timestamp_seconds{job="prometheus-k8s",namespace="monitoring"}[5m])
            -
              max_over_time(prometheus_remote_storage_queue_highest_sent_timestamp_seconds{job="prometheus-k8s",namespace="monitoring"}[5m])
            )
            > 120
          for: 15m
          labels:
            severity: critical
        - alert: PrometheusRemoteWriteDesiredShards
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write desired
              shards calculation wants to run {{ $value }} shards for queue {{ $labels.remote_name}}:{{
              $labels.url }}, which is more than the max of {{ printf `prometheus_remote_storage_shards_max{instance="%s",job="prometheus-k8s",namespace="monitoring"}`
              $labels.instance | query | first | value }}.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusremotewritedesiredshards
            summary: Prometheus remote write desired shards calculation wants to run more
              than configured max shards.
          expr: |
            # Without max_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            (
              max_over_time(prometheus_remote_storage_shards_desired{job="prometheus-k8s",namespace="monitoring"}[5m])
            >
              max_over_time(prometheus_remote_storage_shards_max{job="prometheus-k8s",namespace="monitoring"}[5m])
            )
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusRuleFailures
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to
              evaluate {{ printf "%.0f" $value }} rules in the last 5m.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusrulefailures
            summary: Prometheus is failing rule evaluations.
          expr: |
            increase(prometheus_rule_evaluation_failures_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 15m
          labels:
            severity: critical
        - alert: PrometheusMissingRuleEvaluations
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has missed {{
              printf "%.0f" $value }} rule group evaluations in the last 5m.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusmissingruleevaluations
            summary: Prometheus is missing rule evaluations due to slow rule group evaluation.
          expr: |
            increase(prometheus_rule_group_iterations_missed_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusTargetLimitHit
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has dropped {{
              printf "%.0f" $value }} targets because the number of targets exceeded the
              configured target_limit.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheustargetlimithit
            summary: Prometheus has dropped targets because some scrape configs have exceeded
              the targets limit.
          expr: |
            increase(prometheus_target_scrape_pool_exceeded_target_limit_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusLabelLimitHit
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has dropped {{
              printf "%.0f" $value }} targets because some samples exceeded the configured
              label_limit, label_name_length_limit or label_value_length_limit.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheuslabellimithit
            summary: Prometheus has dropped targets because some scrape configs have exceeded
              the labels limit.
          expr: |
            increase(prometheus_target_scrape_pool_exceeded_label_limits_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusScrapeBodySizeLimitHit
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed {{
              printf "%.0f" $value }} scrapes in the last 5m because some targets exceeded
              the configured body_size_limit.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusscrapebodysizelimithit
            summary: Prometheus has dropped some targets that exceeded body size limit.
          expr: |
            increase(prometheus_target_scrapes_exceeded_body_size_limit_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusScrapeSampleLimitHit
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed {{
              printf "%.0f" $value }} scrapes in the last 5m because some targets exceeded
              the configured sample_limit.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusscrapesamplelimithit
            summary: Prometheus has failed scrapes that have exceeded the configured sample
              limit.
          expr: |
            increase(prometheus_target_scrapes_exceeded_sample_limit_total{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusTargetSyncFailure
          annotations:
            description: '{{ printf "%.0f" $value }} targets in Prometheus {{$labels.namespace}}/{{$labels.pod}}
              have failed to sync because invalid configuration was supplied.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheustargetsyncfailure
            summary: Prometheus has failed to sync targets.
          expr: |
            increase(prometheus_target_sync_failed_total{job="prometheus-k8s",namespace="monitoring"}[30m]) > 0
          for: 5m
          labels:
            severity: critical
        - alert: PrometheusHighQueryLoad
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} query API has
              less than 20% available capacity in its query engine for the last 15 minutes.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheushighqueryload
            summary: Prometheus is reaching its maximum capacity serving concurrent requests.
          expr: |
            avg_over_time(prometheus_engine_queries{job="prometheus-k8s",namespace="monitoring"}[5m]) / max_over_time(prometheus_engine_queries_concurrent_max{job="prometheus-k8s",namespace="monitoring"}[5m]) > 0.8
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusErrorSendingAlertsToAnyAlertmanager
          annotations:
            description: '{{ printf "%.1f" $value }}% minimum errors while sending alerts
              from Prometheus {{$labels.namespace}}/{{$labels.pod}} to any Alertmanager.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheuserrorsendingalertstoanyalertmanager
            summary: Prometheus encounters more than 3% errors sending alerts to any Alertmanager.
          expr: |
            min without (alertmanager) (
              rate(prometheus_notifications_errors_total{job="prometheus-k8s",namespace="monitoring",alertmanager!~``}[5m])
            /
              rate(prometheus_notifications_sent_total{job="prometheus-k8s",namespace="monitoring",alertmanager!~``}[5m])
            )
            * 100
            > 3
          for: 15m
          labels:
            severity: critical
    monitoring-prometheus-operator-rules-8a5c5f73-efb6-41d8-9ec8-83ad85eb4bd2.yaml: |
      groups:
      - name: prometheus-operator
        rules:
        - alert: PrometheusOperatorListErrors
          annotations:
            description: Errors while performing List operations in controller {{$labels.controller}}
              in {{$labels.namespace}} namespace.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatorlisterrors
            summary: Errors while performing list operations in controller.
          expr: |
            (sum by (cluster,controller,namespace) (rate(prometheus_operator_list_operations_failed_total{job="prometheus-operator",namespace="monitoring"}[10m])) / sum by (cluster,controller,namespace) (rate(prometheus_operator_list_operations_total{job="prometheus-operator",namespace="monitoring"}[10m]))) > 0.4
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusOperatorWatchErrors
          annotations:
            description: Errors while performing watch operations in controller {{$labels.controller}}
              in {{$labels.namespace}} namespace.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatorwatcherrors
            summary: Errors while performing watch operations in controller.
          expr: |
            (sum by (cluster,controller,namespace) (rate(prometheus_operator_watch_operations_failed_total{job="prometheus-operator",namespace="monitoring"}[5m])) / sum by (cluster,controller,namespace) (rate(prometheus_operator_watch_operations_total{job="prometheus-operator",namespace="monitoring"}[5m]))) > 0.4
          for: 15m
          labels:
            severity: warning
        - alert: PrometheusOperatorSyncFailed
          annotations:
            description: Controller {{ $labels.controller }} in {{ $labels.namespace }}
              namespace fails to reconcile {{ $value }} objects.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatorsyncfailed
            summary: Last controller reconciliation failed
          expr: |
            min_over_time(prometheus_operator_syncs{status="failed",job="prometheus-operator",namespace="monitoring"}[5m]) > 0
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusOperatorReconcileErrors
          annotations:
            description: '{{ $value | humanizePercentage }} of reconciling operations failed
              for {{ $labels.controller }} controller in {{ $labels.namespace }} namespace.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatorreconcileerrors
            summary: Errors while reconciling objects.
          expr: |
            (sum by (cluster,controller,namespace) (rate(prometheus_operator_reconcile_errors_total{job="prometheus-operator",namespace="monitoring"}[5m]))) / (sum by (cluster,controller,namespace) (rate(prometheus_operator_reconcile_operations_total{job="prometheus-operator",namespace="monitoring"}[5m]))) > 0.1
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusOperatorStatusUpdateErrors
          annotations:
            description: '{{ $value | humanizePercentage }} of status update operations
              failed for {{ $labels.controller }} controller in {{ $labels.namespace }}
              namespace.'
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatorstatusupdateerrors
            summary: Errors while updating objects status.
          expr: |
            (sum by (cluster,controller,namespace) (rate(prometheus_operator_status_update_errors_total{job="prometheus-operator",namespace="monitoring"}[5m]))) / (sum by (cluster,controller,namespace) (rate(prometheus_operator_status_update_operations_total{job="prometheus-operator",namespace="monitoring"}[5m]))) > 0.1
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusOperatorNodeLookupErrors
          annotations:
            description: Errors while reconciling Prometheus in {{ $labels.namespace }}
              Namespace.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatornodelookuperrors
            summary: Errors while reconciling Prometheus.
          expr: |
            rate(prometheus_operator_node_address_lookup_errors_total{job="prometheus-operator",namespace="monitoring"}[5m]) > 0.1
          for: 10m
          labels:
            severity: warning
        - alert: PrometheusOperatorNotReady
          annotations:
            description: Prometheus operator in {{ $labels.namespace }} namespace isn't
              ready to reconcile {{ $labels.controller }} resources.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatornotready
            summary: Prometheus operator not ready
          expr: |
            min by (cluster,controller,namespace) (max_over_time(prometheus_operator_ready{job="prometheus-operator",namespace="monitoring"}[5m]) == 0)
          for: 5m
          labels:
            severity: warning
        - alert: PrometheusOperatorRejectedResources
          annotations:
            description: Prometheus operator in {{ $labels.namespace }} namespace rejected
              {{ printf "%0.0f" $value }} {{ $labels.controller }}/{{ $labels.resource }}
              resources.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatorrejectedresources
            summary: Resources rejected by Prometheus operator
          expr: |
            min_over_time(prometheus_operator_managed_resources{state="rejected",job="prometheus-operator",namespace="monitoring"}[5m]) > 0
          for: 5m
          labels:
            severity: warning
      - name: config-reloaders
        rules:
        - alert: ConfigReloaderSidecarErrors
          annotations:
            description: |-
              Errors encountered while the {{$labels.pod}} config-reloader sidecar attempts to sync config in {{$labels.namespace}} namespace.
              As a result, configuration for service running in {{$labels.pod}} may be stale and cannot be updated anymore.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/configreloadersidecarerrors
            summary: config-reloader sidecar has not had a successful reload for 10m
          expr: |
            max_over_time(reloader_last_reload_successful{namespace=~".+"}[5m]) == 0
          for: 10m
          labels:
            severity: warning
  kind: ConfigMap
  metadata:
    labels:
      managed-by: prometheus-operator
      prometheus-name: k8s
    name: prometheus-k8s-rulefiles-0
    namespace: monitoring
kind: List
metadata: {}
